####################################################################################################
##  EVE - Expressive Vector Engine
##  Copyright : EVE Project Contributors
##  SPDX-License-Identifier: BSL-1.0
####################################################################################################
name: EVE - Documentation Tests
on:
  pull_request:
    branches:
      - main

concurrency:
  group: doc-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changes:
    uses: './.github/workflows/check-changes.yml'
    with:
      directories: "['test/doc/**']"
  
  ##################################################################################################
  ## Randomized precision tests
  ##################################################################################################
  documentation:
    needs: check-changes
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/jfalcou/compilers:v7
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - { comp: clang, arch: x86    , opts: -msse2    , pch: ON}
        - { comp: clang, arch: x86    , opts: -mavx2    , pch: ON}
        - { comp: clang, arch: aarch64, opts: -Wno-psabi, pch: ON}
        - { comp: clang, arch: x86    , opts: -msse2    , pch: OFF}
        - { comp: gcc  , arch: x86    , opts: -msse2    , pch: OFF}
    steps:
      - name: Early exit if no changes
        if: ${{ needs.check-changes.outputs.has_changes == 'no' }}
        run: exit 0
      - name: Fetch current branch
        uses: actions/checkout@v4.1.1

      - name: Prepare EVE with ${{ matrix.cfg.comp }} @ ${{ matrix.cfg.arch }} with ${{ matrix.cfg.opts }}
        run:  |
          mkdir build
          cd build
          cmake ..  -G Ninja -DEVE_OPTIONS="${{ matrix.cfg.opts }}" \
                    -DCMAKE_TOOLCHAIN_FILE="../cmake/toolchain/${{ matrix.cfg.comp }}.${{ matrix.cfg.arch }}.cmake" \
                    -DEVE_USE_PCH=${{ matrix.cfg.arch }}

      - name: Compile Documentation Tests
        run:  |
          cd build
          ninja doc.exe -j 4

      - name: Running Random Sampling Tests
        run:  |
          cd build
          ctest --output-on-failure -j 4 -R ^doc.*.exe

Name                                │ Used │ Tech    │ CPUID                          │ Category                  │ Tag               │ Is sequence │ Description
────────────────────────────────────┼──────┼─────────┼────────────────────────────────┼───────────────────────────┼───────────────────┼─────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
_mm512_mask_cmp_pd_mask             │ 13   │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmp_ps_mask             │ 13   │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmp_pd_mask             │ 13   │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmp_ps_mask             │ 13   │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmp_pd_mask                │ 13   │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmp_ps_mask                │ 13   │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_range_pd                │ 10   │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm512_mask_range_ps                │ 10   │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm512_range_pd                     │ 10   │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm512_range_ps                     │ 10   │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm256_mask_range_pd                │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm256_mask_range_ps                │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm256_range_pd                     │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm256_range_ps                     │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm_mask_range_pd                   │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm_mask_range_ps                   │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                    
_mm_range_pd                        │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm_range_ps                        │ 10   │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit.                                                                                                                                                                                                                                    
_mm512_cmp_pd_mask                  │ 8    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_cmp_ps_mask                  │ 8    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cmp_pd_mask                  │ 8    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cmp_ps_mask                  │ 8    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cmp_pd_mask                     │ 8    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cmp_ps_mask                     │ 8    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cmp_pd                       │ 8    │ AVX_ALL │ AVX                            │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_cmp_ps                       │ 8    │ AVX_ALL │ AVX                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cmp_pd                          │ 8    │ AVX_ALL │ AVX                            │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cmp_ps                          │ 8    │ AVX_ALL │ AVX                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_shuffle_epi32                   │ 6    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Shuffle 32-bit integers in "a" using the control in "imm8", and store the results in "dst
_mm_shufflelo_epi16                 │ 6    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Shuffle 16-bit integers in the low 64 bits of "a" using the control in "imm8". Store the results in the low 64 bits of "dst", with the high 64 bits being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_shuffle_epi8                    │ 6    │ SSE_ALL │ SSSE3                          │ Swizzle                   │                   │ no          │ Shuffle packed 8-bit integers in "a" according to shuffle control mask in the corresponding 8-bit element of "b", and store the results in "dst
_mm256_permute_ps                   │ 5    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm256_alignr_epi8                  │ 5    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Concatenate pairs of 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_permutevar8x32_epi32         │ 5    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm_shuffle_ps                      │ 5    │ SSE_ALL │ SSE                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst
_mm_bsrli_si128                     │ 5    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift "a" right by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm512_roundscale_pd                │ 4    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_roundscale_ps                │ 4    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_round_pd                     │ 4    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" using the "rounding" parameter, and store the results as packed double-precision floating-point elements in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_round_ps                     │ 4    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" using the "rounding" parameter, and store the results as packed single-precision floating-point elements in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_shuffle_pd                      │ 4    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements using the control in "imm8", and store the results in "dst
_mm_round_pd                        │ 4    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" using the "rounding" parameter, and store the results as packed double-precision floating-point elements in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_round_ps                        │ 4    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" using the "rounding" parameter, and store the results as packed single-precision floating-point elements in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_roundscale_pd           │ 3    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_roundscale_ps           │ 3    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_permutex2var_epi64           │ 3    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm256_mask_roundscale_pd           │ 3    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_roundscale_ps           │ 3    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_roundscale_pd              │ 3    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_roundscale_ps              │ 3    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_cvtpd_ps                     │ 3    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_cvtps_pd                     │ 3    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_blend_ps                     │ 3    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using control mask "imm8", and store the results in "dst
_mm256_extractf128_si256            │ 3    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Extract 128 bits (composed of integer data) from "a", selected with "imm8", and store the result in "dst
_mm256_permute2f128_ps              │ 3    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_permute2f128_si256           │ 3    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle 128-bits (composed of integer data) selected by "imm8" from "a" and "b", and store the results in "dst
_mm256_blendv_epi8                  │ 3    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Blend packed 8-bit integers from "a" and "b" using "mask", and store the results in "dst
_mm256_permute2x128_si256           │ 3    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 128-bits (composed of integer data) selected by "imm8" from "a" and "b", and store the results in "dst
_mm256_permutevar8x32_ps            │ 3    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" across lanes using the corresponding index in "idx
_mm_cvtpd_ps                        │ 3    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cvtps_pd                        │ 3    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_andnot_si128                    │ 3    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise NOT of 128 bits (representing integer data) in "a" and then AND with "b", and store the result in "dst
_mm_packs_epi16                     │ 3    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst
_mm_sad_epu8                        │ 3    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Compute the absolute differences of packed unsigned 8-bit integers in "a" and "b", then horizontally sum each consecutive 8 differences to produce two unsigned 16-bit integers, and pack these unsigned 16-bit integers in the low 16 bits of 64-bit elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_setzero_si128                   │ 3    │ SSE_ALL │ SSE2                           │ Set                       │                   │ no          │ Return vector of type __m128i with all elements set to zero
_mm_srai_epi32                      │ 3    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_shufflehi_epi16                 │ 3    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Shuffle 16-bit integers in the high 64 bits of "a" using the control in "imm8". Store the results in the high 64 bits of "dst", with the low 64 bits being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_unpackhi_epi64                  │ 3    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 64-bit integers from the high half of "a" and "b", and store the results in "dst
_mm_unpacklo_epi16                  │ 3    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 16-bit integers from the low half of "a" and "b", and store the results in "dst
_mm_unpacklo_epi32                  │ 3    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 32-bit integers from the low half of "a" and "b", and store the results in "dst
_mm_unpacklo_epi8                   │ 3    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 8-bit integers from the low half of "a" and "b", and store the results in "dst
_mm_blendv_epi8                     │ 3    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed 8-bit integers from "a" and "b" using "mask", and store the results in "dst
_mm_alignr_epi8                     │ 3    │ SSE_ALL │ SSSE3                          │ Miscellaneous             │                   │ no          │ Concatenate 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst
_mm512_alignr_epi8                  │ 2    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate pairs of 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_blend_epi16             │ 2    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 16-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm512_mask_blend_epi8              │ 2    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 8-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm512_permutex2var_epi16           │ 2    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm512_permutexvar_epi16            │ 2    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm512_shuffle_epi8                 │ 2    │ AVX-512 │ AVX512BW                       │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle packed 8-bit integers in "a" according to shuffle control mask in the corresponding 8-bit element of "b", and store the results in "dst
_mm256_mask_blend_epi16             │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 16-bit integers from "a" and "b" using control mask "k", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_blend_epi8              │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 8-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm256_permutex2var_epi16           │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm256_permutexvar_epi16            │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm_mask_blend_epi16                │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 16-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm_mask_blend_epi8                 │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 8-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm_permutex2var_epi16              │ 2    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst
_mm512_andnot_pd                    │ 2    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm512_andnot_ps                    │ 2    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm512_mask_andnot_pd               │ 2    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_andnot_ps               │ 2    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_div_pd                       │ 2    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm512_div_ps                       │ 2    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm512_mask_div_pd                  │ 2    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_div_ps                  │ 2    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_andnot_si512                 │ 2    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of 512 bits (representing integer data) in "a" and then AND with "b", and store the result in "dst
_mm512_mask_andnot_epi32            │ 2    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 32-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_andnot_epi64            │ 2    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 64-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_alignr_epi32                 │ 2    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 128-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 64 bytes (16 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_rol_epi32               │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_rol_epi64               │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_rolv_epi32              │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_rolv_epi64              │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_rol_epi32                    │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm512_rol_epi64                    │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm512_rolv_epi32                   │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_rolv_epi64                   │ 2    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_blend_epi32             │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Blend packed 32-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm512_mask_blend_epi64             │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Blend packed 64-bit integers from "a" and "b" using control mask "k", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_blend_pd                │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm512_mask_blend_ps                │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm512_permutex2var_epi32           │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_permutexvar_epi32            │ 2    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_mask_andnot_epi32            │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 32-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_andnot_epi64            │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 64-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_andnot_epi32               │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 32-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_andnot_epi64               │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 64-bit integers in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_blend_epi32             │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 32-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm256_mask_blend_epi64             │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 64-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm256_mask_blend_pd                │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm256_mask_blend_ps                │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm256_permutex2var_epi32           │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm256_permutex2var_epi64           │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm_mask_blend_epi32                │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 32-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm_mask_blend_epi64                │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed 64-bit integers from "a" and "b" using control mask "k", and store the results in "dst
_mm_mask_blend_pd                   │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm_mask_blend_ps                   │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm_permutex2var_epi32              │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst
_mm256_mask_rol_epi32               │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_rol_epi64               │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_rolv_epi32              │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_rolv_epi64              │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_rol_epi32                    │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm256_rol_epi64                    │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm256_rolv_epi32                   │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_rolv_epi64                   │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_rol_epi32                  │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_rol_epi64                  │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_rolv_epi32                 │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_rolv_epi64                 │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_rol_epi32                       │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm_rol_epi64                       │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in "imm8", and store the results in "dst
_mm_rolv_epi32                      │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_rolv_epi64                      │ 2    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the left by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_div_pd                       │ 2    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm256_div_ps                       │ 2    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm256_cvtepi32_pd                  │ 2    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm256_cvttpd_epi32                 │ 2    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm256_andnot_pd                    │ 2    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm256_andnot_ps                    │ 2    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm256_movemask_pd                  │ 2    │ AVX_ALL │ AVX                            │ Miscellaneous             │                   │ no          │ Set each bit of mask "dst" based on the most significant bit of the corresponding packed double-precision (64-bit) floating-point element in "a
_mm256_movemask_ps                  │ 2    │ AVX_ALL │ AVX                            │ Miscellaneous             │                   │ no          │ Set each bit of mask "dst" based on the most significant bit of the corresponding packed single-precision (32-bit) floating-point element in "a
_mm256_blendv_pd                    │ 2    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using "mask", and store the results in "dst
_mm256_blendv_ps                    │ 2    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using "mask", and store the results in "dst
_mm256_permute2f128_pd              │ 2    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_shuffle_pd                   │ 2    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm256_shuffle_ps                   │ 2    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm256_sign_epi16                   │ 2    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Negate packed signed 16-bit integers in "a" when the corresponding signed 16-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_sign_epi32                   │ 2    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Negate packed signed 32-bit integers in "a" when the corresponding signed 32-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_sign_epi8                    │ 2    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Negate packed signed 8-bit integers in "a" when the corresponding signed 8-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_cvtepu8_epi32                │ 2    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_andnot_si256                 │ 2    │ AVX_ALL │ AVX2                           │ Logical                   │                   │ no          │ Compute the bitwise NOT of 256 bits (representing integer data) in "a" and then AND with "b", and store the result in "dst
_mm256_movemask_epi8                │ 2    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Create mask from the most significant bit of each 8-bit element in "a", and store the result in "dst
_mm256_bslli_epi128                 │ 2    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift 128-bit lanes in "a" left by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm256_bsrli_epi128                 │ 2    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift 128-bit lanes in "a" right by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm256_permute4x64_epi64            │ 2    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 64-bit integers in "a" across lanes using the control in "imm8", and store the results in "dst
_mm256_shuffle_epi32                │ 2    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 32-bit integers in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm256_shuffle_epi8                 │ 2    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 8-bit integers in "a" within 128-bit lanes according to shuffle control mask in the corresponding 8-bit element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_shufflehi_epi16              │ 2    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 16-bit integers in the high 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the high 64 bits of 128-bit lanes of "dst", with the low 64 bits of 128-bit lanes being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_shufflelo_epi16              │ 2    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle 16-bit integers in the low 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the low 64 bits of 128-bit lanes of "dst", with the high 64 bits of 128-bit lanes being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_add_ps                          │ 2    │ SSE_ALL │ SSE                            │ Arithmetic                │                   │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_div_ps                          │ 2    │ SSE_ALL │ SSE                            │ Arithmetic                │                   │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm_andnot_ps                       │ 2    │ SSE_ALL │ SSE                            │ Logical                   │                   │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm_movemask_ps                     │ 2    │ SSE_ALL │ SSE                            │ Miscellaneous             │                   │ no          │ Set each bit of mask "dst" based on the most significant bit of the corresponding packed single-precision (32-bit) floating-point element in "a
_mm_unpacklo_ps                     │ 2    │ SSE_ALL │ SSE                            │ Swizzle                   │                   │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of "a" and "b", and store the results in "dst
_mm_add_epi32                       │ 2    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst
_mm_div_pd                          │ 2    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm_sub_epi32                       │ 2    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst
_mm_cvtsi128_si32                   │ 2    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy the lower 32-bit integer in "a" to "dst
_mm_andnot_pd                       │ 2    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst
_mm_or_si128                        │ 2    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise OR of 128 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm_xor_si128                       │ 2    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise XOR of 128 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm_movemask_epi8                   │ 2    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Create mask from the most significant bit of each 8-bit element in "a", and store the result in "dst
_mm_movemask_pd                     │ 2    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Set each bit of mask "dst" based on the most significant bit of the corresponding packed double-precision (64-bit) floating-point element in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_packs_epi32                     │ 2    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst
_mm_set1_epi16                      │ 2    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast 16-bit integer "a" to all all elements of "dst". This intrinsic may generate "vpbroadcastw
_mm_setr_epi32                      │ 2    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 32-bit integers in "dst" with the supplied values in reverse order
_mm_bslli_si128                     │ 2    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift "a" left by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm_slli_epi16                      │ 2    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm_srai_epi16                      │ 2    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm_srli_epi16                      │ 2    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm_max_epi16                       │ 2    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_min_epu8                        │ 2    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_extract_epi16                   │ 2    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Extract a 16-bit integer from "a", selected with "imm8", and store the result in the lower element of "dst
_mm_unpackhi_pd                     │ 2    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of "a" and "b", and store the results in "dst
_mm_unpacklo_epi64                  │ 2    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 64-bit integers from the low half of "a" and "b", and store the results in "dst
_mm_unpacklo_pd                     │ 2    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of "a" and "b", and store the results in "dst
_mm_blendv_pd                       │ 2    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using "mask", and store the results in "dst
_mm_blendv_ps                       │ 2    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using "mask", and store the results in "dst
_mm_sign_epi16                      │ 2    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Negate packed 16-bit integers in "a" when the corresponding signed 16-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_sign_epi32                      │ 2    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Negate packed 32-bit integers in "a" when the corresponding signed 32-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_sign_epi8                       │ 2    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Negate packed 8-bit integers in "a" when the corresponding signed 8-bit integer in "b" is negative, and store the results in "dst". Element in "dst" are zeroed out when the corresponding element in "b" is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_abs_epi16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_abs_epi8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst
_mm512_add_epi16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst
_mm512_add_epi8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst
_mm512_adds_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm512_adds_epi8                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm512_adds_epu16                   │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm512_adds_epu8                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm512_avg_epu16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst
_mm512_avg_epu8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst
_mm512_mask_abs_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_abs_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_add_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_add_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_adds_epi16              │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_adds_epi8               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_adds_epu16              │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_adds_epu8               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_avg_epu16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_avg_epu8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_max_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_max_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_min_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_min_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_sub_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_sub_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_subs_epi16              │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_subs_epi8               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_subs_epu16              │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_subs_epu8               │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_max_epi16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_epi8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_epu16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_epu8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_min_epi16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_epi8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_epu16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_epu8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_mullo_epi16                  │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_sub_epi16                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst
_mm512_sub_epi8                     │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst
_mm512_subs_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst
_mm512_subs_epi8                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst
_mm512_subs_epu16                   │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst
_mm512_subs_epu8                    │ 1    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst
_mm512_cmpeq_epi16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epi8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epu16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epu8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpge_epi16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpge_epi8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpge_epu16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cmpge_epu8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_cmpgt_epi16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epi8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epu16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epu8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmple_epi16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epi8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epu16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epu8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmplt_epi16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_epi8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_epu16_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_cmplt_epu8_mask              │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmpneq_epi16_mask            │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_epi8_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_epu16_mask            │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_epu8_mask             │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_mask_cmpeq_epi16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmpeq_epi8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cmpeq_epu16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmpeq_epu8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmpge_epi16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cmpge_epi8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmpge_epu16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cmpge_epu8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cmpgt_epi16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cmpgt_epi8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmpgt_epu16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cmpgt_epu8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cmple_epi16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cmple_epi8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmple_epu16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmple_epu8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cmplt_epi16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmplt_epi8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmplt_epu16_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmplt_epu8_mask         │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmpneq_epi16_mask       │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmpneq_epi8_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmpneq_epu16_mask       │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmpneq_epu8_mask        │ 1    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_cvtepi16_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm512_mask_loadu_epi16             │ 1    │ AVX-512 │ AVX512BW                       │ Load                      │ AVX512_foundation │ no          │ Load packed 16-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_loadu_epi8              │ 1    │ AVX-512 │ AVX512BW                       │ Load                      │ AVX512_foundation │ no          │ Load packed 8-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_shufflehi_epi16              │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the high 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the high 64 bits of 128-bit lanes of "dst", with the low 64 bits of 128-bit lanes being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_shufflelo_epi16              │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the low 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the low 64 bits of 128-bit lanes of "dst", with the high 64 bits of 128-bit lanes being copied from from "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_unpackhi_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpackhi_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpacklo_epi16               │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpacklo_epi8                │ 1    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_bslli_epi128                 │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift 128-bit lanes in "a" left by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm512_bsrli_epi128                 │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift 128-bit lanes in "a" right by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm512_slli_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm512_sllv_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_srai_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm512_srav_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_srli_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm512_srlv_epi16                   │ 1    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_storeu_epi16            │ 1    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store packed 16-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_storeu_epi8             │ 1    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store packed 8-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_abs_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_abs_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_add_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_add_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_adds_epi16              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_adds_epi8               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_adds_epu16              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_adds_epu8               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_avg_epu16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_avg_epu8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_max_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_max_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_min_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_min_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_sub_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_sub_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_subs_epi16              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_subs_epi8               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_subs_epu16              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_subs_epu8               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_abs_epi16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_abs_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_add_epi16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_add_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_adds_epi16                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_adds_epi8                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed signed 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_adds_epu16                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_adds_epu8                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_avg_epu16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_avg_epu8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_max_epi16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_max_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_min_epi16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_min_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_sub_epi16                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_sub_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_subs_epi16                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_subs_epi8                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_subs_epu16                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_subs_epu8                  │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_cmpeq_epi16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epi8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epu16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epu8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpge_epi16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpge_epi8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_cmpge_epu16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpge_epu8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpgt_epi16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmpgt_epi8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmpgt_epu16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cmpgt_epu8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmple_epi16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epi8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epu16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epu8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmplt_epi16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epi8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epu16_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epu8_mask              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmpneq_epi16_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epi8_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epu16_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epu8_mask             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_mask_cmpeq_epi16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cmpeq_epi8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cmpeq_epu16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmpeq_epu8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmpge_epi16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cmpge_epi8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_cmpge_epu16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cmpge_epu8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cmpgt_epi16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cmpgt_epi8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmpgt_epu16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cmpgt_epu8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_cmple_epi16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cmple_epi8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cmple_epu16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_cmple_epu8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cmplt_epi16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmplt_epi8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cmplt_epu16_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmplt_epu8_mask         │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmpneq_epi16_mask       │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmpneq_epi8_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cmpneq_epu16_mask       │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmpneq_epu8_mask        │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_cmpeq_epi16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epi8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epu16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epu8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpge_epi16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpge_epi8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cmpge_epu16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpge_epu8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpgt_epi16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epi8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epu16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epu8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmple_epi16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmple_epi8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmple_epu16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cmple_epu8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmplt_epi16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epi8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epu16_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epu8_mask                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cmpneq_epi16_mask               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_cmpneq_epi8_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_cmpneq_epu16_mask               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_cmpneq_epu8_mask                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_mask_cmpeq_epi16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmpeq_epi8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cmpeq_epu16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmpeq_epu8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmpge_epi16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cmpge_epi8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_cmpge_epu16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cmpge_epu8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cmpgt_epi16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cmpgt_epi8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmpgt_epu16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cmpgt_epu8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cmple_epi16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cmple_epi8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cmple_epu16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_cmple_epu8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cmplt_epi16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmplt_epi8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmplt_epu16_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmplt_epu8_mask            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmpneq_epi16_mask          │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmpneq_epi8_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmpneq_epu16_mask          │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmpneq_epu8_mask           │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_cvtepi16_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm_cvtepi16_epi8                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm256_mask_loadu_epi16             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load packed 16-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_loadu_epi8              │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load packed 8-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_loadu_epi16                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load packed 16-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_loadu_epi8                 │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load packed 8-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_srav_epi16                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_srlv_epi16                   │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_srav_epi16                      │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_srlv_epi16                      │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_storeu_epi16            │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store packed 16-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_storeu_epi8             │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store packed 8-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_storeu_epi16               │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store packed 16-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_storeu_epi8                │ 1    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store packed 8-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_lzcnt_epi32                  │ 1    │ AVX-512 │ AVX512CD                       │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst
_mm512_lzcnt_epi64                  │ 1    │ AVX-512 │ AVX512CD                       │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst
_mm512_mask_lzcnt_epi32             │ 1    │ AVX-512 │ AVX512CD                       │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_lzcnt_epi64             │ 1    │ AVX-512 │ AVX512CD                       │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_lzcnt_epi32                  │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst
_mm256_lzcnt_epi64                  │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst
_mm256_mask_lzcnt_epi32             │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_lzcnt_epi64             │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_lzcnt_epi32                     │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_lzcnt_epi64                     │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_lzcnt_epi32                │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 32-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_lzcnt_epi64                │ 1    │ AVX-512 │ AVX512CD + AVX512VL            │ Bit Manipulation          │ AVX512_foundation │ no          │ Counts the number of leading zero bits in each packed 64-bit integer in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mullo_epi64                  │ 1    │ AVX-512 │ AVX512DQ                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtepi64_pd                  │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm512_cvtepi64_ps                  │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu64_pd                  │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu64_ps                  │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvttpd_epi64                 │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm512_cvttpd_epu64                 │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm512_cvttps_epi64                 │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm512_cvttps_epu64                 │ 1    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm512_and_pd                       │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_and_ps                       │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_mask_and_pd                  │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_and_ps                  │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_or_pd                   │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_or_ps                   │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_xor_pd                  │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_xor_ps                  │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_or_pd                        │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_or_ps                        │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_xor_pd                       │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_xor_ps                       │ 1    │ AVX-512 │ AVX512DQ                       │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_extractf32x8_ps              │ 1    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 256 bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm512_extracti32x8_epi32           │ 1    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 256 bits (composed of 8 packed 32-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm512_inserti32x8                  │ 1    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 256 bits (composed of 8 packed 32-bit integers) from "b" into "dst" at the location specified by "imm
_mm512_mask_reduce_pd               │ 1    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_reduce_ps               │ 1    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_cvtepi64_pd                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm256_cvtepi64_ps                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm256_cvtepu64_pd                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm256_cvtepu64_ps                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm256_cvttpd_epi64                 │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm256_cvttpd_epu64                 │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm256_cvttps_epi64                 │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm256_cvttps_epu64                 │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm_cvtepi64_pd                     │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_cvtepi64_ps                     │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm_cvtepu64_pd                     │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm_cvtepu64_ps                     │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm_cvttpd_epi64                    │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm_cvttpd_epu64                    │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm_cvttps_epi64                    │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm_cvttps_epu64                    │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm256_mask_reduce_pd               │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_reduce_ps               │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_reduce_pd                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_reduce_ps                  │ 1    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_abs_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Finds the absolute value of each packed double-precision (64-bit) floating-point element in "v2", storing the results in "dst
_mm512_abs_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Finds the absolute value of each packed single-precision (32-bit) floating-point element in "v2", storing the results in "dst
_mm512_add_epi32                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst
_mm512_add_epi64                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst
_mm512_add_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_add_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_fmadd_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmadd_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmsub_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_fmsub_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_fnmadd_pd                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_fnmadd_ps                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_fnmsub_pd                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fnmsub_ps                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask3_fmadd_pd               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmadd_ps               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmsub_pd               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask3_fmsub_ps               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask3_fnmadd_pd              │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask3_fnmadd_ps              │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask3_fnmsub_pd              │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask3_fnmsub_ps              │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_abs_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Finds the absolute value of each packed double-precision (64-bit) floating-point element in "v2", storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_abs_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Finds the absolute value of each packed single-precision (32-bit) floating-point element in "v2", storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_add_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_add_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_add_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_add_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_fmadd_pd                │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmadd_ps                │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmsub_pd                │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_fmsub_ps                │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_fnmadd_pd               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_fnmadd_ps               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_fnmsub_pd               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_fnmsub_ps               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_mul_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  RM.                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_mul_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  RM.                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_sub_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_sub_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_sub_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_sub_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mul_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_mul_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mullo_epi32                  │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_sub_epi32                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst
_mm512_sub_epi64                    │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst
_mm512_sub_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_sub_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_cmpeq_epi32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epi64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epu32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_epu64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpge_epi32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpge_epi64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpge_epu32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpge_epu64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm512_cmpgt_epi32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epi64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epu32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmpgt_epu64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm512_cmple_epi32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epi64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epu32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_epu64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmplt_epi32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_epi64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_epu32_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_epu64_mask             │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmpneq_epi32_mask            │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_epi64_mask            │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_epu32_mask            │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_cmpneq_epu64_mask            │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_mask_cmpeq_epi32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmpeq_epi64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmpeq_epu32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmpeq_epu64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmpge_epi32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cmpge_epi64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cmpge_epu32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cmpge_epu64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cmpgt_epi32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cmpgt_epi64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cmpgt_epu32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cmpgt_epu64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cmple_epi32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmple_epi64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cmple_epu32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmple_epu64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmplt_epi32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cmplt_epi64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmplt_epu32_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmplt_epu64_mask        │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmpneq_epi32_mask       │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cmpneq_epi64_mask       │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cmpneq_epu32_mask       │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmpneq_epu64_mask       │ 1    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_cvtepi16_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtepi16_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtepi32_epi16               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm512_cvtepi32_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtepi32_epi8                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_cvtepi32_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm512_cvtepi64_epi16               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm512_cvtepi64_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_cvtepi64_epi8                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm512_cvtepi8_epi32                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtepi8_epi64                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtepu16_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtepu16_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtepu32_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtepu32_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu32_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvtepu8_epi32                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtepu8_epi64                │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 8 byte sof "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtpd_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvtps_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvttpd_epi32                 │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvttpd_epu32                 │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvttps_epi32                 │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvttps_epu32                 │ 1    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm512_mask_rcp14_pd                │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_rcp14_ps                │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_rsqrt14_pd              │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_sqrt_pd                 │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_sqrt_ps                 │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_rcp14_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_rcp14_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_rsqrt14_pd                   │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_sqrt_pd                      │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst
_mm512_sqrt_ps                      │ 1    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst
_mm512_i32gather_epi32              │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm512_i32gather_epi64              │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm512_i32gather_pd                 │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm512_i32gather_ps                 │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm512_i64gather_epi32              │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm512_i64gather_epi64              │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm512_i64gather_pd                 │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm512_i64gather_ps                 │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm512_load_pd                      │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 8 packed double-precision (64-bit) floating-point elements) from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_load_ps                      │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 16 packed single-precision (32-bit) floating-point elements) from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_load_si512                   │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits of integer data from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_loadu_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 8 packed double-precision (64-bit) floating-point elements) from memory into "dst".  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_loadu_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 16 packed single-precision (32-bit) floating-point elements) from memory into "dst".  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_loadu_si512                  │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits of integer data from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_i32gather_epi32         │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm512_mask_i32gather_epi64         │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm512_mask_i32gather_pd            │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm512_mask_i32gather_ps            │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm512_mask_i64gather_epi32         │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm512_mask_i64gather_epi64         │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm512_mask_i64gather_pd            │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm512_mask_i64gather_ps            │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm512_mask_loadu_epi32             │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_loadu_epi64             │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_loadu_pd                │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memoy into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_loadu_ps                │ 1    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_and_si512                    │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of 512 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm512_andnot_epi32                 │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed 32-bit integers in "a" and then AND with "b", and store the results in "dst
_mm512_andnot_epi64                 │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of 512 bits (composed of packed 64-bit integers) in "a" and then AND with "b", and store the results in "dst
_mm512_mask_and_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Performs element-by-element bitwise AND between packed 32-bit integer elements of "v2" and "v3", storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_and_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_or_epi32                │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_or_epi64                │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_xor_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_xor_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_or_si512                     │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of 512 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm512_xor_si512                    │ 1    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of 512 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm512_alignr_epi64                 │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 128-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 64 bytes (8 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_getexp_pd                    │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_getexp_ps                    │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_getexp_pd               │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm512_mask_getexp_ps               │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm512_mask_getmant_pd              │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm512_mask_getmant_ps              │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm512_mask_scalef_pd               │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_scalef_ps               │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_scalef_pd                    │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm512_scalef_ps                    │ 1    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm512_set1_epi16                   │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Broadcast the low packed 16-bit integer from "a" to all all elements of "dst
_mm512_set1_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Broadcast 32-bit integer "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_set1_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Broadcast 64-bit integer "a" to all elements of "dst
_mm512_set1_epi8                    │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Broadcast 8-bit integer "a" to all elements of "dst
_mm512_set1_pd                      │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Broadcast double-precision (64-bit) floating-point value "a" to all elements of "dst
_mm512_set1_ps                      │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Broadcast single-precision (32-bit) floating-point value "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_set_epi16                    │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 16-bit integers in "dst" with the supplied values
_mm512_set_epi8                     │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 8-bit integers in "dst" with the supplied values
_mm512_setr_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 32-bit integers in "dst" with the supplied values in reverse order
_mm512_setr_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 64-bit integers in "dst" with the supplied values in reverse order
_mm512_setr_pd                      │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values in reverse order.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_setr_ps                      │ 1    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm512_slli_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm512_slli_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm512_sllv_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_sllv_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_srai_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm512_srai_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm512_srav_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_srav_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_srli_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm512_srli_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm512_srlv_epi32                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_srlv_epi64                   │ 1    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_abs_epi32                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst
_mm512_abs_epi64                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst
_mm512_mask_abs_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_abs_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_max_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_max_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_max_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_max_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_min_epi32               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_min_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_min_pd                  │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_min_ps                  │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_max_epi32                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_max_epi64                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_epu32                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_epu64                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm512_max_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm512_max_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm512_min_epi32                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_epi64                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_min_epu32                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_epu64                    │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst
_mm512_min_pd                       │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm512_min_ps                       │ 1    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm512_i32scatter_epi32             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_i32scatter_epi64             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_i32scatter_pd                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm512_i32scatter_ps                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm512_i64scatter_epi32             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_i64scatter_epi64             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_i64scatter_pd                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm512_i64scatter_ps                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm512_mask_i32scatter_epi32        │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm512_mask_i32scatter_epi64        │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm512_mask_i32scatter_pd           │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm512_mask_i32scatter_ps           │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm512_mask_i64scatter_epi32        │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm512_mask_i64scatter_epi64        │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm512_mask_i64scatter_pd           │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm512_mask_i64scatter_ps           │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm512_mask_store_epi32             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_store_epi64             │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_store_pd                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_store_ps                │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_storeu_epi32            │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_storeu_epi64            │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_storeu_pd               │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_storeu_ps               │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_store_pd                     │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 8 packed double-precision (64-bit) floating-point elements) from "a" into memory. 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_store_ps                     │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 16 packed single-precision (32-bit) floating-point elements) from "a" into memory.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_store_si512                  │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits of integer data from "a" into memory.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_storeu_pd                    │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 8 packed double-precision (64-bit) floating-point elements) from "a" into memory.  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_storeu_ps                    │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 16 packed single-precision (32-bit) floating-point elements) from "a" into memory.  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_storeu_si512                 │ 1    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits of integer data from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary
_mm512_extractf64x4_pd              │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 256 bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm512_extracti64x4_epi64           │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 256 bits (composed of 4 packed 64-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm512_inserti64x4                  │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 256 bits (composed of 4 packed 64-bit integers) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_permute_pd                   │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm512_permutex2var_pd              │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_permutex2var_ps              │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_permutex_epi64               │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" within 256-bit lanes using the control in "imm8", and store the results in "dst
_mm512_permutexvar_epi64            │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm512_permutexvar_pd               │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm512_permutexvar_ps               │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" across lanes using the corresponding index in "idx
_mm512_shuffle_epi32                │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm512_shuffle_f32x4                │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 single-precision (32-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_shuffle_f64x2                │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 double-precision (64-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst
_mm512_shuffle_i32x4                │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 32-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst
_mm512_shuffle_i64x2                │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 64-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst
_mm512_shuffle_pd                   │ 1    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm256_mask3_fmadd_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask3_fmadd_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask3_fmsub_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask3_fmsub_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask3_fnmadd_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask3_fnmadd_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask3_fnmsub_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask3_fnmsub_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_abs_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_abs_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_add_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_add_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_div_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_div_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_fmadd_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_fmadd_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_fmsub_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_fmsub_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_fnmadd_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_fnmadd_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_fnmsub_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_fnmsub_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_max_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_max_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_max_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_max_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_min_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_min_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_min_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_min_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_rcp14_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_rcp14_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_rsqrt14_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_sub_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_sub_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_max_epi64                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epu64                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_min_epi64                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epu64                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_rcp14_pd                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_rcp14_ps                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_rsqrt14_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_abs_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_abs_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_add_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_add_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_div_pd                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_div_ps                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_fmadd_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fmadd_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fmsub_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_fmsub_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_fnmadd_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_fnmadd_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_fnmsub_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_fnmsub_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_max_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_max_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_max_pd                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_max_ps                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_min_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_min_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_min_pd                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_min_ps                     │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_rcp14_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_rcp14_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_rsqrt14_pd                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_sub_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_sub_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_max_epi64                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_max_epu64                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_min_epi64                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b", and store packed minimum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_min_epu64                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_rcp14_pd                        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_rcp14_ps                        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_rsqrt14_pd                      │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_cmpeq_epi32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epi64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epu32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm256_cmpeq_epu64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cmpge_epi32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpge_epi64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpge_epu32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpge_epu64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm256_cmpgt_epi32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmpgt_epi64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmpgt_epu32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmpgt_epu64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm256_cmple_epi32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epi64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epu32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmple_epu64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm256_cmplt_epi32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epi64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epu32_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmplt_epu64_mask             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm256_cmpneq_epi32_mask            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epi64_mask            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epu32_mask            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm256_cmpneq_epu64_mask            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cmpeq_epi32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cmpeq_epi64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cmpeq_epu32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmpeq_epu64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cmpge_epi32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cmpge_epi64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cmpge_epu32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cmpge_epu64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cmpgt_epi32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cmpgt_epi64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cmpgt_epu32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cmpgt_epu64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cmple_epi32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cmple_epi64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cmple_epu32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_cmple_epu64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_cmplt_epi32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmplt_epi64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmplt_epu32_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmplt_epu64_mask        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmpneq_epi32_mask       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmpneq_epi64_mask       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cmpneq_epu32_mask       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cmpneq_epu64_mask       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cmpeq_epi32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epi64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epu32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpeq_epu64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k
_mm_cmpge_epi32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpge_epi64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_cmpge_epu32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpge_epu64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k
_mm_cmpgt_epi32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epi64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epu32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmpgt_epu64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k
_mm_cmple_epi32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmple_epi64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_cmple_epu32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmple_epu64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm_cmplt_epi32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epi64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epu32_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmplt_epu64_mask                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k
_mm_cmpneq_epi32_mask               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_cmpneq_epi64_mask               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_cmpneq_epu32_mask               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k
_mm_cmpneq_epu64_mask               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cmpeq_epi32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmpeq_epi64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmpeq_epu32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmpeq_epu64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmpge_epi32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cmpge_epi64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cmpge_epu32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cmpge_epu64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cmpgt_epi32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cmpgt_epi64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cmpgt_epu32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cmpgt_epu64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for greater-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cmple_epi32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cmple_epi64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cmple_epu32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_cmple_epu64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_cmplt_epi32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmplt_epi64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmplt_epu32_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmplt_epu64_mask           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmpneq_epi32_mask          │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmpneq_epi64_mask          │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cmpneq_epu32_mask          │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cmpneq_epu64_mask          │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_cvtepi32_epi16               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm256_cvtepi32_epi8                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm256_cvtepi64_epi16               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm256_cvtepi64_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm256_cvtepi64_epi8                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm256_cvtepu32_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm256_cvttps_epu32                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtepi32_epi16                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm_cvtepi32_epi8                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst
_mm_cvtepi64_epi16                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm_cvtepi64_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm_cvtepi64_epi8                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_cvttpd_epu32                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvttps_epu32                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm256_mask_sqrt_pd                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_sqrt_ps                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_sqrt_pd                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_sqrt_ps                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_loadu_epi32             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_loadu_epi64             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_loadu_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memoy into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_loadu_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mmask_i32gather_epi32        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm256_mmask_i32gather_epi64        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm256_mmask_i32gather_pd           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm256_mmask_i32gather_ps           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm256_mmask_i64gather_epi32        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm256_mmask_i64gather_epi64        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm256_mmask_i64gather_pd           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm256_mmask_i64gather_ps           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm_mask_loadu_epi32                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_loadu_epi64                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_loadu_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memoy into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_loadu_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mmask_i32gather_epi32           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm_mmask_i32gather_epi64           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm_mmask_i32gather_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm_mmask_i32gather_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm_mmask_i64gather_epi32           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm_mmask_i64gather_epi64           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                           
_mm_mmask_i64gather_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm_mmask_i64gather_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                         
_mm256_mask_and_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_and_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_or_epi32                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_or_epi64                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_xor_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_xor_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_and_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_and_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_or_epi32                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_or_epi64                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_xor_epi32                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_xor_epi64                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_alignr_epi32                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 64-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 32 bytes (8 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_alignr_epi64                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 64-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 32 bytes (4 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_getexp_pd                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_getexp_ps                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_getexp_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm256_mask_getexp_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm256_mask_getmant_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm256_mask_getmant_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm256_mask_scalef_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_scalef_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_permutex2var_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_permutex2var_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_permutexvar_epi32            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_permutexvar_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_permutexvar_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" across lanes using the corresponding index in "idx
_mm256_scalef_pd                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm256_scalef_ps                    │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm_getexp_pd                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm_getexp_ps                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_getexp_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm_mask_getexp_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                 
_mm_mask_getmant_pd                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm_mask_getmant_ps                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                    
_mm_mask_scalef_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_scalef_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_permutex2var_epi64              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst
_mm_permutex2var_pd                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_permutex2var_ps                 │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_scalef_pd                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_scalef_ps                       │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm256_srav_epi64                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_srai_epi64                      │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm_srav_epi64                      │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_i32scatter_epi32             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_i32scatter_epi64             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_i32scatter_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm256_i32scatter_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm256_i64scatter_epi32             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_i64scatter_epi64             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_i64scatter_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm256_i64scatter_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm256_mask_i32scatter_epi32        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm256_mask_i32scatter_epi64        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm256_mask_i32scatter_pd           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm256_mask_i32scatter_ps           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm256_mask_i64scatter_epi32        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm256_mask_i64scatter_epi64        │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm256_mask_i64scatter_pd           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm256_mask_i64scatter_ps           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm256_mask_store_epi32             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_store_epi64             │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_store_pd                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_store_ps                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_storeu_epi32            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_storeu_epi64            │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_storeu_pd               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_storeu_ps               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_i32scatter_epi32                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_i32scatter_epi64                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_i32scatter_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm_i32scatter_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm_i64scatter_epi32                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_i64scatter_epi64                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_i64scatter_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                          
_mm_i64scatter_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm_mask_i32scatter_epi32           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm_mask_i32scatter_epi64           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm_mask_i32scatter_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 32-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm_mask_i32scatter_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 32-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm_mask_i64scatter_epi32           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 32-bit integers from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm_mask_i64scatter_epi64           │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter 64-bit integers from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                   
_mm_mask_i64scatter_pd              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter double-precision (64-bit) floating-point elements from "a" into memory using 64-bit indices. 64-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm_mask_i64scatter_ps              │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Scatter single-precision (32-bit) floating-point elements from "a" into memory using 64-bit indices. 32-bit elements are stored at addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale") subject to mask "k" (elements are not stored when the corresponding mask bit is not set). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                 
_mm_mask_store_epi32                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_store_epi64                │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_store_pd                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_store_ps                   │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_storeu_epi32               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 32-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_storeu_epi64               │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed 64-bit integers from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_storeu_pd                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_storeu_ps                  │ 1    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using writemask "k". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_permutexvar_epi8             │ 1    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_add_pd                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_add_ps                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_mul_pd                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_mul_ps                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_sub_pd                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_sub_ps                       │ 1    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cvtepi32_ps                  │ 1    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm256_cvttps_epi32                 │ 1    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm256_rcp_ps                       │ 1    │ AVX_ALL │ AVX                            │ Elementary Math Functions │                   │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_rsqrt_ps                     │ 1    │ AVX_ALL │ AVX                            │ Elementary Math Functions │                   │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_sqrt_pd                      │ 1    │ AVX_ALL │ AVX                            │ Elementary Math Functions │                   │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_sqrt_ps                      │ 1    │ AVX_ALL │ AVX                            │ Elementary Math Functions │                   │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst
_mm256_load_pd                      │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from memory into "dst". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_load_ps                      │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from memory into "dst". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_load_si256                   │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits of integer data from memory into "dst". 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_loadu_pd                     │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_loadu_ps                     │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_loadu_si256                  │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits of integer data from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary
_mm256_maskload_pd                  │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load packed double-precision (64-bit) floating-point elements from memory into "dst" using "mask" (elements are zeroed out when the high bit of the corresponding element is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_maskload_ps                  │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using "mask" (elements are zeroed out when the high bit of the corresponding element is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_maskload_pd                     │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load packed double-precision (64-bit) floating-point elements from memory into "dst" using "mask" (elements are zeroed out when the high bit of the corresponding element is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_maskload_ps                     │ 1    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using "mask" (elements are zeroed out when the high bit of the corresponding element is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_and_pd                       │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_and_ps                       │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_or_pd                        │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_or_ps                        │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_xor_pd                       │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_xor_ps                       │ 1    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_set1_epi16                   │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast 16-bit integer "a" to all all elements of "dst". This intrinsic may generate the "vpbroadcastw
_mm256_set1_epi32                   │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast 32-bit integer "a" to all elements of "dst". This intrinsic may generate the "vpbroadcastd
_mm256_set1_epi64x                  │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast 64-bit integer "a" to all elements of "dst". This intrinsic may generate the "vpbroadcastq".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_set1_epi8                    │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast 8-bit integer "a" to all elements of "dst". This intrinsic may generate the "vpbroadcastb
_mm256_set1_pd                      │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast double-precision (64-bit) floating-point value "a" to all elements of "dst
_mm256_set1_ps                      │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Broadcast single-precision (32-bit) floating-point value "a" to all elements of "dst
_mm256_set_epi32                    │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 32-bit integers in "dst" with the supplied values
_mm256_setr_epi16                   │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 16-bit integers in "dst" with the supplied values in reverse order
_mm256_setr_epi32                   │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 32-bit integers in "dst" with the supplied values in reverse order
_mm256_setr_epi64x                  │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 64-bit integers in "dst" with the supplied values in reverse order
_mm256_setr_epi8                    │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 8-bit integers in "dst" with the supplied values in reverse order.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_setr_pd                      │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm256_setr_ps                      │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm256_setzero_si256                │ 1    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Return vector of type __m256i with all elements set to zero
_mm256_max_pd                       │ 1    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm256_max_ps                       │ 1    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm256_min_pd                       │ 1    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm256_min_ps                       │ 1    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm256_maskstore_pd                 │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using "mask
_mm256_maskstore_ps                 │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using "mask
_mm256_store_pd                     │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "a" into memory. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_store_ps                     │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "a" into memory. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_store_si256                  │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits of integer data from "a" into memory. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated
_mm256_storeu_pd                    │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_storeu_ps                    │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_storeu_si256                 │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits of integer data from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary
_mm_maskstore_pd                    │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store packed double-precision (64-bit) floating-point elements from "a" into memory using "mask
_mm_maskstore_ps                    │ 1    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store packed single-precision (32-bit) floating-point elements from "a" into memory using "mask
_mm256_blend_pd                     │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using control mask "imm8", and store the results in "dst
_mm256_extractf128_pd               │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Extract 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm256_extractf128_ps               │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Extract 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm256_insertf128_pd                │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_insertf128_ps                │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_insertf128_si256             │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Copy "a" to "dst", then insert 128 bits from "b" into "dst" at the location specified by "imm
_mm256_permute_pd                   │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_permutevar_pd                │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst
_mm256_permutevar_ps                │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst
_mm256_unpackhi_pd                  │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_unpacklo_pd                  │ 1    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_add_epi16                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst
_mm256_add_epi32                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 32-bit integers in "a" and "b", and store the results in "dst
_mm256_add_epi64                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst
_mm256_add_epi8                     │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_adds_epi16                   │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm256_adds_epi8                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm256_adds_epu16                   │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm256_adds_epu8                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm256_mullo_epi16                  │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mullo_epi32                  │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the packed signed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_sad_epu8                     │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Compute the absolute differences of packed unsigned 8-bit integers in "a" and "b", then horizontally sum each consecutive 8 differences to produce four unsigned 16-bit integers, and pack these unsigned 16-bit integers in the low 16 bits of 64-bit elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_sub_epi16                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst
_mm256_sub_epi32                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed 32-bit integers in "b" from packed 32-bit integers in "a", and store the results in "dst
_mm256_sub_epi64                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst
_mm256_sub_epi8                     │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst
_mm256_subs_epi16                   │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst
_mm256_subs_epi8                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst
_mm256_subs_epu16                   │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst
_mm256_subs_epu8                    │ 1    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst
_mm256_cmpeq_epi16                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed 16-bit integers in "a" and "b" for equality, and store the results in "dst
_mm256_cmpeq_epi32                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed 32-bit integers in "a" and "b" for equality, and store the results in "dst
_mm256_cmpeq_epi64                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed 64-bit integers in "a" and "b" for equality, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_cmpeq_epi8                   │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed 8-bit integers in "a" and "b" for equality, and store the results in "dst
_mm256_cmpgt_epi16                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm256_cmpgt_epi32                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_cmpgt_epi64                  │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm256_cmpgt_epi8                   │ 1    │ AVX_ALL │ AVX2                           │ Compare                   │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_cvtepi16_epi32               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm256_cvtepi16_epi64               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtepi32_epi64               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtepi8_epi16                │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm256_cvtepi8_epi32                │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_cvtepi8_epi64                │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtepu16_epi32               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm256_cvtepu16_epi64               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtepu32_epi64               │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtepu8_epi16                │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm256_cvtepu8_epi64                │ 1    │ AVX_ALL │ AVX2                           │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in the low 8 byte sof "a" to packed 64-bit integers, and store the results in "dst
_mm256_mask_i32gather_epi32         │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm256_mask_i32gather_epi64         │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm256_mask_i32gather_pd            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm256_mask_i32gather_ps            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm256_mask_i64gather_epi32         │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm256_mask_i64gather_epi64         │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm256_mask_i64gather_pd            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm256_mask_i64gather_ps            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm256_maskload_epi32               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Load packed 32-bit integers from memory into "dst" using "mask" (elements are zeroed out when the highest bit is not set in the corresponding element
_mm256_maskload_epi64               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Load packed 64-bit integers from memory into "dst" using "mask" (elements are zeroed out when the highest bit is not set in the corresponding element
_mm_mask_i32gather_epi32            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm_mask_i32gather_epi64            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm_mask_i32gather_pd               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm_mask_i32gather_ps               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm_mask_i64gather_epi32            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm_mask_i64gather_epi64            │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                
_mm_mask_i64gather_pd               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm_mask_i64gather_ps               │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst" using "mask" (elements are copied from "src" when the highest bit is not set in the corresponding element). "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                              
_mm_maskload_epi32                  │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Load packed 32-bit integers from memory into "dst" using "mask" (elements are zeroed out when the highest bit is not set in the corresponding element
_mm_maskload_epi64                  │ 1    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Load packed 64-bit integers from memory into "dst" using "mask" (elements are zeroed out when the highest bit is not set in the corresponding element
_mm256_and_si256                    │ 1    │ AVX_ALL │ AVX2                           │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm256_or_si256                     │ 1    │ AVX_ALL │ AVX2                           │ Logical                   │                   │ no          │ Compute the bitwise OR of 256 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm256_xor_si256                    │ 1    │ AVX_ALL │ AVX2                           │ Logical                   │                   │ no          │ Compute the bitwise XOR of 256 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm256_packs_epi16                  │ 1    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst
_mm256_packs_epi32                  │ 1    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst
_mm256_packus_epi16                 │ 1    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst
_mm256_packus_epi32                 │ 1    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst
_mm256_avg_epu16                    │ 1    │ AVX_ALL │ AVX2                           │ Probability/Statistics    │                   │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst
_mm256_avg_epu8                     │ 1    │ AVX_ALL │ AVX2                           │ Probability/Statistics    │                   │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst
_mm256_slli_epi16                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_slli_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm256_slli_epi64                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm256_sllv_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_sllv_epi64                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_srai_epi16                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_srai_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm256_srav_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_srli_epi16                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm256_srli_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm256_srli_epi64                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm256_srlv_epi32                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_srlv_epi64                   │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_srav_epi32                      │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_srlv_epi32                      │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_srlv_epi64                      │ 1    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_abs_epi16                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst
_mm256_abs_epi32                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst
_mm256_abs_epi8                     │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_max_epi16                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epi32                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epi8                     │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epu16                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epu32                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_max_epu8                     │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst
_mm256_min_epi16                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epi32                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epi8                     │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epu16                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epu32                    │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_min_epu8                     │ 1    │ AVX_ALL │ AVX2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst
_mm256_maskstore_epi32              │ 1    │ AVX_ALL │ AVX2                           │ Store                     │                   │ no          │ Store packed 32-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element
_mm256_maskstore_epi64              │ 1    │ AVX_ALL │ AVX2                           │ Store                     │                   │ no          │ Store packed 64-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element
_mm_maskstore_epi32                 │ 1    │ AVX_ALL │ AVX2                           │ Store                     │                   │ no          │ Store packed 32-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element
_mm_maskstore_epi64                 │ 1    │ AVX_ALL │ AVX2                           │ Store                     │                   │ no          │ Store packed 64-bit integers from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element
_mm256_permute4x64_pd               │ 1    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the control in "imm8", and store the results in "dst
_mm256_unpackhi_epi16               │ 1    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 16-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_unpackhi_epi8                │ 1    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 8-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_unpacklo_epi16               │ 1    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 16-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_unpacklo_epi8                │ 1    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 8-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_fmadd_pd                     │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_fmadd_ps                     │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_fmsub_pd                     │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_fmsub_ps                     │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_fnmadd_pd                    │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_fnmadd_ps                    │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_fnmsub_pd                    │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_fnmsub_ps                    │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_fmadd_pd                        │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmadd_ps                        │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmsub_pd                        │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_fmsub_ps                        │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_fnmadd_pd                       │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_fnmadd_ps                       │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_fnmsub_pd                       │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_fnmsub_ps                       │ 1    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mul_ps                          │ 1    │ SSE_ALL │ SSE                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_sub_ps                          │ 1    │ SSE_ALL │ SSE                            │ Arithmetic                │                   │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cmpeq_ps                        │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for equality, and store the results in "dst
_mm_cmpge_ps                        │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for greater-than-or-equal, and store the results in "dst
_mm_cmpgt_ps                        │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for greater-than, and store the results in "dst
_mm_cmple_ps                        │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in "dst
_mm_cmplt_ps                        │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than, and store the results in "dst
_mm_cmpneq_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-equal, and store the results in "dst
_mm_cmpnge_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-greater-than-or-equal, and store the results in "dst
_mm_cmpngt_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-greater-than, and store the results in "dst
_mm_cmpnle_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in "dst
_mm_cmpnlt_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in "dst
_mm_cmpord_ps                       │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in "dst
_mm_cmpunord_ps                     │ 1    │ SSE_ALL │ SSE                            │ Compare                   │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in "dst
_mm_cvtss_f32                       │ 1    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Copy the lower single-precision (32-bit) floating-point element of "a" to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_rcp_ps                          │ 1    │ SSE_ALL │ SSE                            │ Elementary Math Functions │                   │ no          │ Compute the approximate reciprocal of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_rsqrt_ps                        │ 1    │ SSE_ALL │ SSE                            │ Elementary Math Functions │                   │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_sqrt_ps                         │ 1    │ SSE_ALL │ SSE                            │ Elementary Math Functions │                   │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_load_ps                         │ 1    │ SSE_ALL │ SSE                            │ Load                      │                   │ no          │ Load 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) from memory into "dst". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_loadu_ps                        │ 1    │ SSE_ALL │ SSE                            │ Load                      │                   │ no          │ Load 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_and_ps                          │ 1    │ SSE_ALL │ SSE                            │ Logical                   │                   │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_or_ps                           │ 1    │ SSE_ALL │ SSE                            │ Logical                   │                   │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_xor_ps                          │ 1    │ SSE_ALL │ SSE                            │ Logical                   │                   │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_movehl_ps                       │ 1    │ SSE_ALL │ SSE                            │ Move                      │                   │ no          │ Move the upper 2 single-precision (32-bit) floating-point elements from "b" to the lower 2 elements of "dst", and copy the upper 2 elements from "a" to the upper 2 elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_set1_ps                         │ 1    │ SSE_ALL │ SSE                            │ Set                       │                   │ yes         │ Broadcast single-precision (32-bit) floating-point value "a" to all elements of "dst
_mm_setr_ps                         │ 1    │ SSE_ALL │ SSE                            │ Set                       │                   │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm_max_ps                          │ 1    │ SSE_ALL │ SSE                            │ Special Math Functions    │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm_min_ps                          │ 1    │ SSE_ALL │ SSE                            │ Special Math Functions    │                   │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm_store_ps                        │ 1    │ SSE_ALL │ SSE                            │ Store                     │                   │ no          │ Store 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a" into memory. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_storeu_ps                       │ 1    │ SSE_ALL │ SSE                            │ Store                     │                   │ no          │ Store 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_unpackhi_ps                     │ 1    │ SSE_ALL │ SSE                            │ Swizzle                   │                   │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half "a" and "b", and store the results in "dst
_mm_add_epi16                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed 16-bit integers in "a" and "b", and store the results in "dst
_mm_add_epi64                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed 64-bit integers in "a" and "b", and store the results in "dst
_mm_add_epi8                        │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed 8-bit integers in "a" and "b", and store the results in "dst
_mm_add_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_adds_epi16                      │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed signed 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm_adds_epi8                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed signed 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm_adds_epu16                      │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed unsigned 16-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm_adds_epu8                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Add packed unsigned 8-bit integers in "a" and "b" using saturation, and store the results in "dst
_mm_mul_epu32                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst
_mm_mul_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_mullo_epi16                     │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply the packed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_sub_epi16                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed 16-bit integers in "b" from packed 16-bit integers in "a", and store the results in "dst
_mm_sub_epi64                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed 64-bit integers in "b" from packed 64-bit integers in "a", and store the results in "dst
_mm_sub_epi8                        │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed 8-bit integers in "b" from packed 8-bit integers in "a", and store the results in "dst
_mm_sub_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_subs_epi16                      │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed signed 16-bit integers in "b" from packed 16-bit integers in "a" using saturation, and store the results in "dst
_mm_subs_epi8                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed signed 8-bit integers in "b" from packed 8-bit integers in "a" using saturation, and store the results in "dst
_mm_subs_epu16                      │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed unsigned 16-bit integers in "b" from packed unsigned 16-bit integers in "a" using saturation, and store the results in "dst
_mm_subs_epu8                       │ 1    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Subtract packed unsigned 8-bit integers in "b" from packed unsigned 8-bit integers in "a" using saturation, and store the results in "dst
_mm_cmpeq_epi16                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed 16-bit integers in "a" and "b" for equality, and store the results in "dst
_mm_cmpeq_epi32                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed 32-bit integers in "a" and "b" for equality, and store the results in "dst
_mm_cmpeq_epi8                      │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed 8-bit integers in "a" and "b" for equality, and store the results in "dst
_mm_cmpeq_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for equality, and store the results in "dst
_mm_cmpge_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for greater-than-or-equal, and store the results in "dst
_mm_cmpgt_epi16                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm_cmpgt_epi32                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm_cmpgt_epi8                      │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm_cmpgt_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for greater-than, and store the results in "dst
_mm_cmple_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in "dst
_mm_cmplt_epi16                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b" for less-than, and store the results in "dst". Note: This intrinsic emits the pcmpgtw instruction with the order of the operands switched.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_cmplt_epi32                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b" for less-than, and store the results in "dst". Note: This intrinsic emits the pcmpgtd instruction with the order of the operands switched.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_cmplt_epi8                      │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b" for less-than, and store the results in "dst". Note: This intrinsic emits the pcmpgtb instruction with the order of the operands switched.                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cmplt_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than, and store the results in "dst
_mm_cmpneq_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-equal, and store the results in "dst
_mm_cmpnge_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-greater-than-or-equal, and store the results in "dst
_mm_cmpngt_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-greater-than, and store the results in "dst
_mm_cmpnle_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in "dst
_mm_cmpnlt_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cmpord_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in "dst
_mm_cmpunord_pd                     │ 1    │ SSE_ALL │ SSE2                           │ Compare                   │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in "dst
_mm_cvtepi32_pd                     │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm_cvtepi32_ps                     │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst
_mm_cvtsd_f64                       │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy the lower double-precision (64-bit) floating-point element of "a" to "dst
_mm_cvtsi128_si64                   │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy the lower 64-bit integer in "a" to "dst
_mm_cvtsi64_si128                   │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy 64-bit integer "a" to the lower element of "dst", and zero the upper element
_mm_cvttpd_epi32                    │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm_cvttps_epi32                    │ 1    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm_sqrt_pd                         │ 1    │ SSE_ALL │ SSE2                           │ Elementary Math Functions │                   │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst
_mm_load_pd                         │ 1    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) from memory into "dst". 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_load_si128                      │ 1    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load 128-bits of integer data from memory into "dst".  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_loadu_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_loadu_si128                     │ 1    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load 128-bits of integer data from memory into "dst". 	"mem_addr" does not need to be aligned on any particular boundary
_mm_and_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_and_si128                       │ 1    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "b", and store the result in "dst
_mm_or_pd                           │ 1    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_xor_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Logical                   │                   │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_packus_epi16                    │ 1    │ SSE_ALL │ SSE2                           │ Miscellaneous             │                   │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst
_mm_move_epi64                      │ 1    │ SSE_ALL │ SSE2                           │ Move                      │                   │ no          │ Copy the lower 64-bit integer in "a" to the lower element of "dst", and zero the upper element
_mm_avg_epu16                       │ 1    │ SSE_ALL │ SSE2                           │ Probability/Statistics    │                   │ no          │ Average packed unsigned 16-bit integers in "a" and "b", and store the results in "dst
_mm_avg_epu8                        │ 1    │ SSE_ALL │ SSE2                           │ Probability/Statistics    │                   │ no          │ Average packed unsigned 8-bit integers in "a" and "b", and store the results in "dst
_mm_set1_epi32                      │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast 32-bit integer "a" to all elements of "dst". This intrinsic may generate "vpbroadcastd
_mm_set1_epi8                       │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast 8-bit integer "a" to all elements of "dst". This intrinsic may generate "vpbroadcastb
_mm_set1_pd                         │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast double-precision (64-bit) floating-point value "a" to all elements of "dst
_mm_set_epi64x                      │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 64-bit integers in "dst" with the supplied values
_mm_setr_epi16                      │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 16-bit integers in "dst" with the supplied values in reverse order
_mm_setr_epi8                       │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 8-bit integers in "dst" with the supplied values in reverse order
_mm_setr_pd                         │ 1    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm_slli_epi32                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm_slli_epi64                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst
_mm_slli_si128                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift "a" left by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm_srli_epi32                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_srli_epi64                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst
_mm_srli_si128                      │ 1    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift "a" right by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm_max_epu8                        │ 1    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_max_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm_min_epi16                       │ 1    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed signed 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_min_pd                          │ 1    │ SSE_ALL │ SSE2                           │ Special Math Functions    │                   │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm_store_pd                        │ 1    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a" into memory. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_store_si128                     │ 1    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits of integer data from "a" into memory.  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_storeh_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store the upper double-precision (64-bit) floating-point element from "a" into memory.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_storeu_pd                       │ 1    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_storeu_si128                    │ 1    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits of integer data from "a" into memory. 	"mem_addr" does not need to be aligned on any particular boundary
_mm_insert_epi16                    │ 1    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Copy "a" to "dst", and insert the 16-bit integer "i" into "dst" at the location specified by "imm
_mm_unpackhi_epi16                  │ 1    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 16-bit integers from the high half of "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_unpackhi_epi32                  │ 1    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 32-bit integers from the high half of "a" and "b", and store the results in "dst
_mm_unpackhi_epi8                   │ 1    │ SSE_ALL │ SSE2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 8-bit integers from the high half of "a" and "b", and store the results in "dst
_mm_movehdup_ps                     │ 1    │ SSE_ALL │ SSE3                           │ Move                      │                   │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm_mullo_epi32                     │ 1    │ SSE_ALL │ SSE4.1                         │ Arithmetic                │                   │ no          │ Multiply the packed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_cmpeq_epi64                     │ 1    │ SSE_ALL │ SSE4.1                         │ Compare                   │                   │ no          │ Compare packed 64-bit integers in "a" and "b" for equality, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtepi16_epi32                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm_cvtepi16_epi64                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtepi32_epi64                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtepi8_epi16                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm_cvtepi8_epi32                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm_cvtepi8_epi64                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Sign extend packed 8-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtepu16_epi32                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm_cvtepu16_epi64                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtepu32_epi64                  │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtepu8_epi16                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm_cvtepu8_epi32                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst
_mm_cvtepu8_epi64                   │ 1    │ SSE_ALL │ SSE4.1                         │ Convert                   │                   │ no          │ Zero extend packed unsigned 8-bit integers in the low 8 byte sof "a" to packed 64-bit integers, and store the results in "dst
_mm_minpos_epu16                    │ 1    │ SSE_ALL │ SSE4.1                         │ Miscellaneous             │                   │ no          │ Horizontally compute the minimum amongst the packed unsigned 16-bit integers in "a", store the minimum and index in "dst", and zero the remaining bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_max_epi32                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_max_epi8                        │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed maximum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_max_epu16                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_max_epu32                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst
_mm_min_epi32                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed signed 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_min_epi8                        │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed signed 8-bit integers in "a" and "b", and store packed minimum values in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_min_epu16                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_min_epu32                       │ 1    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst
_mm_blend_pd                        │ 1    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed double-precision (64-bit) floating-point elements from "a" and "b" using control mask "imm8", and store the results in "dst
_mm_blend_ps                        │ 1    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed single-precision (32-bit) floating-point elements from "a" and "b" using control mask "imm8", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_insert_epi32                    │ 1    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Copy "a" to "dst", and insert the 32-bit integer "i" into "dst" at the location specified by "imm
_mm_insert_epi64                    │ 1    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Copy "a" to "dst", and insert the 64-bit integer "i" into "dst" at the location specified by "imm
_mm_insert_epi8                     │ 1    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Copy "a" to "dst", and insert the lower 8-bit integer from "i" into "dst" at the location specified by "imm
_mm_cmpgt_epi64                     │ 1    │ SSE_ALL │ SSE4.2                         │ Compare                   │                   │ no          │ Compare packed signed 64-bit integers in "a" and "b" for greater-than, and store the results in "dst
_mm_abs_epi16                       │ 1    │ SSE_ALL │ SSSE3                          │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 16-bit integers in "a", and store the unsigned results in "dst
_mm_abs_epi32                       │ 1    │ SSE_ALL │ SSSE3                          │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 32-bit integers in "a", and store the unsigned results in "dst
_mm_abs_epi8                        │ 1    │ SSE_ALL │ SSSE3                          │ Special Math Functions    │                   │ no          │ Compute the absolute value of packed signed 8-bit integers in "a", and store the unsigned results in "dst
_mm512_madd_epi16                   │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_maddubs_epi16                │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Vertically multiply each unsigned 8-bit integer from "a" with the corresponding signed 8-bit integer from "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_madd_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_maddubs_epi16           │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed unsigned 8-bit integers in "a" by packed signed 8-bit integers in "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                       
_mm512_mask_max_epu16               │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_max_epu8                │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_min_epu16               │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_min_epu8                │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_mulhi_epi16             │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_mulhi_epu16             │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_mulhrs_epi16            │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_mullo_epi16             │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mulhi_epi16                  │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mulhi_epu16                  │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mulhrs_epi16                 │ 0    │ AVX-512 │ AVX512BW                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_cmp_epi16_mask               │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epi8_mask                │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epu16_mask               │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epu8_mask                │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_mask_cmp_epi16_mask          │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cmp_epi8_mask           │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cmp_epu16_mask          │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmp_epu8_mask           │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_test_epi16_mask         │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_test_epi8_mask          │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_testn_epi16_mask        │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_testn_epi8_mask         │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_test_epi16_mask              │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_test_epi8_mask               │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_testn_epi16_mask             │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_testn_epi8_mask              │ 0    │ AVX-512 │ AVX512BW                       │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_cvtepi8_epi16                │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm512_cvtepu8_epi16                │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst
_mm512_cvtsepi16_epi8               │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtusepi16_epi8              │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm512_mask_cvtepi16_epi8           │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cvtepi8_epi16           │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cvtepu8_epi16           │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cvtsepi16_epi8          │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtusepi16_epi8         │ 0    │ AVX-512 │ AVX512BW                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_loadu_epi16                  │ 0    │ AVX-512 │ AVX512BW                       │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 32 packed 16-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_loadu_epi8                   │ 0    │ AVX-512 │ AVX512BW                       │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 64 packed 8-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_cvtmask32_u32                      │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Convert 32-bit mask "a" into an integer value, and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_cvtmask64_u64                      │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Convert 64-bit mask "a" into an integer value, and store the result in "dst
_cvtu32_mask32                      │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Convert integer value "a" into an 32-bit mask, and store the result in "k
_cvtu64_mask64                      │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Convert integer value "a" into an 64-bit mask, and store the result in "k
_kortest_mask32_u8                  │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 32-bit masks "a" and "b". If the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". If the result is all ones, store 1 in "all_ones", otherwise store 0 in "all_ones".                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_kortest_mask64_u8                  │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 64-bit masks "a" and "b". If the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". If the result is all ones, store 1 in "all_ones", otherwise store 0 in "all_ones".                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_kortestc_mask32_u8                 │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 32-bit masks "a" and "b". If the result is all ones, store 1 in "dst", otherwise store 0 in "dst
_kortestc_mask64_u8                 │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 64-bit masks "a" and "b". If the result is all ones, store 1 in "dst", otherwise store 0 in "dst
_kortestz_mask32_u8                 │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 32-bit masks "a" and "b". If the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_kortestz_mask64_u8                 │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 64-bit masks "a" and "b". If the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_kshiftli_mask32                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 32-bit mask "a" left by "count" while shifting in zeros, and store the least significant 32 bits of the result in "k
_kshiftli_mask64                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 64-bit mask "a" left by "count" while shifting in zeros, and store the least significant 64 bits of the result in "k
_kshiftri_mask32                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 32-bit mask "a" right by "count" while shifting in zeros, and store the least significant 32 bits of the result in "k
_kshiftri_mask64                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 64-bit mask "a" right by "count" while shifting in zeros, and store the least significant 64 bits of the result in "k
_ktest_mask32_u8                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 32-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". Compute the bitwise NOT of "a" and then AND with "b", if the result is all zeros, store 1 in "and_not", otherwise store 0 in "and_not".                                                                                                                                                                                                                                                                                                                                                                                                   
_ktest_mask64_u8                    │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 64-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". Compute the bitwise NOT of "a" and then AND with "b", if the result is all zeros, store 1 in "and_not", otherwise store 0 in "and_not".                                                                                                                                                                                                                                                                                                                                                                                                   
_ktestc_mask32_u8                   │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise NOT of 32-bit mask "a" and then AND with "b", if the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_ktestc_mask64_u8                   │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise NOT of 64-bit mask "a" and then AND with "b", if the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_ktestz_mask32_u8                   │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 32-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst
_ktestz_mask64_u8                   │ 0    │ AVX-512 │ AVX512BW                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 64-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst
_mm512_broadcastb_epi8              │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst
_mm512_broadcastw_epi16             │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst
_mm512_dbsad_epu8                   │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst". 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected from within 128-bit lanes according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.                                                                                                
_mm512_mask2_permutex2var_epi16     │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_alignr_epi8             │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate pairs of 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_broadcastb_epi8         │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_broadcastw_epi16        │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_dbsad_epu8              │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected from within 128-bit lanes according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.
_mm512_mask_packs_epi16             │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_packs_epi32             │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_packus_epi16            │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_packus_epi32            │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_permutex2var_epi16      │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_permutexvar_epi16       │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_shufflehi_epi16         │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the high 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the high 64 bits of 128-bit lanes of "dst", with the low 64 bits of 128-bit lanes being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                
_mm512_mask_shufflelo_epi16         │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the low 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the low 64 bits of 128-bit lanes of "dst", with the high 64 bits of 128-bit lanes being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_unpackhi_epi16          │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_unpackhi_epi8           │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_unpacklo_epi16          │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_unpacklo_epi8           │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_movepi16_mask                │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 16-bit integer in "a
_mm512_movepi8_mask                 │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 8-bit integer in "a
_mm512_movm_epi16                   │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 16-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm512_movm_epi8                    │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 8-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm512_packs_epi16                  │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst
_mm512_packs_epi32                  │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst
_mm512_packus_epi16                 │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst
_mm512_packus_epi32                 │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst
_mm512_sad_epu8                     │ 0    │ AVX-512 │ AVX512BW                       │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the absolute differences of packed unsigned 8-bit integers in "a" and "b", then horizontally sum each consecutive 8 differences to produce eight unsigned 16-bit integers, and pack these unsigned 16-bit integers in the low 16 bits of 64-bit elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_mov_epi16               │ 0    │ AVX-512 │ AVX512BW                       │ Move                      │ AVX512_foundation │ no          │ Move packed 16-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_mov_epi8                │ 0    │ AVX-512 │ AVX512BW                       │ Move                      │ AVX512_foundation │ no          │ Move packed 8-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_set1_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Set                       │ AVX512_foundation │ no          │ Broadcast 16-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_set1_epi8               │ 0    │ AVX-512 │ AVX512BW                       │ Set                       │ AVX512_foundation │ no          │ Broadcast 8-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_sll_epi16               │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_slli_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_sllv_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_sra_epi16               │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_srai_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_srav_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_srl_epi16               │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_srli_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_srlv_epi16              │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_sll_epi16                    │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm512_sra_epi16                    │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm512_srl_epi16                    │ 0    │ AVX-512 │ AVX512BW                       │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm512_mask_cvtepi16_storeu_epi8    │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtsepi16_storeu_epi8   │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvtusepi16_storeu_epi8  │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_storeu_epi16                 │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 32 packed 16-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_storeu_epi8                  │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 64 packed 8-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_store_mask32                       │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store 32-bit mask from "a" into memory
_store_mask64                       │ 0    │ AVX-512 │ AVX512BW                       │ Store                     │ AVX512_foundation │ no          │ Store 64-bit mask from "a" into memory
_mm512_mask_shuffle_epi8            │ 0    │ AVX-512 │ AVX512BW                       │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 8-bit integers in "a" within 128-bit lanes using the control in the corresponding 8-bit element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_madd_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_maddubs_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed unsigned 8-bit integers in "a" by packed signed 8-bit integers in "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                       
_mm256_mask_max_epu16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_max_epu8                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_min_epu16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_min_epu8                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_mulhi_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_mulhi_epu16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_mulhrs_epi16            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_mullo_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_reduce_add_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_add_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_and_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_and_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_mul_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_mul_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_or_epi16         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm256_mask_reduce_or_epi8          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_reduce_add_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by addition. Returns the sum of all elements in "a
_mm256_reduce_add_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by addition. Returns the sum of all elements in "a
_mm256_reduce_and_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_reduce_and_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm256_reduce_mul_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm256_reduce_mul_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm256_reduce_or_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm256_reduce_or_epi8               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_mask_madd_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_maddubs_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed unsigned 8-bit integers in "a" by packed signed 8-bit integers in "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                       
_mm_mask_max_epu16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_max_epu8                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_min_epu16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_min_epu8                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_mulhi_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_mulhi_epu16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_mulhrs_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_mullo_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the low 16 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_reduce_add_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_add_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_and_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_and_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_mul_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_mul_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_or_epi16            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_mask_reduce_or_epi8             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication using mask "k". Returns the sum of all active elements in "a
_mm_reduce_add_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by addition. Returns the sum of all elements in "a
_mm_reduce_add_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by addition. Returns the sum of all elements in "a
_mm_reduce_and_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_reduce_and_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_reduce_mul_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_reduce_mul_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_reduce_or_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 16-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm_reduce_or_epi8                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 8-bit integers in "a" by multiplication. Returns the sum of all elements in "a
_mm256_cmp_epi16_mask               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_cmp_epi8_mask                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_cmp_epu16_mask               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_cmp_epu8_mask                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_mask_cmp_epi16_mask          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_cmp_epi8_mask           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cmp_epu16_mask          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cmp_epu8_mask           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_test_epi16_mask         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_test_epi8_mask          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_testn_epi16_mask        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_testn_epi8_mask         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_test_epi16_mask              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_test_epi8_mask               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_testn_epi16_mask             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_testn_epi8_mask              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cmp_epi16_mask                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_cmp_epi8_mask                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cmp_epu16_mask                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_cmp_epu8_mask                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_mask_cmp_epi16_mask             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_cmp_epi8_mask              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cmp_epu16_mask             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 16-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cmp_epu8_mask              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 8-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_test_epi16_mask            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_test_epi8_mask             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_testn_epi16_mask           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_testn_epi8_mask            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_test_epi16_mask                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_test_epi8_mask                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_testn_epi16_mask                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 16-bit integers in "a" and "b", producing intermediate 16-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_testn_epi8_mask                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 8-bit integers in "a" and "b", producing intermediate 8-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_cvtsepi16_epi8               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm256_cvtusepi16_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm256_mask_cvtepi16_epi8           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cvtepi8_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtepu8_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_cvtsepi16_epi8          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvtusepi16_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvtsepi16_epi8                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm_cvtusepi16_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm_mask_cvtepi16_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cvtepi8_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtepu8_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_cvtsepi16_epi8             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtusepi16_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_loadu_epi16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 16 packed 16-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_loadu_epi8                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 32 packed 8-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm_loadu_epi16                     │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 8 packed 16-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm_loadu_epi8                      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 16 packed 8-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_dbsad_epu8                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst". 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected from within 128-bit lanes according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.                                                                                                
_mm256_mask2_permutex2var_epi16     │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_alignr_epi8             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate pairs of 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_broadcastb_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_broadcastw_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_dbsad_epu8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected from within 128-bit lanes according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.
_mm256_mask_packs_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_packs_epi32             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_packus_epi16            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_packus_epi32            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_permutex2var_epi16      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_permutexvar_epi16       │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_shufflehi_epi16         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the high 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the high 64 bits of 128-bit lanes of "dst", with the low 64 bits of 128-bit lanes being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                
_mm256_mask_shufflelo_epi16         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the low 64 bits of 128-bit lanes of "a" using the control in "imm8". Store the results in the low 64 bits of 128-bit lanes of "dst", with the high 64 bits of 128-bit lanes being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_unpackhi_epi16          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_unpackhi_epi8           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_unpacklo_epi16          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_unpacklo_epi8           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_movepi16_mask                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 16-bit integer in "a
_mm256_movepi8_mask                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 8-bit integer in "a
_mm256_movm_epi16                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 16-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm256_movm_epi8                    │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 8-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm_dbsad_epu8                      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst". 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.                                                                                                                          
_mm_mask2_permutex2var_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_alignr_epi8                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate pairs of 16-byte blocks in "a" and "b" into a 32-byte temporary result, shift the result right by "imm8" bytes, and store the low 16 bytes in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_broadcastb_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_broadcastw_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_dbsad_epu8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	Four SADs are performed on four 8-bit quadruplets for each 64-bit lane. The first two SADs use the lower 8-bit quadruplet of the lane from "a", and the last two SADs use the uppper 8-bit quadruplet of the lane from "a". Quadruplets from "b" are selected according to the control in "imm8", and each SAD in each 64-bit lane uses the selected quadruplet at 8-bit offsets.                          
_mm_mask_packs_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_packs_epi32                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_packus_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers from "a" and "b" to packed 8-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_packus_epi32               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_permutex2var_epi16         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_permutexvar_epi16          │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_shufflehi_epi16            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the high 64 bits of "a" using the control in "imm8". Store the results in the high 64 bits of "dst", with the low 64 bits being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_shufflelo_epi16            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in the low 64 bits of "a" using the control in "imm8". Store the results in the low 64 bits of "dst", with the high 64 bits being copied from from "a" to "dst", using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_unpackhi_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_unpackhi_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_unpacklo_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 16-bit integers from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_unpacklo_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 8-bit integers from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_movepi16_mask                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 16-bit integer in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_movepi8_mask                    │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 8-bit integer in "a
_mm_movm_epi16                      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 16-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm_movm_epi8                       │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 8-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm_permutexvar_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 16-bit integers in "a" using the corresponding index in "idx", and store the results in "dst
_mm256_mask_mov_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Move                      │ AVX512_foundation │ no          │ Move packed 16-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_mov_epi8                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Move                      │ AVX512_foundation │ no          │ Move packed 8-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_mov_epi16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Move                      │ AVX512_foundation │ no          │ Move packed 16-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_mov_epi8                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Move                      │ AVX512_foundation │ no          │ Move packed 8-bit integers from "a" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_set1_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Set                       │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_set1_epi8               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Set                       │ AVX512_foundation │ no          │ Broadcast 8-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_set1_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Set                       │ AVX512_foundation │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_set1_epi8                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Set                       │ AVX512_foundation │ no          │ Broadcast 8-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_sll_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_slli_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_sllv_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_sra_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_srai_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_srav_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_srl_epi16               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_srli_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_srlv_epi16              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_sllv_epi16                   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sll_epi16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_slli_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_sllv_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sra_epi16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_srai_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_srav_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_srl_epi16                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_srli_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_srlv_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_sllv_epi16                      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Shift                     │ AVX512_foundation │ no          │ Shift packed 16-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_reduce_max_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm256_mask_reduce_max_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm256_mask_reduce_max_epu16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm256_mask_reduce_max_epu8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm256_mask_reduce_min_epi16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm256_mask_reduce_min_epi8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm256_mask_reduce_min_epu16        │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm256_mask_reduce_min_epu8         │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm256_reduce_max_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm256_reduce_max_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm256_reduce_max_epu16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm256_reduce_max_epu8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm256_reduce_min_epi16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm256_reduce_min_epi8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm256_reduce_min_epu16             │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by minimum. Returns the minimum of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_reduce_min_epu8              │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm_mask_reduce_max_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm_mask_reduce_max_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm_mask_reduce_max_epu16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm_mask_reduce_max_epu8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm_mask_reduce_min_epi16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm_mask_reduce_min_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm_mask_reduce_min_epu16           │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm_mask_reduce_min_epu8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_reduce_max_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm_reduce_max_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm_reduce_max_epu16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm_reduce_max_epu8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by maximum. Returns the maximum of all active elements in "a
_mm_reduce_min_epi16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 16-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm_reduce_min_epi8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 8-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm_reduce_min_epu16                │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 16-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm_reduce_min_epu8                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 8-bit integers in "a" by minimum. Returns the minimum of all active elements in "a
_mm256_mask_cvtepi16_storeu_epi8    │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtsepi16_storeu_epi8   │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cvtusepi16_storeu_epi8  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_storeu_epi16                 │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 16 packed 16-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_storeu_epi8                  │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 32 packed 8-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_cvtepi16_storeu_epi8       │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed 16-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cvtsepi16_storeu_epi8      │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 16-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cvtusepi16_storeu_epi8     │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 16-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_storeu_epi16                    │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 8 packed 16-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm_storeu_epi8                     │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 16 packed 8-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_shuffle_epi8            │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle packed 8-bit integers in "a" according to shuffle control mask in the corresponding 8-bit element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_shuffle_epi8               │ 0    │ AVX-512 │ AVX512BW + AVX512VL            │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle packed 8-bit integers in "a" according to shuffle control mask in the corresponding 8-bit element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_conflict_epi32               │ 0    │ AVX-512 │ AVX512CD                       │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_conflict_epi64               │ 0    │ AVX-512 │ AVX512CD                       │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_conflict_epi32          │ 0    │ AVX-512 │ AVX512CD                       │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_conflict_epi64          │ 0    │ AVX-512 │ AVX512CD                       │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_broadcastmb_epi64            │ 0    │ AVX-512 │ AVX512CD                       │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low 8-bits from input mask "k" to all 64-bit elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_broadcastmw_epi32            │ 0    │ AVX-512 │ AVX512CD                       │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low 16-bits from input mask "k" to all 32-bit elements of "dst
_mm256_conflict_epi32               │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_conflict_epi64               │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_conflict_epi32          │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_conflict_epi64          │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm_conflict_epi32                  │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_conflict_epi64                  │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit. Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_conflict_epi32             │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 32-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_conflict_epi64             │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Compare                   │ AVX512_foundation │ no          │ Test each 64-bit element of "a" for equality with all other elements in "a" closer to the least significant bit using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each element's comparison forms a zero extended bit vector in "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_broadcastmb_epi64            │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low 8-bits from input mask "k" to all 64-bit elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_broadcastmw_epi32            │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low 16-bits from input mask "k" to all 32-bit elements of "dst
_mm_broadcastmb_epi64               │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low 8-bits from input mask "k" to all 64-bit elements of "dst
_mm_broadcastmw_epi32               │ 0    │ AVX-512 │ AVX512CD + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low 16-bits from input mask "k" to all 32-bit elements of "dst
_mm512_mask_mullo_epi64             │ 0    │ AVX-512 │ AVX512DQ                       │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvt_roundepi64_pd            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepi64_ps            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepu64_pd            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepu64_ps            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundpd_epi64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_cvt_roundpd_epu64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst".  	[round_note
_mm512_cvt_roundps_epi64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst".  	[round_note
_mm512_cvt_roundps_epu64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst".  	[round_note
_mm512_cvtpd_epi64                  │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtpd_epu64                  │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm512_cvtps_epi64                  │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtps_epu64                  │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvtt_roundpd_epi64           │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtt_roundpd_epu64           │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_cvtt_roundps_epi64           │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtt_roundps_epu64           │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvt_roundepi64_pd       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundepi64_ps       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundepu64_pd       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundepu64_ps       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundpd_epi64       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cvt_roundpd_epu64       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundps_epi64       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	 [round_note]                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvt_roundps_epu64       │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtepi64_pd             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepi64_ps             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepu64_pd             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtepu64_ps             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtpd_epi64             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtpd_epu64             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtps_epi64             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtps_epu64             │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtt_roundpd_epi64      │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtt_roundpd_epu64      │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvtt_roundps_epi64      │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtt_roundps_epu64      │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvttpd_epi64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvttpd_epu64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvttps_epi64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvttps_epu64            │ 0    │ AVX-512 │ AVX512DQ                       │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_cvtmask8_u32                       │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Convert 8-bit mask "a" into an integer value, and store the result in "dst
_cvtu32_mask8                       │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Convert integer value "a" into an 8-bit mask, and store the result in "k
_kortest_mask8_u8                   │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 8-bit masks "a" and "b". If the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". If the result is all ones, store 1 in "all_ones", otherwise store 0 in "all_ones".                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_kortestc_mask8_u8                  │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 8-bit masks "a" and "b". If the result is all ones, store 1 in "dst", otherwise store 0 in "dst
_kortestz_mask8_u8                  │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 8-bit masks "a" and "b". If the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_kshiftli_mask8                     │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 8-bit mask "a" left by "count" while shifting in zeros, and store the least significant 8 bits of the result in "k
_kshiftri_mask8                     │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 8-bit mask "a" right by "count" while shifting in zeros, and store the least significant 8 bits of the result in "k
_ktest_mask16_u8                    │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 16-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". Compute the bitwise NOT of "a" and then AND with "b", if the result is all zeros, store 1 in "and_not", otherwise store 0 in "and_not".                                                                                                                                                                                                                                                                                                                                                                                                   
_ktest_mask8_u8                     │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 8-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". Compute the bitwise NOT of "a" and then AND with "b", if the result is all zeros, store 1 in "and_not", otherwise store 0 in "and_not".                                                                                                                                                                                                                                                                                                                                                                                                    
_ktestc_mask16_u8                   │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise NOT of 16-bit mask "a" and then AND with "b", if the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_ktestc_mask8_u8                    │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise NOT of 8-bit mask "a" and then AND with "b", if the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_ktestz_mask16_u8                   │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 16-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst
_ktestz_mask8_u8                    │ 0    │ AVX-512 │ AVX512DQ                       │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise AND of 8-bit masks "a" and "b", and if the result is all zeros, store 1 in "dst", otherwise store 0 in "dst
_mm512_broadcast_f32x2              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_broadcast_f32x8              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 8 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst
_mm512_broadcast_f64x2              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst
_mm512_broadcast_i32x2              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst
_mm512_broadcast_i32x8              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 8 packed 32-bit integers from "a" to all elements of "dst
_mm512_broadcast_i64x2              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed 64-bit integers from "a" to all elements of "dst
_mm512_extractf64x2_pd              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm512_extracti64x2_epi64           │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed 64-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm512_fpclass_pd_mask              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_fpclass_ps_mask              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_insertf32x8                  │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 256 bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_insertf64x2                  │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_inserti64x2                  │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 2 packed 64-bit integers) from "b" into "dst" at the location specified by "imm
_mm512_mask_broadcast_f32x2         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_broadcast_f32x8         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 8 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_broadcast_f64x2         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_broadcast_i32x2         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_broadcast_i32x8         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 8 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_broadcast_i64x2         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed 64-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_extractf32x8_ps         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 256 bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_extractf64x2_pd         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_extracti32x8_epi32      │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 256 bits (composed of 8 packed 32-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_extracti64x2_epi64      │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed 64-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_fpclass_pd_mask         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fpclass_ps_mask         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_insertf32x8             │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 256 bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_insertf64x2             │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_inserti32x8             │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 256 bits (composed of 8 packed 32-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_inserti64x2             │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 2 packed 64-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_range_round_pd          │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit. [sae_note]                                                                                                                         
_mm512_mask_range_round_ps          │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit. [sae_note]                                                                                                                         
_mm512_mask_reduce_round_pd         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_reduce_round_ps         │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                        
_mm512_movepi32_mask                │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 32-bit integer in "a
_mm512_movepi64_mask                │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 64-bit integer in "a
_mm512_movm_epi32                   │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 32-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm512_movm_epi64                   │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 64-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm512_range_round_pd               │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit. [sae_note]                                                                                                                                                                                                                         
_mm512_range_round_ps               │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Calculate the max, min, absolute max, or absolute min (depending on control in "imm8") for packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst". 	imm8[1:0] specifies the operation control: 00 = min, 01 = max, 10 = absolute min, 11 = absolute max. 	imm8[3:2] specifies the sign control: 00 = sign from a, 01 = sign from compare result, 10 = clear sign bit, 11 = set sign bit. [sae_note]                                                                                                                                                                                                                         
_mm512_reduce_pd                    │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_reduce_ps                    │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_reduce_round_pd              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_reduce_round_ps              │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_fpclass_sd_mask                 │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test the lower double-precision (64-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_fpclass_ss_mask                 │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test the lower single-precision (32-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k. 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_fpclass_sd_mask            │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test the lower double-precision (64-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fpclass_ss_mask            │ 0    │ AVX-512 │ AVX512DQ                       │ Miscellaneous             │ AVX512_foundation │ no          │ Test the lower single-precision (32-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                       
_store_mask8                        │ 0    │ AVX-512 │ AVX512DQ                       │ Store                     │ AVX512_foundation │ no          │ Store 8-bit mask from "a" into memory
_mm256_mask_mullo_epi64             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mullo_epi64                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_mullo_epi64                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mullo_epi64                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 64-bit integers in "a" and "b", producing intermediate 128-bit integers, and store the low 64 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_cvtpd_epi64                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtpd_epu64                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm256_cvtps_epi64                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtps_epu64                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm256_mask_cvtepi64_pd             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepi64_ps             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepu64_pd             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtepu64_ps             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtpd_epi64             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtpd_epu64             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtps_epi64             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtps_epu64             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvttpd_epi64            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvttpd_epu64            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvttps_epi64            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvttps_epu64            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtpd_epi64                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtpd_epu64                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtps_epi64                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm_cvtps_epu64                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm_mask_cvtepi64_pd                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtepi64_ps                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtepu64_pd                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtepu64_ps                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtpd_epi64                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtpd_epu64                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtps_epi64                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtps_epu64                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvttpd_epi64               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvttpd_epu64               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvttps_epi64               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvttps_epu64               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_and_pd                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_and_ps                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_andnot_pd               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_andnot_ps               │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_or_pd                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_or_ps                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_xor_pd                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_xor_ps                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_and_pd                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_and_ps                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_andnot_pd                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed double-precision (64-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_andnot_ps                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NOT of packed single-precision (32-bit) floating-point elements in "a" and then AND with "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_or_pd                      │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_or_ps                      │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_xor_pd                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_xor_ps                     │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_broadcast_f32x2              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst
_mm256_broadcast_f64x2              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst
_mm256_broadcast_i32x2              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_broadcast_i64x2              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed 64-bit integers from "a" to all elements of "dst
_mm256_extractf64x2_pd              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm256_extracti64x2_epi64           │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed 64-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm256_fpclass_pd_mask              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_fpclass_ps_mask              │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_insertf64x2                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_inserti64x2                  │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 2 packed 64-bit integers) from "b" into "dst" at the location specified by "imm
_mm256_mask_broadcast_f32x2         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_broadcast_f64x2         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_broadcast_i32x2         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_broadcast_i64x2         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 2 packed 64-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_extractf64x2_pd         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_extracti64x2_epi64      │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 2 packed 64-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_fpclass_pd_mask         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_fpclass_ps_mask         │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_insertf64x2             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_inserti64x2             │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 2 packed 64-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_movepi32_mask                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 32-bit integer in "a
_mm256_movepi64_mask                │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 64-bit integer in "a
_mm256_movm_epi32                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 32-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm256_movm_epi64                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 64-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm256_reduce_pd                    │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_reduce_ps                    │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_broadcast_i32x2                 │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst
_mm_fpclass_pd_mask                 │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_fpclass_ps_mask                 │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_broadcast_i32x2            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the lower 2 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_fpclass_pd_mask            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed double-precision (64-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_fpclass_ps_mask            │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Test packed single-precision (32-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 	[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_movepi32_mask                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 32-bit integer in "a
_mm_movepi64_mask                   │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each bit of mask register "k" based on the most significant bit of the corresponding packed 64-bit integer in "a
_mm_movm_epi32                      │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 32-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm_movm_epi64                      │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Set each packed 64-bit integer in "dst" to all ones or all zeros based on the value of the corresponding bit in "k
_mm_reduce_pd                       │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed double-precision (64-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_reduce_ps                       │ 0    │ AVX-512 │ AVX512DQ + AVX512VL            │ Miscellaneous             │ AVX512_foundation │ no          │ Extract the reduced argument of packed single-precision (32-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_add_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst". 	[round_note
_mm512_add_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst". 	[round_note
_mm512_div_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", =and store the results in "dst". 	[round_note
_mm512_div_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst". 	[round_note
_mm512_fmadd_round_pd               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fmadd_round_ps               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fmaddsub_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmaddsub_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmaddsub_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fmaddsub_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fmsub_round_pd               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_fmsub_round_ps               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_fmsubadd_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmsubadd_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_fmsubadd_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fmsubadd_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fnmadd_round_pd              │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst". 	 [round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_fnmadd_round_ps              │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".   	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_fnmsub_round_pd              │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".   	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fnmsub_round_ps              │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmadd_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask3_fmadd_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask3_fmaddsub_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmaddsub_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmaddsub_round_pd      │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmaddsub_round_ps      │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmsub_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask3_fmsub_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask3_fmsubadd_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmsubadd_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask3_fmsubadd_round_pd      │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmsubadd_round_ps      │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fnmadd_round_pd        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask3_fnmadd_round_ps        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask3_fnmsub_round_pd        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask3_fnmsub_round_ps        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).  [round_note]                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_add_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_add_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_div_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed double-precision (64-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_div_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Divide packed single-precision (32-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_fmadd_round_pd          │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_fmadd_round_ps          │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_fmaddsub_pd             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmaddsub_ps             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmaddsub_round_pd       │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fmaddsub_round_ps       │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fmsub_round_pd          │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_fmsub_round_ps          │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_fmsubadd_pd             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmsubadd_ps             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_fmsubadd_round_pd       │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fmsubadd_round_ps       │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_fnmadd_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_fnmadd_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). [round_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_fnmsub_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fnmsub_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_mul_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_mul_epu32               │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_mul_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_mul_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	 [round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_mullo_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_reduce_add_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm512_mask_reduce_add_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm512_mask_reduce_add_pd           │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm512_mask_reduce_add_ps           │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by addition using mask "k". Returns the sum of all active elements in "a
_mm512_mask_reduce_mul_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by multiplication using mask "k". Returns the product of all active elements in "a
_mm512_mask_reduce_mul_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by multiplication using mask "k". Returns the product of all active elements in "a
_mm512_mask_reduce_mul_pd           │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by multiplication using mask "k". Returns the product of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_reduce_mul_ps           │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by multiplication using mask "k". Returns the product of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_sub_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_sub_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mul_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst
_mm512_mul_epu32                    │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst
_mm512_mul_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst".  	[round_note
_mm512_mul_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst".  	[round_note
_mm512_reduce_add_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by addition. Returns the sum of all elements in "a
_mm512_reduce_add_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by addition. Returns the sum of all elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_reduce_add_pd                │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by addition. Returns the sum of all elements in "a
_mm512_reduce_add_ps                │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by addition. Returns the sum of all elements in "a
_mm512_reduce_mul_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by multiplication. Returns the product of all elements in "a
_mm512_reduce_mul_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by multiplication. Returns the product of all elements in "a
_mm512_reduce_mul_pd                │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by multiplication. Returns the product of all elements in "a
_mm512_reduce_mul_ps                │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by multiplication. Returns the product of all elements in "a
_mm512_sub_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_sub_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_cmp_epi32_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epi64_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epu32_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_epu64_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm512_cmp_round_pd_mask            │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_cmp_round_ps_mask            │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_cmpeq_pd_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmpeq_ps_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for equality, and store the results in mask vector "k
_mm512_cmple_pd_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmple_ps_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in mask vector "k
_mm512_cmplt_pd_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmplt_ps_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than, and store the results in mask vector "k
_mm512_cmpneq_pd_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpneq_ps_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-equal, and store the results in mask vector "k
_mm512_cmpnle_pd_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in mask vector "k
_mm512_cmpnle_ps_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in mask vector "k
_mm512_cmpnlt_pd_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in mask vector "k
_mm512_cmpnlt_ps_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in mask vector "k
_mm512_cmpord_pd_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in mask vector "k
_mm512_cmpord_ps_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in mask vector "k
_mm512_cmpunord_pd_mask             │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cmpunord_ps_mask             │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in mask vector "k
_mm512_mask_cmp_epi32_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cmp_epi64_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cmp_epu32_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmp_epu64_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmp_round_pd_mask       │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cmp_round_ps_mask       │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cmpeq_pd_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cmpeq_ps_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for equality, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cmple_pd_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cmple_ps_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cmplt_pd_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmplt_ps_mask           │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmpneq_pd_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmpneq_ps_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cmpnle_pd_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmpnle_ps_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than-or-equal, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cmpnlt_pd_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmpnlt_ps_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" for not-less-than, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmpord_pd_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cmpord_ps_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if neither is NaN, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cmpunord_pd_mask        │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cmpunord_ps_mask        │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b" to see if either is NaN, and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cmp_round_sd_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower double-precision (64-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cmp_round_ss_mask               │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower single-precision (32-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cmp_sd_mask                     │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower double-precision (64-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_cmp_ss_mask                     │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower single-precision (32-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cmp_round_sd_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower double-precision (64-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmp_round_ss_mask          │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower single-precision (32-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cmp_sd_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower double-precision (64-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set).                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cmp_ss_mask                │ 0    │ AVX-512 │ AVX512F                        │ Compare                   │ AVX512_foundation │ no          │ Compare the lower single-precision (32-bit) floating-point element in "a" and "b" based on the comparison operand specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set).                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_cvt_roundepi32_ps            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_cvt_roundepu32_ps            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundpd_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundpd_epu32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundpd_ps               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvt_roundph_ps               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvt_roundps_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst".  	[round_note
_mm512_cvt_roundps_epu32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst".  	[round_note
_mm512_cvt_roundps_pd               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_cvt_roundps_ph               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". [round2_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_cvtepi32_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm512_cvtepi32lo_pd                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of packed 32-bit integer elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtepu32lo_pd                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of packed 32-bit unsigned integer elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_cvtpd_epi32                  │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtpd_epu32                  │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm512_cvtpd_pslo                   │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs an element-by-element conversion of packed double-precision (64-bit) floating-point elements in "v2" to single-precision (32-bit) floating-point elements and stores them in "dst". The elements are stored in the lower half of the results vector, while the remaining upper half locations are set to 0.                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvtph_ps                     │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvtps_epi32                  │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtps_epu32                  │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm512_cvtps_ph                     │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". [round2_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_cvtpslo_pd                   │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of packed single-precision (32-bit) floating-point elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_cvtsd_f64                    │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Copy the lower double-precision (64-bit) floating-point element of "a" to "dst
_mm512_cvtsepi32_epi16              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst
_mm512_cvtsepi32_epi8               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm512_cvtsepi64_epi16              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst
_mm512_cvtsepi64_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst
_mm512_cvtsepi64_epi8               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm512_cvtsi512_si32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Copy the lower 32-bit integer in "a" to "dst
_mm512_cvtss_f32                    │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Copy the lower single-precision (32-bit) floating-point element of "a" to "dst
_mm512_cvtt_roundpd_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst".  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_cvtt_roundpd_epu32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst".  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_cvtt_roundps_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst".  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_cvtt_roundps_epu32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst".  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_cvtusepi32_epi16             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst
_mm512_cvtusepi32_epi8              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm512_cvtusepi64_epi16             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst
_mm512_cvtusepi64_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst
_mm512_cvtusepi64_epi8              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm512_mask_cvt_roundepi32_ps       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundepu32_ps       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundpd_epi32       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cvt_roundpd_epu32       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundpd_ps          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cvt_roundph_ps          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvt_roundps_epi32       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_cvt_roundps_epu32       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvt_roundps_pd          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvt_roundps_ph          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round2_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtepi16_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtepi16_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtepi32_epi16          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtepi32_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtepi32_epi8           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cvtepi32_pd             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepi32_ps             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepi32lo_pd           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of packed 32-bit integer elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtepi64_epi16          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtepi64_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtepi64_epi8           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cvtepi8_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_cvtepi8_epi64           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvtepu16_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtepu16_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtepu32_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtepu32_pd             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtepu32_ps             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtepu32lo_pd           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of 32-bit unsigned integer elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cvtepu8_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_cvtepu8_epi64           │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_cvtpd_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtpd_epu32             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtpd_ps                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtpd_pslo              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs an element-by-element conversion of packed double-precision (64-bit) floating-point elements in "v2" to single-precision (32-bit) floating-point elements and stores them in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The elements are stored in the lower half of the results vector, while the remaining upper half locations are set to 0.                                                                                                                                                                                                                                                         
_mm512_mask_cvtph_ps                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtps_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtps_epu32             │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtps_pd                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtps_ph                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round2_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtpslo_pd              │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Performs element-by-element conversion of the lower half of packed single-precision (32-bit) floating-point elements in "v2" to packed double-precision (64-bit) floating-point elements, storing the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtsepi32_epi16         │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvtsepi32_epi8          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtsepi64_epi16         │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvtsepi64_epi32         │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvtsepi64_epi8          │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtt_roundpd_epi32      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtt_roundpd_epu32      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtt_roundps_epi32      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvtt_roundps_epu32      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvttpd_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvttpd_epu32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvttps_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvttps_epu32            │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtusepi32_epi16        │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtusepi32_epi8         │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtusepi64_epi16        │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtusepi64_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtusepi64_epi8         │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvt_roundsd_i32                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsd_i64                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsd_si32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsd_si64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsd_u32                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsd_u64                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_cvt_roundss_i32                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundss_i64                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundss_si32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundss_si64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvt_roundss_u32                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundss_u64                 │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst". 	[round_note
_mm_cvtsd_i32                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvtsd_i64                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtsd_u32                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst
_mm_cvtsd_u64                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst
_mm_cvtss_i32                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst
_mm_cvtss_i64                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtss_u32                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst
_mm_cvtss_u64                       │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst
_mm_cvtt_roundsd_i32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundsd_i64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundsd_si32               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundsd_si64               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundsd_u32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst". 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_cvtt_roundsd_u64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst". 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_cvtt_roundss_i32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundss_i64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundss_si32               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst". 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_cvtt_roundss_si64               │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst". 	[sae_note
_mm_cvtt_roundss_u32                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst". 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_cvtt_roundss_u64                │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst". 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_cvttsd_i32                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst
_mm_cvttsd_i64                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_cvttsd_u32                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst
_mm_cvttsd_u64                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst
_mm_cvttss_i32                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst
_mm_cvttss_i64                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_cvttss_u32                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst
_mm_cvttss_u64                      │ 0    │ AVX-512 │ AVX512F                        │ Convert                   │ AVX512_foundation │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst
_mm512_mask_rsqrt14_ps              │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_sqrt_round_pd           │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_sqrt_round_ps           │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_rsqrt14_ps                   │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_sqrt_round_pd                │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". 	[round_note
_mm512_sqrt_round_ps                │ 0    │ AVX-512 │ AVX512F                        │ Elementary Math Functions │ AVX512_foundation │ no          │ Compute the square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". 	[round_note
_mm512_i32logather_epi64            │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Loads 8 64-bit integer elements from memory starting at location "base_addr" at packed 32-bit integer indices stored in the lower half of "vindex" scaled by "scale" and stores them in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_i32logather_pd               │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Loads 8 double-precision (64-bit) floating-point elements stored at memory locations starting at location "base_addr" at packed 32-bit integer indices stored in the lower half of "vindex" scaled by "scale" them in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_load_epi32                   │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 16 packed 32-bit integers) from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_load_epi64                   │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 8 packed 64-bit integers) from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_loadu_epi32                  │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 16 packed 32-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_loadu_epi64                  │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits (composed of 8 packed 64-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_i32logather_epi64       │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Loads 8 64-bit integer elements from memory starting at location "base_addr" at packed 32-bit integer indices stored in the lower half of "vindex" scaled by "scale" and stores them in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_i32logather_pd          │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Loads 8 double-precision (64-bit) floating-point elements from memory starting at location "base_addr" at packed 32-bit integer indices stored in the lower half of "vindex" scaled by "scale" into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_load_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_load_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_load_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_load_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_stream_load_si512            │ 0    │ AVX-512 │ AVX512F                        │ Load                      │ AVX512_foundation │ no          │ Load 512-bits of integer data from memory into "dst" using a non-temporal memory hint.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_and_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_and_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of 512 bits (composed of packed 64-bit integers) in "a" and "b", and store the results in "dst
_mm512_mask_reduce_and_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by bitwise AND using mask "k". Returns the bitwise AND of all active elements in "a
_mm512_mask_reduce_and_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by bitwise AND using mask "k". Returns the bitwise AND of all active elements in "a
_mm512_mask_reduce_or_epi32         │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by bitwise OR using mask "k". Returns the bitwise OR of all active elements in "a
_mm512_mask_reduce_or_epi64         │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by bitwise OR using mask "k". Returns the bitwise OR of all active elements in "a
_mm512_mask_ternarylogic_epi32      │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 32-bit granularity (32-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm512_mask_ternarylogic_epi64      │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 64-bit granularity (64-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm512_mask_test_epi32_mask         │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_test_epi64_mask         │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_testn_epi32_mask        │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_testn_epi64_mask        │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_or_epi32                     │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst
_mm512_or_epi64                     │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the resut in "dst
_mm512_reduce_and_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by bitwise AND. Returns the bitwise AND of all elements in "a
_mm512_reduce_and_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by bitwise AND. Returns the bitwise AND of all elements in "a
_mm512_reduce_or_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 32-bit integers in "a" by bitwise OR. Returns the bitwise OR of all elements in "a
_mm512_reduce_or_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ yes         │ Reduce the packed 64-bit integers in "a" by bitwise OR. Returns the bitwise OR of all elements in "a
_mm512_ternarylogic_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm512_ternarylogic_epi64           │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm512_test_epi32_mask              │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_test_epi64_mask              │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_testn_epi32_mask             │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_testn_epi64_mask             │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_xor_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_xor_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst
_cvtmask16_u32                      │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Convert 16-bit mask "a" into an integer value, and store the result in "dst
_cvtu32_mask16                      │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Convert integer value "a" into an 16-bit mask, and store the result in "k
_kortest_mask16_u8                  │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 16-bit masks "a" and "b". If the result is all zeros, store 1 in "dst", otherwise store 0 in "dst". If the result is all ones, store 1 in "all_ones", otherwise store 0 in "all_ones".                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_kortestc_mask16_u8                 │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 16-bit masks "a" and "b". If the result is all ones, store 1 in "dst", otherwise store 0 in "dst
_kortestz_mask16_u8                 │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Compute the bitwise OR of 16-bit masks "a" and "b". If the result is all zeroes, store 1 in "dst", otherwise store 0 in "dst
_kshiftli_mask16                    │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 16-bit mask "a" left by "count" while shifting in zeros, and store the least significant 16 bits of the result in "k
_kshiftri_mask16                    │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Shift the bits of 16-bit mask "a" right by "count" while shifting in zeros, and store the least significant 16 bits of the result in "k
_mm512_int2mask                     │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Converts integer "mask" into bitmask, storing the result in "dst
_mm512_kortestc                     │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Performs bitwise OR between "k1" and "k2", storing the result in "dst". CF flag is set if "dst" consists of all 1's
_mm512_kortestz                     │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Performs bitwise OR between "k1" and "k2", storing the result in "dst". ZF flag is set if "dst" is
_mm512_mask2int                     │ 0    │ AVX-512 │ AVX512F                        │ Mask                      │ AVX512_foundation │ no          │ Converts bit mask "k1" into an integer value, storing the results in "dst
_mm512_fixupimm_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fixupimm_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_fixupimm_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_fixupimm_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_getexp_round_pd              │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                     
_mm512_getexp_round_ps              │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                                     
_mm512_getmant_pd                   │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm512_getmant_ps                   │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm512_getmant_round_pd             │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                                                                                                                                                                                                          
_mm512_getmant_round_ps             │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_alignr_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 128-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 64 bytes (16 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_alignr_epi64            │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 128-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 64 bytes (8 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_fixupimm_pd             │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_fixupimm_ps             │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_fixupimm_round_pd       │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_fixupimm_round_ps       │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting. 	[sae_note]                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_getexp_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed double-precision (64-bit) floating-point element in "a" to a double-precision (64-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element. 	[sae_note]                                                                                                                                                                                                                                                                     
_mm512_mask_getexp_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Convert the exponent of each packed single-precision (32-bit) floating-point element in "a" to a single-precision (32-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element. 	[sae_note]                                                                                                                                                                                                                                                                     
_mm512_mask_getmant_round_pd        │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                                                                                                          
_mm512_mask_getmant_round_ps        │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                                                                                                          
_mm512_mask_roundscale_round_pd     │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_roundscale_round_ps     │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_scalef_round_pd         │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_scalef_round_ps         │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_roundscale_round_pd          │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_roundscale_round_ps          │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_scalef_round_pd              │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed double-precision (64-bit) floating-point elements in "a" using values from "b", and store the results in "dst". 	[round_note
_mm512_scalef_round_ps              │ 0    │ AVX-512 │ AVX512F                        │ Miscellaneous             │ AVX512_foundation │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", and store the results in "dst". 	[round_note
_mm512_mask_mov_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Move packed 32-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_mov_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Move packed 64-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_mov_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Move packed double-precision (64-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_mov_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Move packed single-precision (32-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_movedup_pd              │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed double-precision (64-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_movehdup_ps             │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_moveldup_ps             │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_movedup_pd                   │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed double-precision (64-bit) floating-point elements from "a", and store the results in "dst
_mm512_movehdup_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm512_moveldup_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm512_mask_set1_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Broadcast 32-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_mask_set1_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Broadcast 64-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm512_set4_epi32                   │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 32-bit integers in "dst" with the repeated 4 element sequence
_mm512_set4_epi64                   │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 64-bit integers in "dst" with the repeated 4 element sequence
_mm512_set4_pd                      │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the repeated 4 element sequence
_mm512_set4_ps                      │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the repeated 4 element sequence
_mm512_set_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 32-bit integers in "dst" with the supplied values
_mm512_set_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 64-bit integers in "dst" with the supplied values
_mm512_set_pd                       │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_set_ps                       │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values
_mm512_setr4_epi32                  │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 32-bit integers in "dst" with the repeated 4 element sequence in reverse order.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_setr4_epi64                  │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed 64-bit integers in "dst" with the repeated 4 element sequence in reverse order
_mm512_setr4_pd                     │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the repeated 4 element sequence in reverse order
_mm512_setr4_ps                     │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the repeated 4 element sequence in reverse order
_mm512_setzero                      │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Return vector of type __m512 with all elements set to zero
_mm512_setzero_epi32                │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Return vector of type __m512i with all elements set to zero
_mm512_setzero_pd                   │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Return vector of type __m512d with all elements set to zero
_mm512_setzero_ps                   │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Return vector of type __m512 with all elements set to zero
_mm512_setzero_si512                │ 0    │ AVX-512 │ AVX512F                        │ Set                       │ AVX512_foundation │ no          │ Return vector of type __m512i with all elements set to zero
_mm512_mask_ror_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_ror_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_rorv_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_rorv_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_sll_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_sll_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_slli_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_slli_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_sllv_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_sllv_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_sra_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_sra_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_srai_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_srai_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_srav_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_srav_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_srl_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_srl_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_srli_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_srli_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_srlv_epi32              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_srlv_epi64              │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_ror_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm512_ror_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm512_rorv_epi32                   │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_rorv_epi64                   │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_sll_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm512_sll_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm512_sra_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm512_sra_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_srl_epi32                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_srl_epi64                    │ 0    │ AVX-512 │ AVX512F                        │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_max_epu32               │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_max_epu64               │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_max_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note][max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_max_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note][max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_min_epu32               │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_min_epu64               │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_min_round_pd            │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note][min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_min_round_ps            │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).   [sae_note][min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_reduce_max_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 32-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm512_mask_reduce_max_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 64-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm512_mask_reduce_max_epu32        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 32-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_reduce_max_epu64        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 64-bit integers in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm512_mask_reduce_max_pd           │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm512_mask_reduce_max_ps           │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by maximum using mask "k". Returns the maximum of all active elements in "a
_mm512_mask_reduce_min_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 32-bit integers in "a" by maximum using mask "k". Returns the minimum of all active elements in "a
_mm512_mask_reduce_min_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 64-bit integers in "a" by maximum using mask "k". Returns the minimum of all active elements in "a
_mm512_mask_reduce_min_epu32        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 32-bit integers in "a" by maximum using mask "k". Returns the minimum of all active elements in "a
_mm512_mask_reduce_min_epu64        │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 64-bit integers in "a" by minimum using mask "k". Returns the minimum of all active elements in "a
_mm512_mask_reduce_min_pd           │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by maximum using mask "k". Returns the minimum of all active elements in "a". [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_reduce_min_ps           │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by maximum using mask "k". Returns the minimum of all active elements in "a". [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_max_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst".  [sae_note][max_float_note
_mm512_max_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst".  [sae_note][max_float_note
_mm512_min_round_pd                 │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed double-precision (64-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst".  [sae_note][min_float_note
_mm512_min_round_ps                 │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ no          │ Compare packed single-precision (32-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst".  [sae_note][min_float_note
_mm512_reduce_max_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 32-bit integers in "a" by maximum. Returns the maximum of all elements in "a
_mm512_reduce_max_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 64-bit integers in "a" by maximum. Returns the maximum of all elements in "a
_mm512_reduce_max_epu32             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 32-bit integers in "a" by maximum. Returns the maximum of all elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_reduce_max_epu64             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 64-bit integers in "a" by maximum. Returns the maximum of all elements in "a
_mm512_reduce_max_pd                │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by maximum. Returns the maximum of all elements in "a
_mm512_reduce_max_ps                │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by maximum. Returns the maximum of all elements in "a
_mm512_reduce_min_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 32-bit integers in "a" by minimum. Returns the minimum of all elements in "a
_mm512_reduce_min_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed signed 64-bit integers in "a" by minimum. Returns the minimum of all elements in "a
_mm512_reduce_min_epu32             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 32-bit integers in "a" by minimum. Returns the minimum of all elements in "a
_mm512_reduce_min_epu64             │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed unsigned 64-bit integers in "a" by minimum. Returns the minimum of all elements in "a
_mm512_reduce_min_pd                │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed double-precision (64-bit) floating-point elements in "a" by minimum. Returns the minimum of all elements in "a". [min_float_note
_mm512_reduce_min_ps                │ 0    │ AVX-512 │ AVX512F                        │ Special Math Functions    │ AVX512_foundation │ yes         │ Reduce the packed single-precision (32-bit) floating-point elements in "a" by minimum. Returns the minimum of all elements in "a". [min_float_note
_mm512_i32loscatter_epi64           │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Stores 8 packed 64-bit integer elements located in "a" and stores them in memory locations starting at location "base_addr" at packed 32-bit integer indices stored in "vindex" scaled by "scale".                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_i32loscatter_pd              │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Stores 8 packed double-precision (64-bit) floating-point elements in "a" and to memory locations starting at location "base_addr" at packed 32-bit integer indices stored in "vindex" scaled by "scale".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtepi32_storeu_epi16   │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtepi32_storeu_epi8    │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtepi64_storeu_epi16   │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtepi64_storeu_epi32   │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtepi64_storeu_epi8    │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtsepi32_storeu_epi16  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvtsepi32_storeu_epi8   │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvtsepi64_storeu_epi16  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvtsepi64_storeu_epi32  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_cvtsepi64_storeu_epi8   │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvtusepi32_storeu_epi16 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtusepi32_storeu_epi8  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtusepi64_storeu_epi16 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtusepi64_storeu_epi32 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed 32-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtusepi64_storeu_epi8  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_i32loscatter_epi64      │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Stores 8 packed 64-bit integer elements located in "a" and stores them in memory locations starting at location "base_addr" at packed 32-bit integer indices stored in "vindex" scaled by "scale" using writemask "k" (elements whose corresponding mask bit is not set are not written to memory).                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_i32loscatter_pd         │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Stores 8 packed double-precision (64-bit) floating-point elements in "a" to memory locations starting at location "base_addr" at packed 32-bit integer indices stored in "vindex" scaled by "scale". Only those elements whose corresponding mask bit is set in writemask "k" are written to memory.                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_mullox_epi64            │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ yes         │ Multiplies elements in packed 64-bit integer vectors "a" and "b" together, storing the lower 64 bits of the result in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mullox_epi64                 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ yes         │ Multiplies elements in packed 64-bit integer vectors "a" and "b" together, storing the lower 64 bits of the result in "dst
_mm512_store_epi32                  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 16 packed 32-bit integers) from "a" into memory.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_store_epi64                  │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 8 packed 64-bit integers) from "a" into memory.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_storeu_epi32                 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 16 packed 32-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_storeu_epi64                 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 8 packed 64-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_stream_pd                    │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 8 packed double-precision (64-bit) floating-point elements) from "a" into memory using a non-temporal memory hint.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_stream_ps                    │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits (composed of 16 packed single-precision (32-bit) floating-point elements) from "a" into memory using a non-temporal memory hint.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_stream_si512                 │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 512-bits of integer data from "a" into memory using a non-temporal memory hint.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_store_mask16                       │ 0    │ AVX-512 │ AVX512F                        │ Store                     │ AVX512_foundation │ no          │ Store 16-bit mask from "a" into memory
_mm512_broadcast_f32x4              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_broadcast_f64x4              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst
_mm512_broadcast_i32x4              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed 32-bit integers from "a" to all elements of "dst
_mm512_broadcast_i64x4              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed 64-bit integers from "a" to all elements of "dst
_mm512_broadcastd_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst
_mm512_broadcastq_epi64             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst
_mm512_broadcastsd_pd               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low double-precision (64-bit) floating-point element from "a" to all elements of "dst
_mm512_broadcastss_ps               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst
_mm512_extractf32x4_ps              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm512_extracti32x4_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed 32-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm512_insertf32x4                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_insertf64x4                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 256 bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_inserti32x4                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 4 packed 32-bit integers) from "b" into "dst" at the location specified by "imm
_mm512_mask2_permutex2var_epi32     │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask2_permutex2var_epi64     │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask2_permutex2var_pd        │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set)                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask2_permutex2var_ps        │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_broadcast_f32x4         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_broadcast_f64x4         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed double-precision (64-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_broadcast_i32x4         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_broadcast_i64x4         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the 4 packed 64-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_broadcastd_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_broadcastq_epi64        │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_broadcastsd_pd          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low double-precision (64-bit) floating-point element from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_broadcastss_ps          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_compress_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_compress_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_compress_pd             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_compress_ps             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_compressstoreu_epi32    │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm512_mask_compressstoreu_epi64    │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm512_mask_compressstoreu_pd       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_compressstoreu_ps       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_expand_epi32            │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_expand_epi64            │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_expand_pd               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_expand_ps               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_expandloadu_epi32       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_expandloadu_epi64       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_expandloadu_pd          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_expandloadu_ps          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_extractf32x4_ps         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_extractf64x4_pd         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 256 bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_extracti32x4_epi32      │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed 32-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_extracti64x4_epi64      │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Extract 256 bits (composed of 4 packed 64-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_insertf32x4             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_insertf64x4             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 256 bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_inserti32x4             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 4 packed 32-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_inserti64x4             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 256 bits (composed of 4 packed 64-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_permute_pd              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_permute_ps              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_permutevar_epi32        │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Note that this intrinsic shuffles across 128-bit lanes, unlike past intrinsics that use the "permutevar" name. This intrinsic is identical to "_mm512_mask_permutexvar_epi32", and it is recommended that you use that intrinsic name.                                                                                                                                                                                                                   
_mm512_mask_permutevar_pd           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_permutevar_ps           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_permutex2var_epi32      │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_permutex2var_epi64      │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_permutex2var_pd         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_permutex2var_ps         │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_permutex_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" within 256-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_permutex_pd             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 256-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_permutexvar_epi32       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_permutexvar_epi64       │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_permutexvar_pd          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_permutexvar_ps          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_shuffle_epi32           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_shuffle_f32x4           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 single-precision (32-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_shuffle_f64x2           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 double-precision (64-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_shuffle_i32x4           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 32-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_shuffle_i64x2           │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 64-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_shuffle_pd              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_shuffle_ps              │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_unpackhi_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_unpackhi_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_unpackhi_pd             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_unpackhi_ps             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_unpacklo_epi32          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_unpacklo_epi64          │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_unpacklo_pd             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_unpacklo_ps             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_permute_ps                   │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm512_permutevar_epi32             │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst". Note that this intrinsic shuffles across 128-bit lanes, unlike past intrinsics that use the "permutevar" name. This intrinsic is identical to "_mm512_permutexvar_epi32", and it is recommended that you use that intrinsic name.                                                                                                                                                                                                                                                                                                                        
_mm512_permutevar_pd                │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst
_mm512_permutevar_ps                │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst
_mm512_permutex_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 256-bit lanes using the control in "imm8", and store the results in "dst
_mm512_shuffle_ps                   │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst
_mm512_unpackhi_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpackhi_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpackhi_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_unpackhi_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_unpacklo_epi32               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpacklo_epi64               │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm512_unpacklo_pd                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_unpacklo_ps                  │ 0    │ AVX-512 │ AVX512F                        │ Swizzle                   │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_abs_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst
_mm256_mask3_fmaddsub_pd            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask3_fmaddsub_ps            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask3_fmsubadd_pd            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask3_fmsubadd_ps            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_add_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_add_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_fmaddsub_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_fmaddsub_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_fmsubadd_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_fmsubadd_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_max_epu32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_max_epu64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_min_epu32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_min_epu64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_mul_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_mul_epu32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_mul_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_mul_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  RM.                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_mullo_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_rsqrt14_ps              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_sub_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_sub_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_rsqrt14_ps                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_abs_epi64                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the absolute value of packed signed 64-bit integers in "a", and store the unsigned results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask3_fmadd_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fmadd_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fmaddsub_pd               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fmaddsub_ps               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fmsub_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask3_fmsub_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask3_fmsubadd_pd               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fmsubadd_ps               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask3_fnmadd_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask3_fnmadd_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask3_fnmsub_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask3_fnmsub_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_add_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_add_ps                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Add packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_fmaddsub_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fmaddsub_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fmsubadd_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_fmsubadd_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_max_epu32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_max_epu64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_min_epu32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_min_epu64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_mul_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_mul_epu32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_mul_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_mul_ps                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_mullo_epi32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Multiply the packed 32-bit integers in "a" and "b", producing intermediate 64-bit integers, and store the low 32 bits of the intermediate integers in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_rsqrt14_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_sub_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed double-precision (64-bit) floating-point elements in "b" from packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_sub_ps                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Subtract packed single-precision (32-bit) floating-point elements in "b" from packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                               
_mm_rsqrt14_ps                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Arithmetic                │ AVX512_foundation │ no          │ Compute the approximate reciprocal square root of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 2^-14.                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_cmp_epi32_mask               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_cmp_epi64_mask               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_cmp_epu32_mask               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_cmp_epu64_mask               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm256_mask_cmp_epi32_mask          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_cmp_epi64_mask          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_cmp_epu32_mask          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cmp_epu64_mask          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_test_epi32_mask         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_test_epi64_mask         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_testn_epi32_mask        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_testn_epi64_mask        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_test_epi32_mask              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_test_epi64_mask              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_testn_epi32_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_testn_epi64_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_cmp_epi32_mask                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_cmp_epi64_mask                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_cmp_epu32_mask                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_cmp_epu64_mask                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k
_mm_mask_cmp_epi32_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_cmp_epi64_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed signed 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_cmp_epu32_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 32-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cmp_epu64_mask             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compare packed unsigned 64-bit integers in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_test_epi32_mask            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_test_epi64_mask            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_testn_epi32_mask           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_testn_epi64_mask           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" (subject to writemask "k") if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_test_epi32_mask                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_test_epi64_mask                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise AND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is non-zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_testn_epi32_mask                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 32-bit integers in "a" and "b", producing intermediate 32-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_testn_epi64_mask                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Compare                   │ AVX512_foundation │ no          │ Compute the bitwise NAND of packed 64-bit integers in "a" and "b", producing intermediate 64-bit values, and set the corresponding bit in result mask "k" if the intermediate value is zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_cvtpd_epu32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_cvtps_epu32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm256_cvtsepi32_epi16              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst
_mm256_cvtsepi32_epi8               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm256_cvtsepi64_epi16              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cvtsepi64_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst
_mm256_cvtsepi64_epi8               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm256_cvttpd_epu32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm256_cvtusepi32_epi16             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst
_mm256_cvtusepi32_epi8              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm256_cvtusepi64_epi16             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst
_mm256_cvtusepi64_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst
_mm256_cvtusepi64_epi8              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm256_mask_cvt_roundps_ph          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtepi16_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cvtepi16_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtepi32_epi16          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtepi32_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cvtepi32_epi8           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cvtepi32_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepi32_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepi64_epi16          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtepi64_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtepi64_epi8           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cvtepi8_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 8 bytes of "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cvtepi8_epi64           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 4 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cvtepu16_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvtepu16_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in the low 8 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtepu32_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvtepu32_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtepu8_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 8 bytes of "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cvtepu8_epi64           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 4 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_cvtpd_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtpd_epu32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtpd_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cvtph_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtps_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtps_epu32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtps_ph                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtsepi32_epi16         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cvtsepi32_epi8          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvtsepi64_epi16         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cvtsepi64_epi32         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cvtsepi64_epi8          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvttpd_epi32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvttpd_epu32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvttps_epi32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvttps_epu32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtusepi32_epi16        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtusepi32_epi8         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_cvtusepi64_epi16        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtusepi64_epi32        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_cvtusepi64_epi8         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvtepu32_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst
_mm_cvtpd_epu32                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm_cvtps_epu32                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm_cvtsepi32_epi16                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst
_mm_cvtsepi32_epi8                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm_cvtsepi64_epi16                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst
_mm_cvtsepi64_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst
_mm_cvtsepi64_epi8                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst
_mm_cvtusepi32_epi16                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst
_mm_cvtusepi32_epi8                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm_cvtusepi64_epi16                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtusepi64_epi32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst
_mm_cvtusepi64_epi8                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst
_mm_mask_cvt_roundps_ph             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtepi16_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cvtepi16_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 16-bit integers in the low 4 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cvtepi32_epi16             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtepi32_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cvtepi32_epi8              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cvtepi32_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtepi32_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtepi64_epi16             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtepi64_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtepi64_epi8              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cvtepi8_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 4 bytes of "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cvtepi8_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Sign extend packed 8-bit integers in the low 2 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cvtepu16_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtepu16_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 16-bit integers in the low 4 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtepu32_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 32-bit integers in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtepu32_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtepu8_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 4 bytes of "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cvtepu8_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Zero extend packed unsigned 8-bit integers in the low 2 bytes of "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_cvtpd_epi32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtpd_epu32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtpd_ps                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cvtph_ps                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtps_epi32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtps_epu32                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtps_ph                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtsepi32_epi16            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtsepi32_epi8             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtsepi64_epi16            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtsepi64_epi32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtsepi64_epi8             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvttpd_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvttpd_epu32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvttps_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvttps_epu32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed double-precision (32-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtusepi32_epi16           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtusepi32_epi8            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cvtusepi64_epi16           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtusepi64_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_cvtusepi64_epi8            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Convert                   │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_load_epi32                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 8 packed 32-bit integers) from memory into "dst". 		"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_load_epi64                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 4 packed 64-bit integers) from memory into "dst". 		"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_loadu_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 8 packed 32-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_loadu_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 256-bits (composed of 4 packed 64-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_mask_expandloadu_epi32       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_expandloadu_epi64       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_expandloadu_pd          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_expandloadu_ps          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_load_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_load_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_load_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_load_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm_load_epi32                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 4 packed 32-bit integers) from memory into "dst". 		"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_load_epi64                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 2 packed 64-bit integers) from memory into "dst". 		"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_loadu_epi32                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 4 packed 32-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm_loadu_epi64                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load 128-bits (composed of 2 packed 64-bit integers) from memory into "dst". 		"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_expandloadu_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_expandloadu_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_expandloadu_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_expandloadu_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_load_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 32-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_load_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed 64-bit integers from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_load_pd                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed double-precision (64-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_load_ps                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Load                      │ AVX512_foundation │ no          │ Load packed single-precision (32-bit) floating-point elements from memory into "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_ternarylogic_epi32      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 32-bit granularity (32-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm256_mask_ternarylogic_epi64      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 64-bit granularity (64-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm256_or_epi32                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst
_mm256_or_epi64                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the results in "dst
_mm256_ternarylogic_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm256_ternarylogic_epi64           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm256_xor_epi32                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst
_mm256_xor_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst
_mm_mask_ternarylogic_epi32         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 32-bit granularity (32-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm_mask_ternarylogic_epi64         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst" using writemask "k" at 64-bit granularity (64-bit elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                              
_mm_or_epi32                        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 32-bit integers in "a" and "b", and store the results in "dst
_mm_or_epi64                        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise OR of packed 64-bit integers in "a" and "b", and store the results in "dst
_mm_ternarylogic_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 32-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm_ternarylogic_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Bitwise ternary logic that provides the capability to implement any three-operand binary function; the specific binary function is specified by value in "imm8". For each bit in each packed 64-bit integer, the corresponding bit from "a", "b", and "c" are used according to "imm8", and the result is written to the corresponding bit in "dst".                                                                                                                                                                                                                                                                                                                         
_mm_xor_epi32                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 32-bit integers in "a" and "b", and store the results in "dst
_mm_xor_epi64                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Logical                   │ AVX512_foundation │ no          │ Compute the bitwise XOR of packed 64-bit integers in "a" and "b", and store the results in "dst
_mm256_broadcast_f32x4              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 4 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_broadcast_i32x4              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 4 packed 32-bit integers from "a" to all elements of "dst
_mm256_extractf32x4_ps              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the result in "dst
_mm256_extracti32x4_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed 32-bit integers) from "a", selected with "imm8", and store the result in "dst
_mm256_fixupimm_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_fixupimm_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_getmant_pd                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm256_getmant_ps                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm256_insertf32x4                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "b" into "dst" at the location specified by "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_inserti32x4                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "dst", then insert 128 bits (composed of 4 packed 32-bit integers) from "b" into "dst" at the location specified by "imm
_mm256_mask2_permutex2var_epi32     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask2_permutex2var_epi64     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask2_permutex2var_pd        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask2_permutex2var_ps        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_alignr_epi32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 64-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 32 bytes (8 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_alignr_epi64            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 64-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 32 bytes (4 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_broadcast_f32x4         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 4 packed single-precision (32-bit) floating-point elements from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_broadcast_i32x4         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ yes         │ Broadcast the 4 packed 32-bit integers from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_broadcastd_epi32        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_broadcastq_epi64        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_broadcastsd_pd          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low double-precision (64-bit) floating-point element from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_broadcastss_ps          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_compress_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_compress_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_compress_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_compress_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_expand_epi32            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_expand_epi64            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_expand_pd               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_expand_ps               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_extractf32x4_ps         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_extracti32x4_epi32      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Extract 128 bits (composed of 4 packed 32-bit integers) from "a", selected with "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_fixupimm_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_fixupimm_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_insertf32x4             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_inserti32x4             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Copy "a" to "tmp", then insert 128 bits (composed of 4 packed 32-bit integers) from "b" into "tmp" at the location specified by "imm8".  Store "tmp" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_permute_pd              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_permute_ps              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_permutevar_pd           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_permutevar_ps           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_permutex2var_epi32      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_permutex2var_epi64      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_permutex2var_pd         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_permutex2var_ps         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_permutex_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_permutex_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_permutexvar_epi32       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_permutexvar_epi64       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_permutexvar_pd          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_permutexvar_ps          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_shuffle_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_shuffle_f32x4           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 single-precision (32-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_shuffle_f64x2           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 double-precision (64-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_shuffle_i32x4           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 32-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_shuffle_i64x2           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 64-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_shuffle_pd              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_shuffle_ps              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" within 128-bit lanes using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_unpackhi_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_unpackhi_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_unpackhi_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_unpackhi_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_unpacklo_epi32          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_unpacklo_epi64          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_unpacklo_pd             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_unpacklo_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_permutex_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes using the control in "imm8", and store the results in "dst
_mm256_permutex_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" across lanes using the control in "imm8", and store the results in "dst
_mm256_permutexvar_epi64            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_roundscale_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_roundscale_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_shuffle_f32x4                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 single-precision (32-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst
_mm256_shuffle_f64x2                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 double-precision (64-bit) floating-point elements) selected by "imm8" from "a" and "b", and store the results in "dst
_mm256_shuffle_i32x4                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 4 32-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst
_mm256_shuffle_i64x2                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 128-bits (composed of 2 64-bit integers) selected by "imm8" from "a" and "b", and store the results in "dst
_mm_alignr_epi32                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 32-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 16 bytes (4 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_alignr_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 32-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 16 bytes (2 elements) in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_fixupimm_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_fixupimm_ps                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst". "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_getmant_pd                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed double-precision (64-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm_getmant_ps                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Normalize the mantissas of packed single-precision (32-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "interv" and the sign depends on "sc" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm_mask2_permutex2var_epi32        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask2_permutex2var_epi64        │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask2_permutex2var_pd           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set)                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask2_permutex2var_ps           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "idx" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_alignr_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 32-byte immediate result, shift the result right by "imm8" 32-bit elements, and store the low 16 bytes (4 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_alignr_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Concatenate "a" and "b" into a 32-byte immediate result, shift the result right by "imm8" 64-bit elements, and store the low 16 bytes (2 elements) in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_broadcastd_epi32           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_broadcastq_epi64           │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_broadcastss_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_compress_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_compress_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_compress_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_compress_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_expand_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active 32-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_expand_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active 64-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_expand_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active double-precision (64-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_expand_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Load contiguous active single-precision (32-bit) floating-point elements from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_fixupimm_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed double-precision (64-bit) floating-point elements in "a" and "b" using packed 64-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_fixupimm_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Fix up packed single-precision (32-bit) floating-point elements in "a" and "b" using packed 32-bit integers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). "imm8" is used to set the required flags reporting.                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_permute_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_permute_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_permutevar_pd              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_permutevar_ps              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_permutex2var_epi32         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_permutex2var_epi64         │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 64-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_permutex2var_pd            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_permutex2var_ps            │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_shuffle_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle 32-bit integers in "a" using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_shuffle_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle double-precision (64-bit) floating-point elements using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_shuffle_ps                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_unpackhi_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_unpackhi_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_unpackhi_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_unpackhi_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_unpacklo_epi32             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 32-bit integers from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_unpacklo_epi64             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave 64-bit integers from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_unpacklo_pd                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave double-precision (64-bit) floating-point elements from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_unpacklo_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_roundscale_pd                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed double-precision (64-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_roundscale_ps                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Miscellaneous             │ AVX512_foundation │ no          │ Round packed single-precision (32-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_mov_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed 32-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_mov_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed 64-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_mov_pd                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed double-precision (64-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_mov_ps                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed single-precision (32-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_movedup_pd              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed double-precision (64-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_movehdup_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_moveldup_ps             │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_mov_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed 32-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_mov_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed 64-bit integers from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_mov_pd                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed double-precision (64-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_mov_ps                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Move packed single-precision (32-bit) floating-point elements from "a" to "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_movedup_pd                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed double-precision (64-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_movehdup_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_moveldup_ps                │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Move                      │ AVX512_foundation │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_set1_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Set                       │ AVX512_foundation │ no          │ Broadcast 32-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_set1_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Set                       │ AVX512_foundation │ no          │ Broadcast 64-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_set1_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Set                       │ AVX512_foundation │ no          │ Broadcast 32-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm_mask_set1_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Set                       │ AVX512_foundation │ no          │ Broadcast 64-bit integer "a" to all elements of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set
_mm256_mask_ror_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_ror_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_rorv_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_rorv_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_sll_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_sll_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_slli_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_slli_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_sllv_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_sllv_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_sra_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_sra_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_srai_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_srai_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_srav_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_srav_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_srl_epi32               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_srl_epi64               │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_srli_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_srli_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_srlv_epi32              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_srlv_epi64              │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_ror_epi32                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm256_ror_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm256_rorv_epi32                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_rorv_epi64                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_sra_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm256_srai_epi64                   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst
_mm_mask_ror_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_ror_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_rorv_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_rorv_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_sll_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_sll_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_slli_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_slli_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_sllv_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sllv_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sra_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sra_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_srai_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_srai_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_srav_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_srav_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in sign bits, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_srl_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_srl_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_srli_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_srli_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "imm8" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_srlv_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 32-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_srlv_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_ror_epi32                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm_ror_epi64                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in "imm8", and store the results in "dst
_mm_rorv_epi32                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 32-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_rorv_epi64                      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Rotate the bits in each packed 64-bit integer in "a" to the right by the number of bits specified in the corresponding element of "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_sra_epi64                       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Shift                     │ AVX512_foundation │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm256_mask_compressstoreu_epi32    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_compressstoreu_epi64    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm256_mask_compressstoreu_pd       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_compressstoreu_ps       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_cvtepi32_storeu_epi16   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cvtepi32_storeu_epi8    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtepi64_storeu_epi16   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cvtepi64_storeu_epi32   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cvtepi64_storeu_epi8    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtsepi32_storeu_epi16  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cvtsepi32_storeu_epi8   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cvtsepi64_storeu_epi16  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cvtsepi64_storeu_epi32  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_cvtsepi64_storeu_epi8   │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_cvtusepi32_storeu_epi16 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtusepi32_storeu_epi8  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtusepi64_storeu_epi16 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtusepi64_storeu_epi32 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_cvtusepi64_storeu_epi8  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_store_epi32                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 8 packed 32-bit integers) from "a" into memory. 		"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_store_epi64                  │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 4 packed 64-bit integers) from "a" into memory. 		"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_storeu_epi32                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 8 packed 32-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm256_storeu_epi64                 │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 256-bits (composed of 4 packed 64-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm_mask_compressstoreu_epi32       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active 32-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm_mask_compressstoreu_epi64       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active 64-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm_mask_compressstoreu_pd          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active double-precision (64-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_compressstoreu_ps          │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Contiguously store the active single-precision (32-bit) floating-point elements in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_cvtepi32_storeu_epi16      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cvtepi32_storeu_epi8       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 32-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cvtepi64_storeu_epi16      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 16-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cvtepi64_storeu_epi32      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 32-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cvtepi64_storeu_epi8       │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed 64-bit integers in "a" to packed 8-bit integers with truncation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cvtsepi32_storeu_epi16     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cvtsepi32_storeu_epi8      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 32-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cvtsepi64_storeu_epi16     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 16-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cvtsepi64_storeu_epi32     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 32-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_cvtsepi64_storeu_epi8      │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed signed 64-bit integers in "a" to packed 8-bit integers with signed saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_cvtusepi32_storeu_epi16    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtusepi32_storeu_epi8     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 32-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtusepi64_storeu_epi16    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 16-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtusepi64_storeu_epi32    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 32-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_cvtusepi64_storeu_epi8     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Convert packed unsigned 64-bit integers in "a" to packed unsigned 8-bit integers with unsigned saturation, and store the active results (those with their respective bit set in writemask "k") to unaligned memory at "base_addr".                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_store_epi32                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 4 packed 32-bit integers) from "a" into memory. 		"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_store_epi64                     │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 2 packed 64-bit integers) from "a" into memory. 		"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_storeu_epi32                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 4 packed 32-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm_storeu_epi64                    │ 0    │ AVX-512 │ AVX512F + AVX512VL             │ Store                     │ AVX512_foundation │ no          │ Store 128-bits (composed of 2 packed 64-bit integers) from "a" into memory. 		"mem_addr" does not need to be aligned on any particular boundary
_mm512_mask_popcnt_epi32            │ 0    │ AVX-512 │ AVX512VPOPCNTDQ                │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_popcnt_epi64            │ 0    │ AVX-512 │ AVX512VPOPCNTDQ                │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_popcnt_epi32                 │ 0    │ AVX-512 │ AVX512VPOPCNTDQ                │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst
_mm512_popcnt_epi64                 │ 0    │ AVX-512 │ AVX512VPOPCNTDQ                │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst
_mm256_mask_popcnt_epi32            │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_popcnt_epi64            │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_popcnt_epi32                 │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst
_mm256_popcnt_epi64                 │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_popcnt_epi32               │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_popcnt_epi64               │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_popcnt_epi32                    │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 32-bit integers in "a", and store the results in "dst
_mm_popcnt_epi64                    │ 0    │ AVX-512 │ AVX512VPOPCNTDQ + AVX512VL     │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 64-bit integers in "a", and store the results in "dst
_mm512_dpbf16_ps                    │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_dpbf16_ps               │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm512_cvtne2ps_pbh                 │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_cvtneps_pbh                  │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtpbh_ps                    │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvtne2ps_pbh            │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_cvtneps_pbh             │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cvtpbh_ps               │ 0    │ AVX-512 │ AVX512_BF16 + AVX512F          │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                               
_mm256_dpbf16_ps                    │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_dpbf16_ps               │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm_dpbf16_ps                       │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_dpbf16_ps                  │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Arithmetic                │ AVX512_bf16       │ no          │ Compute dot-product of BF16 (16-bit) floating-point pairs in "a" and "b", accumulating the intermediate single-precision (32-bit) floating-point elements with elements in "src", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm256_cvtne2ps_pbh                 │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_cvtneps_pbh                  │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst
_mm256_cvtpbh_ps                    │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_cvtne2ps_pbh            │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_cvtneps_pbh             │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_cvtpbh_ps               │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                               
_mm_cvtne2ps_pbh                    │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvtneps_pbh                     │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst
_mm_cvtness_sbh                     │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ yes         │ Convert the single-precision (32-bit) floating-point element in "a" to a BF16 (16-bit) floating-point element, and store the result in "dst
_mm_cvtpbh_ps                       │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtne2ps_pbh               │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in two vectors "a" and "b" to packed BF16 (16-bit) floating-point elements, and store the results in single vector "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cvtneps_pbh                │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed BF16 (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_cvtpbh_ps                  │ 0    │ AVX-512 │ AVX512_BF16 + AVX512VL         │ Convert                   │ AVX512_bf16       │ yes         │ Convert packed BF16 (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic neither raises any floating point exceptions nor turns sNAN into qNAN.                                                                                                                                                                                                                                                                                                                               
_mm512_bitshuffle_epi64_mask        │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_bitshuffle_epi64_mask   │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst" using zeromask "k" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                       
_mm512_mask_popcnt_epi16            │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_popcnt_epi8             │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_popcnt_epi16                 │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst
_mm512_popcnt_epi8                  │ 0    │ AVX-512 │ AVX512_BITALG                  │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst
_mm256_bitshuffle_epi64_mask        │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_bitshuffle_epi64_mask   │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst" using zeromask "k" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                       
_mm256_mask_popcnt_epi16            │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_popcnt_epi8             │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_popcnt_epi16                 │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst
_mm256_popcnt_epi8                  │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst
_mm_bitshuffle_epi64_mask           │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_bitshuffle_epi64_mask      │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Gather 64 bits from "b" using selection bits in "c". For each 64-bit element in "b", gather 8 bits from the 64-bit element in "b" at 8 bit position controlled by the 8 corresponding 8-bit elements of "c", and store the result in the corresponding 8-bit element of "dst" using zeromask "k" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                       
_mm_mask_popcnt_epi16               │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_popcnt_epi8                │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_popcnt_epi16                    │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 16-bit integers in "a", and store the results in "dst
_mm_popcnt_epi8                     │ 0    │ AVX-512 │ AVX512_BITALG + AVX512VL       │ Bit Manipulation          │ AVX512_extended   │ no          │ Count the number of logical 1 bits in packed 8-bit integers in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_abs_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Finds the absolute value of each packed half-precision (16-bit) floating-point element in "v2", storing the results in "dst
_mm512_add_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_add_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst". 	[round_note
_mm512_cmul_pch                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm512_cmul_round_pch               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                                                                                         
_mm512_conj_pch                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                 
_mm512_div_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm512_div_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst". 	[round_note
_mm512_fcmadd_pch                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                
_mm512_fcmadd_round_pch             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                                                                                                                  
_mm512_fcmul_pch                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm512_fcmul_round_pch              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                                                                                         
_mm512_fmadd_pch                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                         
_mm512_fmadd_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_fmadd_round_pch              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                                                                                                                                                                                           
_mm512_fmadd_round_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_fmaddsub_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_fmaddsub_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_fmsub_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_fmsub_round_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_fmsubadd_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_fmsubadd_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_fmul_pch                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_fmul_round_pch               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 			[round_note]                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_fnmadd_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_fnmadd_round_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_fnmsub_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_fnmsub_round_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask3_fcmadd_pch             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm512_mask3_fcmadd_round_pch       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                    
_mm512_mask3_fmadd_pch              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "src", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                         
_mm512_mask3_fmadd_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmadd_round_pch        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                                                                                             
_mm512_mask3_fmadd_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask3_fmaddsub_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmaddsub_round_ph      │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 		[round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask3_fmsub_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask3_fmsub_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask3_fmsubadd_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask3_fmsubadd_round_ph      │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 		[round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask3_fnmadd_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask3_fnmadd_round_ph        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask3_fnmsub_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask3_fnmsub_round_ph        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_add_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_add_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_cmul_pch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm512_mask_cmul_round_pch          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                                                                          
_mm512_mask_conj_pch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                   
_mm512_mask_div_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_div_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_fcmadd_pch              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm512_mask_fcmadd_round_pch        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                    
_mm512_mask_fcmul_pch               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm512_mask_fcmul_round_pch         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                                                                          
_mm512_mask_fmadd_pch               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "src", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                         
_mm512_mask_fmadd_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_fmadd_round_pch         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                                                                                             
_mm512_mask_fmadd_round_ph          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_fmaddsub_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_fmaddsub_round_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 		[round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fmsub_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_fmsub_round_ph          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_fmsubadd_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_fmsubadd_round_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 		[round_note]                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fmul_pch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm512_mask_fmul_round_pch          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                                                                                                                  
_mm512_mask_fnmadd_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mask_fnmadd_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_fnmsub_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_fnmsub_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_mul_pch                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm512_mask_mul_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm512_mask_mul_round_pch           │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                                                                                                                  
_mm512_mask_mul_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	 [round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_sub_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_sub_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mul_pch                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mul_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm512_mul_round_pch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 			[round_note]                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_mul_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst". 	 [round_note
_mm512_reduce_add_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by addition. Returns the sum of all elements in "a
_mm512_reduce_max_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by maximum. Returns the maximum of all elements in "a". [max_float_note
_mm512_reduce_min_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by minimum. Returns the minimum of all elements in "a". [min_float_note
_mm512_reduce_mul_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by multiplication. Returns the product of all elements in "a
_mm512_sub_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_sub_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_add_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add the lower half-precision (16-bit) floating-point elements in "a" and "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_add_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add the lower half-precision (16-bit) floating-point elements in "a" and "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cmul_round_sch                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                                                                                                   
_mm_cmul_sch                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                  
_mm_div_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide the lower half-precision (16-bit) floating-point element in "a" by the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                      
_mm_div_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide the lower half-precision (16-bit) floating-point element in "a" by the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fcmadd_round_sch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                                                                                                     
_mm_fcmadd_sch                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                   
_mm_fcmul_round_sch                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                                                                                                   
_mm_fcmul_sch                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                  
_mm_fmadd_round_sch                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                                                                                              
_mm_fmadd_round_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                  
_mm_fmadd_sch                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                            
_mm_fmadd_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                
_mm_fmsub_round_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                           
_mm_fmsub_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                         
_mm_fmul_round_sch                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 			[round_note]                                                                                                                                                                                                                                                                                           
_mm_fmul_sch                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                           
_mm_fnmadd_round_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                         
_mm_fnmadd_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                        
_mm_fnmsub_round_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                  
_mm_fnmsub_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask3_fcmadd_round_sch          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "c" when mask bit 0 is not set), and copy the upper 6 packed elements from "c" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                       
_mm_mask3_fcmadd_sch                │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "c" when mask bit 0 is not set), and copy the upper 6 packed elements from "c" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                     
_mm_mask3_fmadd_round_sch           │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "c" when mask bit 0 is not set), and copy the upper 6 packed elements from "c" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                
_mm_mask3_fmadd_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                  
_mm_mask3_fmadd_sch                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "c" when mask bit 0 is not set), and copy the upper 6 packed elements from "c" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                               
_mm_mask3_fmadd_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                
_mm_mask3_fmsub_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                           
_mm_mask3_fmsub_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                         
_mm_mask3_fnmadd_round_sh           │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                         
_mm_mask3_fnmadd_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                        
_mm_mask3_fnmsub_round_sh           │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                  
_mm_mask3_fnmsub_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "c" when mask bit 0 is not set), and copy the upper 7 packed elements from "c" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                 
_mm_mask_add_round_sh               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add the lower half-precision (16-bit) floating-point elements in "a" and "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_add_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Add the lower half-precision (16-bit) floating-point elements in "a" and "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cmul_round_sch             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                   
_mm_mask_cmul_sch                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                  
_mm_mask_div_round_sh               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide the lower half-precision (16-bit) floating-point element in "a" by the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                    
_mm_mask_div_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Divide the lower half-precision (16-bit) floating-point element in "a" by the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                   
_mm_mask_fcmadd_round_sch           │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "a" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 	[round_note]                                       
_mm_mask_fcmadd_sch                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "a" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                     
_mm_mask_fcmul_round_sch            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]". 		[round_note]                                                                                   
_mm_mask_fcmul_sch                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex number in "a" by the complex conjugate of the lower complex number in "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                  
_mm_mask_fmadd_round_sch            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "a" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 	[round_note]                                                                                                                                                                
_mm_mask_fmadd_round_sh             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                  
_mm_mask_fmadd_sch                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", accumulate to the lower complex number in "c", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "a" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                              
_mm_mask_fmadd_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                
_mm_mask_fmsub_round_sh             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                           
_mm_mask_fmsub_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                         
_mm_mask_fmul_round_sch             │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                            
_mm_mask_fmul_sch                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                           
_mm_mask_fnmadd_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                         
_mm_mask_fnmadd_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and add the negated intermediate result to the lower element in "c". Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                        
_mm_mask_fnmsub_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                  
_mm_mask_fnmsub_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point elements in "a" and "b", and subtract the lower element in "c" from the negated intermediate result. Store the result in the lower element of "dst" using writemask "k" (the element is copied from "a" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                 
_mm_mask_mul_round_sch              │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 		[round_note]                                                                                                                                                                                                            
_mm_mask_mul_round_sh               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point element in "a" and "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_mul_sch                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst" using writemask "k" (elements are copied from "src" when mask bit 0 is not set), and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                           
_mm_mask_mul_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point element in "a" and "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_sub_round_sh               │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract the lower half-precision (16-bit) floating-point element in "b" from the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                 
_mm_mask_sub_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract the lower half-precision (16-bit) floating-point element in "b" from the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                               
_mm_mul_round_sch                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]". 			[round_note]                                                                                                                                                                                                                                                                                           
_mm_mul_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point element in "a" and "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mul_sch                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower complex numbers in "a" and "b", and store the result in the lower elements of "dst", and copy the upper 6 packed elements from "a" to the upper elements of "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                           
_mm_mul_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply the lower half-precision (16-bit) floating-point element in "a" and "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_sub_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract the lower half-precision (16-bit) floating-point element in "b" from the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                   
_mm_sub_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract the lower half-precision (16-bit) floating-point element in "b" from the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_cmp_ph_mask                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_cmp_round_ph_mask            │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cmp_ph_mask             │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cmp_round_ph_mask       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm_cmp_round_sh_mask               │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_cmp_sh_mask                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_comi_round_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and return the boolean result (0 or 1). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_comi_sh                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and return the boolean result (0 or 1).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_comieq_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for equality, and return the boolean result (0 or
_mm_comige_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for greater-than-or-equal, and return the boolean result (0 or 1).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_comigt_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for greater-than, and return the boolean result (0 or
_mm_comile_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for less-than-or-equal, and return the boolean result (0 or
_mm_comilt_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for less-than, and return the boolean result (0 or 1).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_comineq_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for not-equal, and return the boolean result (0 or 1).                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cmp_round_sh_mask          │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cmp_sh_mask                │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set).                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_ucomieq_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for equality, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_ucomige_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for greater-than-or-equal, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_ucomigt_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for greater-than, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_ucomile_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for less-than-or-equal, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_ucomilt_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for less-than, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_ucomineq_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Compare                   │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b" for not-equal, and return the boolean result (0 or 1). This instruction will not signal an exception for QNaNs.                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_cvtsh_h                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ yes         │ Copy the lower half-precision (16-bit) floating-point element of "a" to "dst
_mm512_cvt_roundepi16_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepi32_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepi64_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepu16_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepu32_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundepu64_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note
_mm512_cvt_roundpd_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_cvt_roundph_epi16            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundph_epi32            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundph_epi64            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundph_epu16            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvt_roundph_epu32            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundph_epu64            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst". 	[round_note
_mm512_cvt_roundph_pd               │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtepi16_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtepi32_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtepi64_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu16_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu32_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtepu64_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm512_cvtpd_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvtph_epi16                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst
_mm512_cvtph_epi32                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm512_cvtph_epi64                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm512_cvtph_epu16                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst
_mm512_cvtph_epu32                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm512_cvtph_epu64                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm512_cvtph_pd                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvtsh_h                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ yes         │ Copy the lower half-precision (16-bit) floating-point element of "a" to "dst
_mm512_cvtt_roundph_epi16           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvtt_roundph_epi32           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvtt_roundph_epi64           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_cvtt_roundph_epu16           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvtt_roundph_epu32           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvtt_roundph_epu64           │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_cvttph_epi16                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm512_cvttph_epi32                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm512_cvttph_epi64                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm512_cvttph_epu16                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_cvttph_epu32                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm512_cvttph_epu64                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm512_cvtx_roundph_ps              │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_cvtx_roundps_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_cvtxph_ps                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_cvtxps_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvt_roundepi16_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvt_roundepi32_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvt_roundepi64_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_cvt_roundepu16_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundepu32_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundepu64_ph       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundpd_ph          │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvt_roundph_epi16       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvt_roundph_epi32       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvt_roundph_epi64       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_cvt_roundph_epu16       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvt_roundph_epu32       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundph_epu64       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvt_roundph_pd          │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtepi16_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtepi32_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtepi64_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_cvtepu16_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepu32_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtepu64_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtpd_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtph_epi16             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtph_epi32             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtph_epi64             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtph_epu16             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtph_epu32             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtph_epu64             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtph_pd                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtt_roundph_epi16      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtt_roundph_epi32      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtt_roundph_epi64      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_mask_cvtt_roundph_epu16      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtt_roundph_epu32      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvtt_roundph_epu64      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_mask_cvttph_epi16            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvttph_epi32            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvttph_epi64            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvttph_epu16            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvttph_epu32            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvttph_epu64            │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_cvtx_roundph_ps         │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_cvtx_roundps_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_cvtxph_ps               │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_cvtxps_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvt_roundi32_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the signed 32-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_cvt_roundi64_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the signed 64-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_cvt_roundsd_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower double-precision (64-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper element of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvt_roundsh_i32                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsh_i64                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst". 	[round_note
_mm_cvt_roundsh_u32                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst". [sae_note
_mm_cvt_roundsh_u64                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst". [round_note
_mm_cvt_roundss_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower single-precision (32-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvt_roundu32_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the unsigned 32-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cvt_roundu64_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the unsigned 64-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cvti32_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the signed 32-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cvti64_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the signed 64-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cvtsd_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower double-precision (64-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper element of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_cvtsh_h                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ yes         │ Copy the lower half-precision (16-bit) floating-point element of "a" to "dst
_mm_cvtsh_i32                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_cvtsh_i64                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtsh_u32                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 32-bit integer, and store the result in "dst
_mm_cvtsh_u64                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 64-bit integer, and store the result in "dst
_mm_cvtsi128_si16                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Copy the lower 16-bit integer in "a" to "dst
_mm_cvtsi16_si128                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Copy 16-bit integer "a" to the lower elements of "dst", and zero the upper elements of "dst
_mm_cvtss_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower single-precision (32-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvtt_roundsh_i32                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst". [sae_note
_mm_cvtt_roundsh_i64                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst". [sae_note
_mm_cvtt_roundsh_u32                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_cvtt_roundsh_u64                │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst". [sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_cvttsh_i32                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst
_mm_cvttsh_i64                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_cvttsh_u32                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 32-bit integer with truncation, and store the result in "dst
_mm_cvttsh_u64                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower half-precision (16-bit) floating-point element in "a" to an unsigned 64-bit integer with truncation, and store the result in "dst
_mm_cvtu32_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the unsigned 32-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvtu64_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the unsigned 64-bit integer "b" to a half-precision (16-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cvt_roundsd_sh             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower double-precision (64-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper element of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                 
_mm_mask_cvt_roundss_sh             │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower single-precision (32-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 	[round_note]                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtsd_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower double-precision (64-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper element of "dst".                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtss_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Convert                   │ AVX512_fp16       │ no          │ Convert the lower single-precision (32-bit) floating-point element in "b" to a half-precision (16-bit) floating-point elements, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                              
_mm512_mask_rcp_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_rsqrt_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask_sqrt_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_sqrt_round_ph           │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_rcp_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_rsqrt_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_sqrt_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst
_mm512_sqrt_round_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". 	[round_note
_mm_mask_rcp_sh                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                             
_mm_mask_rsqrt_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                 
_mm_mask_sqrt_round_sh              │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_sqrt_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                  
_mm_rcp_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of the lower half-precision (16-bit) floating-point element in "a", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                               
_mm_rsqrt_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                   
_mm_sqrt_round_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_sqrt_sh                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_load_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Load                      │ AVX512_fp16       │ no          │ Load 512-bits (composed of 32 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_loadu_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Load                      │ AVX512_fp16       │ no          │ Load 512-bits (composed of 32 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_load_sh                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Load                      │ AVX512_fp16       │ no          │ Load a half-precision (16-bit) floating-point element from memory into the lower element of "dst", and zero the upper elements
_mm_mask_load_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Load                      │ AVX512_fp16       │ no          │ Load a half-precision (16-bit) floating-point element from memory into the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and set the upper elements of "dst" to zero.                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_fpclass_ph_mask              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 				[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm512_getexp_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_getexp_round_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element. [sae_note]                                                                                                                                                                                                                                                                                                                                                                          
_mm512_getmant_ph                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 			[getmant_note]                                                                                                                                                                                                                                                                                                                                                    
_mm512_getmant_round_ph             │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 			[getmant_note][sae_note]                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_blend_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Blend packed half-precision (16-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm512_mask_fpclass_ph_mask         │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 			[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_getexp_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                     
_mm512_mask_getexp_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element. [sae_note]                                                                                                                                                                                                                                                                          
_mm512_mask_getmant_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 			[getmant_note]                                                                                                                                                                                                                                                    
_mm512_mask_getmant_round_ph        │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 			[getmant_note][sae_note]                                                                                                                                                                                                                                          
_mm512_mask_reduce_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_reduce_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_roundscale_ph           │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_roundscale_round_ph     │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_scalef_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm512_mask_scalef_round_ph         │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). 	[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_permutex2var_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Shuffle half-precision (16-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_permutexvar_ph               │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Shuffle half-precision (16-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm512_reduce_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_reduce_round_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_roundscale_ph                │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_roundscale_round_ph          │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_scalef_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm512_scalef_round_ph              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst". 	[round_note
_mm_fpclass_sh_mask                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Test the lower half-precision (16-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k". 			[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_getexp_round_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of the lower half-precision (16-bit) floating-point element in "b" to a half-precision (16-bit) floating-point number representing the integer exponent, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "floor(log2(x))" for the lower element. [sae_note]                                                                                                                                                                                                                                                                         
_mm_getexp_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of the lower half-precision (16-bit) floating-point element in "b" to a half-precision (16-bit) floating-point number representing the integer exponent, store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "floor(log2(x))" for the lower element.                                                                                                                                                                                                                                                                                    
_mm_getmant_round_sh                │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                                                                                                            
_mm_getmant_sh                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                      
_mm_mask_fpclass_sh_mask            │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Test the lower half-precision (16-bit) floating-point element in "a" for special categories specified by "imm8", and store the result in mask vector "k" using zeromask "k1" (the element is zeroed out when mask bit 0 is not set). 		[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_getexp_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of the lower half-precision (16-bit) floating-point element in "b" to a half-precision (16-bit) floating-point number representing the integer exponent, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "floor(log2(x))" for the lower element. [sae_note]                                                                                                                                                                                       
_mm_mask_getexp_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of the lower half-precision (16-bit) floating-point element in "b" to a half-precision (16-bit) floating-point number representing the integer exponent, store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "floor(log2(x))" for the lower element.                                                                                                                                                                                                  
_mm_mask_getmant_round_sh           │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note][sae_note]                                                                                                                                                          
_mm_mask_getmant_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of the lower half-precision (16-bit) floating-point element in "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note]                                                                                                                                                                    
_mm_mask_roundscale_round_sh        │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round the lower half-precision (16-bit) floating-point element in "b" to the number of fraction bits specified by "imm8", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                         
_mm_mask_roundscale_sh              │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round the lower half-precision (16-bit) floating-point element in "b" to the number of fraction bits specified by "imm8", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                   
_mm_mask_scalef_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                              
_mm_mask_scalef_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                             
_mm_roundscale_round_sh             │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round the lower half-precision (16-bit) floating-point element in "b" to the number of fraction bits specified by "imm8", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                                           
_mm_roundscale_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Round the lower half-precision (16-bit) floating-point element in "b" to the number of fraction bits specified by "imm8", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_scalef_round_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". 		[round_note]                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_scalef_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed single-precision (32-bit) floating-point elements in "a" using values from "b", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_move_sh                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Move                      │ AVX512_fp16       │ no          │ Move the lower half-precision (16-bit) floating-point element from "b" to the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_move_sh                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Move                      │ AVX512_fp16       │ no          │ Move the lower half-precision (16-bit) floating-point element from "b" to the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_set1_pch                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) complex floating-point value "a" to all elements of "dst
_mm256_set1_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) floating-point value "a" to all elements of "dst
_mm256_set_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values
_mm256_setr_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm512_set1_pch                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) complex floating-point value "a" to all elements of "dst
_mm512_set1_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) floating-point value "a" to all elements of "dst
_mm512_set_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values
_mm512_setr_ph                      │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm512_setzero_ph                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ no          │ Return vector of type __m512h with all elements set to zero
_mm_set1_pch                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) complex floating-point value "a" to all elements of "dst
_mm_set1_ph                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Broadcast half-precision (16-bit) floating-point value "a" to all elements of "dst
_mm_set_ph                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values
_mm_set_sh                          │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Copy half-precision (16-bit) floating-point element "a" to the lower element of "dst", and zero the upper 7 elements
_mm_setr_ph                         │ 0    │ AVX-512 │ AVX512_FP16                    │ Set                       │ AVX512_fp16       │ yes         │ Set packed half-precision (16-bit) floating-point elements in "dst" with the supplied values in reverse order
_mm512_mask_max_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_max_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note][max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_mask_min_ph                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_min_round_ph            │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [sae_note][min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_max_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm512_max_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [sae_note][max_float_note
_mm512_min_ph                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm512_min_round_ph                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [sae_note] [min_float_note
_mm_mask_reduce_round_sh            │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Extract the reduced argument of the lower half-precision (16-bit) floating-point element in "b" by the number of bits specified by "imm8", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                        
_mm_mask_reduce_sh                  │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Extract the reduced argument of the lower half-precision (16-bit) floating-point element in "b" by the number of bits specified by "imm8", store the result in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                  
_mm_reduce_round_sh                 │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Extract the reduced argument of the lower half-precision (16-bit) floating-point element in "b" by the number of bits specified by "imm8", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note][sae_note]                                                                                                                                                                                                                                                                                                                                                                          
_mm_reduce_sh                       │ 0    │ AVX-512 │ AVX512_FP16                    │ Special Math Functions    │ AVX512_fp16       │ no          │ Extract the reduced argument of the lower half-precision (16-bit) floating-point element in "b" by the number of bits specified by "imm8", store the result in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_store_ph                     │ 0    │ AVX-512 │ AVX512_FP16                    │ Store                     │ AVX512_fp16       │ no          │ Store 512-bits (composed of 32 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" must be aligned on a 64-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_storeu_ph                    │ 0    │ AVX-512 │ AVX512_FP16                    │ Store                     │ AVX512_fp16       │ no          │ Store 512-bits (composed of 32 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_store_sh                   │ 0    │ AVX-512 │ AVX512_FP16                    │ Store                     │ AVX512_fp16       │ no          │ Store the lower half-precision (16-bit) floating-point element from "a" into memory using writemask "k
_mm_store_sh                        │ 0    │ AVX-512 │ AVX512_FP16                    │ Store                     │ AVX512_fp16       │ no          │ Store the lower half-precision (16-bit) floating-point element from "a" into memory
_mm256_abs_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Finds the absolute value of each packed half-precision (16-bit) floating-point element in "v2", storing the results in "dst
_mm256_add_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_cmul_pch                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm256_conj_pch                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                 
_mm256_div_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_fcmadd_pch                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                
_mm256_fcmul_pch                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm256_fmadd_pch                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                         
_mm256_fmadd_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_fmaddsub_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_fmsub_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_fmsubadd_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_fmul_pch                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_fnmadd_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_fnmsub_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask3_fcmadd_pch             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm256_mask3_fmadd_pch              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                           
_mm256_mask3_fmadd_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask3_fmaddsub_ph            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask3_fmsub_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask3_fmsubadd_ph            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask3_fnmadd_ph              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask3_fnmsub_ph              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_add_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_cmul_pch                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm256_mask_conj_pch                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                   
_mm256_mask_div_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_fcmadd_pch              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm256_mask_fcmul_pch               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm256_mask_fmadd_pch               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                           
_mm256_mask_fmadd_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_fmaddsub_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_fmsub_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_mask_fmsubadd_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_fmul_pch                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm256_mask_fnmadd_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_fnmsub_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_mask_mul_pch                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm256_mask_mul_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_mask_sub_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mul_pch                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mul_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm256_reduce_add_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by addition. Returns the sum of all elements in "a
_mm256_reduce_max_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by maximum. Returns the maximum of all elements in "a
_mm256_reduce_min_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by minimum. Returns the minimum of all elements in "a
_mm256_reduce_mul_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (316-bit) floating-point elements in "a" by multiplication. Returns the product of all elements in "a
_mm256_sub_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_abs_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Finds the absolute value of each packed half-precision (16-bit) floating-point element in "v2", storing the results in "dst
_mm_add_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_cmul_pch                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm_conj_pch                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                 
_mm_div_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst
_mm_fcmadd_pch                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                
_mm_fcmul_pch                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                                                                        
_mm_fmadd_pch                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                         
_mm_fmadd_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_fmaddsub_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_fmsub_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_fmsubadd_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_fmul_pch                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_fnmadd_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_fnmsub_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask3_fcmadd_pch                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm_mask3_fmadd_pch                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                           
_mm_mask3_fmadd_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask3_fmaddsub_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask3_fmsub_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask3_fmsubadd_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask3_fnmadd_ph                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask3_fnmsub_ph                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "c" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_add_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Add packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_cmul_pch                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm_mask_conj_pch                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Compute the complex conjugates of complex numbers in "a", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                                                                   
_mm_mask_div_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Divide packed half-precision (16-bit) floating-point elements in "a" by packed elements in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_fcmadd_pch                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                  
_mm_mask_fcmul_pch                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" by the complex conjugates of packed complex numbers in "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]", or the complex conjugate "conjugate = vec.fp16[0] - i * vec.fp16[1]".                                                                                                                                                                                        
_mm_mask_fmadd_pch                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", accumulate to the corresponding complex numbers in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                           
_mm_mask_fmadd_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_fmaddsub_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_fmsub_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                  
_mm_mask_fmsubadd_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" to/from the intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_fmul_pch                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm_mask_fnmadd_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", add the negated intermediate result to packed elements in "c", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_fnmsub_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", subtract packed elements in "c" from the negated intermediate result, and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mask_mul_pch                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                 
_mm_mask_mul_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_mask_sub_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mul_pch                         │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed complex numbers in "a" and "b", and store the results in "dst". Each complex number is composed of two adjacent half-precision (16-bit) floating-point elements, which defines the complex number "complex = vec.fp16[0] + i * vec.fp16[1]".                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mul_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Multiply packed half-precision (16-bit) floating-point elements in "a" and "b", and store the results in "dst
_mm_reduce_add_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by addition. Returns the sum of all elements in "a
_mm_reduce_max_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by maximum. Returns the maximum of all elements in "a
_mm_reduce_min_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by minimum. Returns the minimum of all elements in "a".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_reduce_mul_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ yes         │ Reduce the packed half-precision (16-bit) floating-point elements in "a" by multiplication. Returns the product of all elements in "a
_mm_sub_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Arithmetic                │ AVX512_fp16       │ no          │ Subtract packed half-precision (16-bit) floating-point elements in "b" from packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_cmp_ph_mask                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_cmp_ph_mask             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_cmp_ph_mask                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_cmp_ph_mask                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Compare                   │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b" based on the comparison operand specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_cvtepi16_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm256_cvtepi32_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm256_cvtepi64_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cvtepu16_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm256_cvtepu32_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm256_cvtepu64_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_cvtpd_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_cvtph_epi16                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst
_mm256_cvtph_epi32                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm256_cvtph_epi64                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst
_mm256_cvtph_epu16                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst
_mm256_cvtph_epu32                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_cvtph_epu64                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm256_cvtph_pd                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cvttph_epi16                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm256_cvttph_epi32                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_cvttph_epi64                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm256_cvttph_epu16                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst
_mm256_cvttph_epu32                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm256_cvttph_epu64                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_cvtxph_ps                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cvtxps_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtepi16_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtepi32_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_cvtepi64_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtepu16_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepu32_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtepu64_ph             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mask_cvtpd_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_cvtph_epi16             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtph_epi32             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtph_epi64             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvtph_epu16             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtph_epu32             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtph_epu64             │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtph_pd                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvttph_epi16            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvttph_epi32            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvttph_epi64            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm256_mask_cvttph_epu16            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvttph_epu32            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvttph_epu64            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_cvtxph_ps               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_cvtxps_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtepi16_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm_cvtepi32_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtepi64_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtepu16_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst
_mm_cvtepu32_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cvtepu64_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cvtpd_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvtph_epi16                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_cvtph_epi32                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm_cvtph_epi64                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_cvtph_epu16                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst
_mm_cvtph_epu32                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst
_mm_cvtph_epu64                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst
_mm_cvtph_pd                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvttph_epi16                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst
_mm_cvttph_epi32                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst
_mm_cvttph_epi64                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst
_mm_cvttph_epu16                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst
_mm_cvttph_epu32                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst
_mm_cvttph_epu64                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst
_mm_cvtxph_ps                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtxps_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst".  The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_cvtepi16_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_cvtepi32_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtepi64_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed signed 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtepu16_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 16-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtepu32_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 32-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cvtepu64_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed unsigned 64-bit integers in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mask_cvtpd_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The upper 96 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_cvtph_epi16                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtph_epi32                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtph_epi64                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvtph_epu16                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtph_epu32                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtph_epu64                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtph_pd                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed double-precision (64-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvttph_epi16               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvttph_epi32               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvttph_epi64               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm_mask_cvttph_epu16               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 16-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvttph_epu32               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 32-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvttph_epu64               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed unsigned 64-bit integers with truncation, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_cvtxph_ps                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_cvtxps_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Convert                   │ AVX512_fp16       │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).  The upper 64 bits of "dst" are zeroed out.                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_rcp_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                               
_mm256_mask_rsqrt_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask_sqrt_ph                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_rcp_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_rsqrt_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_sqrt_ph                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst
_mm_mask_rcp_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                               
_mm_mask_rsqrt_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_sqrt_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_rcp_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_rsqrt_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the approximate reciprocal square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". The maximum relative error for this approximation is less than 1.5*2^-12.                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_sqrt_ph                         │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Elementary Math Functions │ AVX512_fp16       │ no          │ Compute the square root of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst
_mm256_load_ph                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Load                      │ AVX512_fp16       │ no          │ Load 256-bits (composed of 16 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_loadu_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Load                      │ AVX512_fp16       │ no          │ Load 256-bits (composed of 16 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_load_ph                         │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Load                      │ AVX512_fp16       │ no          │ Load 128-bits (composed of 8 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_loadu_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Load                      │ AVX512_fp16       │ no          │ Load 128-bits (composed of 8 packed half-precision (16-bit) floating-point elements) from memory into "dst".  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_fpclass_ph_mask              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 			[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_getexp_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_getmant_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 		[getmant_note]                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_blend_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Blend packed half-precision (16-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_fpclass_ph_mask         │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 		[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_getexp_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                     
_mm256_mask_getmant_ph              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 		[getmant_note]                                                                                                                                                                                                                                                     
_mm256_mask_reduce_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_roundscale_ph           │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_scalef_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_permutex2var_ph              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Shuffle half-precision (16-bit) floating-point elements in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_permutexvar_ph               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Shuffle half-precision (16-bit) floating-point elements in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_reduce_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_roundscale_ph                │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_scalef_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm_fpclass_ph_mask                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k". 		[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_getexp_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst". This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                                                                                                                     
_mm_getmant_ph                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst". This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_blend_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Blend packed half-precision (16-bit) floating-point elements from "a" and "b" using control mask "k", and store the results in "dst
_mm_mask_fpclass_ph_mask            │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Test packed half-precision (16-bit) floating-point elements in "a" for special categories specified by "imm8", and store the results in mask vector "k" using zeromask "k1" (elements are zeroed out when the corresponding mask bit is not set). 		[fpclass_note]                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_getexp_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Convert the exponent of each packed half-precision (16-bit) floating-point element in "a" to a half-precision (16-bit) floating-point number representing the integer exponent, and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "floor(log2(x))" for each element.                                                                                                                                                                                                                                                                                     
_mm_mask_getmant_ph                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Normalize the mantissas of packed half-precision (16-bit) floating-point elements in "a", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). This intrinsic essentially calculates "±(2^k)*|x.significand|", where "k" depends on the interval range defined by "norm" and the sign depends on "sign" and the source sign. 	[getmant_note]                                                                                                                                                                                                                                                      
_mm_mask_reduce_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_roundscale_ph              │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_scalef_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_permutex2var_ph                 │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ yes         │ Shuffle half-precision (16-bit) floating-point elements in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst
_mm_permutexvar_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Shuffle half-precision (16-bit) floating-point elements in "a" using the corresponding index in "idx", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_reduce_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Extract the reduced argument of packed half-precision (16-bit) floating-point elements in "a" by the number of bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_roundscale_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Round packed half-precision (16-bit) floating-point elements in "a" to the number of fraction bits specified by "imm8", and store the results in "dst". [round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_scalef_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Miscellaneous             │ AVX512_fp16       │ no          │ Scale the packed half-precision (16-bit) floating-point elements in "a" using values from "b", and store the results in "dst
_mm256_setzero_ph                   │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Set                       │ AVX512_fp16       │ no          │ Return vector of type __m256h with all elements set to zero
_mm_setzero_ph                      │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Set                       │ AVX512_fp16       │ no          │ Return vector of type __m128h with all elements set to zero
_mm256_mask_max_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_min_ph                  │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_max_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm256_min_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm_mask_max_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_max_round_sh               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the maximum value in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [sae_note][max_float_note]                                                                                                                                                                                                                                                                                                                                          
_mm_mask_max_sh                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the maximum value in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_min_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set). [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_min_round_sh               │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the minimum value in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst". [sae_note][min_float_note]                                                                                                                                                                                                                                                                                                                                          
_mm_mask_min_sh                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the minimum value in the lower element of "dst" using writemask "k" (the element is copied from "src" when mask bit 0 is not set), and copy the upper 7 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                     
_mm_max_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed maximum values in "dst". [max_float_note
_mm_max_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the maximum value in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [sae_note][max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_max_sh                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the maximum value in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [max_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_min_ph                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare packed half-precision (16-bit) floating-point elements in "a" and "b", and store packed minimum values in "dst". [min_float_note
_mm_min_round_sh                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the minimum value in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [sae_note][min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_min_sh                          │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Special Math Functions    │ AVX512_fp16       │ no          │ Compare the lower half-precision (16-bit) floating-point elements in "a" and "b", store the minimum value in the lower element of "dst", and copy the upper 7 packed elements from "a" to the upper elements of "dst". [min_float_note]                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_store_ph                     │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Store                     │ AVX512_fp16       │ no          │ Store 256-bits (composed of 16 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_storeu_ph                    │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Store                     │ AVX512_fp16       │ no          │ Store 256-bits (composed of 16 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_store_ph                        │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Store                     │ AVX512_fp16       │ no          │ Store 128-bits (composed of 8 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_storeu_ph                       │ 0    │ AVX-512 │ AVX512_FP16 + AVX512VL         │ Store                     │ AVX512_fp16       │ no          │ Store 128-bits (composed of 8 packed half-precision (16-bit) floating-point elements) from "a" into memory.  	"mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
_mm512_mask_multishift_epi64_epi8   │ 0    │ AVX-512 │ AVX512_VBMI                    │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                   
_mm512_multishift_epi64_epi8        │ 0    │ AVX-512 │ AVX512_VBMI                    │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm512_mask2_permutex2var_epi8      │ 0    │ AVX-512 │ AVX512_VBMI                    │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_permutex2var_epi8       │ 0    │ AVX-512 │ AVX512_VBMI                    │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_permutexvar_epi8        │ 0    │ AVX-512 │ AVX512_VBMI                    │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_permutex2var_epi8            │ 0    │ AVX-512 │ AVX512_VBMI                    │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm512_permutexvar_epi8             │ 0    │ AVX-512 │ AVX512_VBMI                    │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst
_mm256_mask_multishift_epi64_epi8   │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                   
_mm256_multishift_epi64_epi8        │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_mask_multishift_epi64_epi8      │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                   
_mm_multishift_epi64_epi8           │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Bit Manipulation          │ AVX512_extended   │ no          │ For each 64-bit element in "b", select 8 unaligned bytes using a byte-granular shift control within the corresponding 64-bit element of "a", and store the 8 assembled bytes to the corresponding 64-bit element of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_mask2_permutex2var_epi8      │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_permutex2var_epi8       │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_permutexvar_epi8        │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" across lanes using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_permutex2var_epi8            │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" across lanes using the corresponding selector and index in "idx", and store the results in "dst
_mm_mask2_permutex2var_epi8         │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_permutex2var_epi8          │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_permutexvar_epi8           │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" using the corresponding index in "idx", and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_permutex2var_epi8               │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" and "b" using the corresponding selector and index in "idx", and store the results in "dst
_mm_permutexvar_epi8                │ 0    │ AVX-512 │ AVX512_VBMI + AVX512VL         │ Swizzle                   │ AVX512_extended   │ no          │ Shuffle 8-bit integers in "a" using the corresponding index in "idx", and store the results in "dst
_mm512_mask_shldi_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_shldi_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_mask_shldi_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_shldv_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_shldv_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_shldv_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_shrdi_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_shrdi_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_mask_shrdi_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "src"" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_shrdv_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_shrdv_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_shrdv_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                          
_mm512_shldi_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_shldi_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm512_shldi_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_shldv_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_shldv_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm512_shldv_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_shrdi_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_shrdi_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm512_shrdi_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_shrdv_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_shrdv_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm512_shrdv_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm512_mask_compress_epi16          │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm512_mask_compress_epi8           │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm512_mask_compressstoreu_epi16    │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm512_mask_compressstoreu_epi8     │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm512_mask_expand_epi16            │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm512_mask_expand_epi8             │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm512_mask_expandloadu_epi16       │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm512_mask_expandloadu_epi8        │ 0    │ AVX-512 │ AVX512_VBMI2                   │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_mask_shldi_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_shldi_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mask_shldi_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_shldv_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_shldv_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_shldv_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_shrdi_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_shrdi_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_mask_shrdi_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "src"" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_shrdv_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_shrdv_epi32             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_shrdv_epi64             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                          
_mm256_shldi_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_shldi_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_shldi_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_shldv_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_shldv_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_shldv_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_shrdi_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_shrdi_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm256_shrdi_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_shrdv_epi16                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_shrdv_epi32                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_shrdv_epi64                  │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mask_shldi_epi16                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_shldi_epi32                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_mask_shldi_epi64                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_shldv_epi16                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_shldv_epi32                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_shldv_epi64                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_shrdi_epi16                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_shrdi_epi32                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_mask_shrdi_epi64                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "src"" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_shrdv_epi16                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_shrdv_epi32                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_shrdv_epi64                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst" using writemask "k" (elements are copied from "a" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                          
_mm_shldi_epi16                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by "imm8" bits, and store the upper 16-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_shldi_epi32                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by "imm8" bits, and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_shldi_epi64                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by "imm8" bits, and store the upper 64-bits in "dst").                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_shldv_epi16                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "a" and "b" producing an intermediate 32-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_shldv_epi32                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "a" and "b" producing an intermediate 64-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_shldv_epi64                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "a" and "b" producing an intermediate 128-bit result. Shift the result left by the amount specified in the corresponding element of "c", and store the upper 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_shrdi_epi16                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by "imm8" bits, and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_shrdi_epi32                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by "imm8" bits, and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_shrdi_epi64                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by "imm8" bits, and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_shrdv_epi16                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 16-bit integers in "b" and "a" producing an intermediate 32-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 16-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_shrdv_epi32                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 32-bit integers in "b" and "a" producing an intermediate 64-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 32-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_shrdv_epi64                     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Shift                     │ AVX512_extended   │ no          │ Concatenate packed 64-bit integers in "b" and "a" producing an intermediate 128-bit result. Shift the result right by the amount specified in the corresponding element of "c", and store the lower 64-bits in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_mask_compress_epi16          │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_mask_compress_epi8           │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_mask_compressstoreu_epi16    │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm256_mask_compressstoreu_epi8     │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm256_mask_expand_epi16            │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_mask_expand_epi8             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_mask_expandloadu_epi16       │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_mask_expandloadu_epi8        │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_mask_compress_epi16             │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm_mask_compress_epi8              │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to "dst", and pass through the remaining elements from "src".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_mask_compressstoreu_epi16       │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 16-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm_mask_compressstoreu_epi8        │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Contiguously store the active 8-bit integers in "a" (those with their respective bit set in writemask "k") to unaligned memory at "base_addr
_mm_mask_expand_epi16               │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_mask_expand_epi8                │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from "a" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_mask_expandloadu_epi16          │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 16-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_mask_expandloadu_epi8           │ 0    │ AVX-512 │ AVX512_VBMI2 + AVX512VL        │ Swizzle                   │ AVX512_extended   │ no          │ Load contiguous active 8-bit integers from unaligned memory at "mem_addr" (those with their respective bit set in mask "k"), and store the results in "dst" using writemask "k" (elements are copied from "src" when the corresponding mask bit is not set).                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm512_2intersect_epi32             │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512F  │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 32-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm512_2intersect_epi64             │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512F  │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 64-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm256_2intersect_epi32             │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512VL │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 32-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm256_2intersect_epi64             │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512VL │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 64-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm_2intersect_epi32                │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512VL │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 32-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm_2intersect_epi64                │ 0    │ AVX-512 │ AVX512_VP2INTERSECT + AVX512VL │ Mask                      │ AVX512_intersect  │ no          │ Compute intersection of packed 64-bit integer vectors "a" and "b", and store indication of match in the corresponding bit of two mask registers specified by "k1" and "k2". A match in corresponding elements of "a" and "b" is indicated by a set bit in the corresponding bit of the mask registers.                                                                                                                                                                                                                                                                                                                                                                       
_mm256_addsub_pd                    │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Alternatively add and subtract packed double-precision (64-bit) floating-point elements in "a" to/from packed elements in "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_addsub_ps                    │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Alternatively add and subtract packed single-precision (32-bit) floating-point elements in "a" to/from packed elements in "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_dp_ps                        │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Conditionally multiply the packed single-precision (32-bit) floating-point elements in "a" and "b" using the high 4 bits in "imm8", sum the four products, and conditionally store the sum in "dst" using the low 4 bits of "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_hadd_pd                      │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of double-precision (64-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm256_hadd_ps                      │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of single-precision (32-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm256_hsub_pd                      │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of double-precision (64-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm256_hsub_ps                      │ 0    │ AVX_ALL │ AVX                            │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of single-precision (32-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm256_cvtpd_epi32                  │ 0    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst
_mm256_cvtps_epi32                  │ 0    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cvtsd_f64                    │ 0    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Copy the lower double-precision (64-bit) floating-point element of "a" to "dst
_mm256_cvtsi256_si32                │ 0    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Copy the lower 32-bit integer in "a" to "dst
_mm256_cvtss_f32                    │ 0    │ AVX_ALL │ AVX                            │ Convert                   │                   │ no          │ Copy the lower single-precision (32-bit) floating-point element of "a" to "dst
_mm256_lddqu_si256                  │ 0    │ AVX_ALL │ AVX                            │ Load                      │                   │ no          │ Load 256-bits of integer data from unaligned memory into "dst". This intrinsic may perform better than "_mm256_loadu_si256" when the data crosses a cache line boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_loadu2_m128                  │ 0    │ AVX_ALL │ AVX                            │ Load                      │                   │ yes         │ Load two 128-bit values (composed of 4 packed single-precision (32-bit) floating-point elements) from memory, and combine them into a 256-bit value in "dst". 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_loadu2_m128d                 │ 0    │ AVX_ALL │ AVX                            │ Load                      │                   │ yes         │ Load two 128-bit values (composed of 2 packed double-precision (64-bit) floating-point elements) from memory, and combine them into a 256-bit value in "dst". 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_loadu2_m128i                 │ 0    │ AVX_ALL │ AVX                            │ Load                      │                   │ yes         │ Load two 128-bit values (composed of integer data) from memory, and combine them into a 256-bit value in "dst". 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_testc_pd                     │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                        
_mm256_testc_ps                     │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                        
_mm256_testc_si256                  │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                                                                                                                                                                                                                                             
_mm256_testnzc_pd                   │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                       
_mm256_testnzc_ps                   │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                       
_mm256_testnzc_si256                │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                                                                                                                                                                                                                                            
_mm256_testz_pd                     │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                        
_mm256_testz_ps                     │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 256-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                        
_mm256_testz_si256                  │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 256 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                                                                                                                                                                                                                                             
_mm_testc_pd                        │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                        
_mm_testc_ps                        │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                        
_mm_testnzc_pd                      │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                       
_mm_testnzc_ps                      │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                       
_mm_testz_pd                        │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing double-precision (64-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 64-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                        
_mm_testz_ps                        │ 0    │ AVX_ALL │ AVX                            │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing single-precision (32-bit) floating-point elements) in "a" and "b", producing an intermediate 128-bit value, and set "ZF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", producing an intermediate value, and set "CF" to 1 if the sign bit of each 32-bit element in the intermediate value is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                        
_mm256_movedup_pd                   │ 0    │ AVX_ALL │ AVX                            │ Move                      │                   │ no          │ Duplicate even-indexed double-precision (64-bit) floating-point elements from "a", and store the results in "dst
_mm256_movehdup_ps                  │ 0    │ AVX_ALL │ AVX                            │ Move                      │                   │ no          │ Duplicate odd-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm256_moveldup_ps                  │ 0    │ AVX_ALL │ AVX                            │ Move                      │                   │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm256_set_epi16                    │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 16-bit integers in "dst" with the supplied values
_mm256_set_epi64x                   │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 64-bit integers in "dst" with the supplied values
_mm256_set_epi8                     │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed 8-bit integers in "dst" with the supplied values
_mm256_set_m128                     │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256 vector "dst" with the supplied values
_mm256_set_m128d                    │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256d vector "dst" with the supplied values
_mm256_set_m128i                    │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256i vector "dst" with the supplied values.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
_mm256_set_pd                       │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_set_ps                       │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values
_mm256_setr_m128                    │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256 vector "dst" with the supplied values.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_setr_m128d                   │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256d vector "dst" with the supplied values
_mm256_setr_m128i                   │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Set packed __m256i vector "dst" with the supplied values
_mm256_setzero_pd                   │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Return vector of type __m256d with all elements set to zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_setzero_ps                   │ 0    │ AVX_ALL │ AVX                            │ Set                       │                   │ no          │ Return vector of type __m256 with all elements set to zero
_mm256_ceil_pd                      │ 0    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" up to an integer value, and store the results as packed double-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_ceil_ps                      │ 0    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" up to an integer value, and store the results as packed single-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_floor_pd                     │ 0    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" down to an integer value, and store the results as packed double-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_floor_ps                     │ 0    │ AVX_ALL │ AVX                            │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" down to an integer value, and store the results as packed single-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_storeu2_m128                 │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ yes         │ Store the high and low 128-bit halves (each composed of 4 packed single-precision (32-bit) floating-point elements) from "a" into memory two different 128-bit locations. 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_storeu2_m128d                │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ yes         │ Store the high and low 128-bit halves (each composed of 2 packed double-precision (64-bit) floating-point elements) from "a" into memory two different 128-bit locations. 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_storeu2_m128i                │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ yes         │ Store the high and low 128-bit halves (each composed of integer data) from "a" into memory two different 128-bit locations. 	"hiaddr" and "loaddr" do not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_stream_pd                    │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 4 packed double-precision (64-bit) floating-point elements) from "a" into memory using a non-temporal memory hint. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_stream_ps                    │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits (composed of 8 packed single-precision (32-bit) floating-point elements) from "a" into memory using a non-temporal memory hint. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_stream_si256                 │ 0    │ AVX_ALL │ AVX                            │ Store                     │                   │ no          │ Store 256-bits of integer data from "a" into memory using a non-temporal memory hint. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
_mm256_broadcast_pd                 │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Broadcast 128 bits from memory (composed of 2 packed double-precision (64-bit) floating-point elements) to all elements of "dst
_mm256_broadcast_ps                 │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Broadcast 128 bits from memory (composed of 4 packed single-precision (32-bit) floating-point elements) to all elements of "dst
_mm256_extract_epi32                │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Extract a 32-bit integer from "a", selected with "index", and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_extract_epi64                │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Extract a 64-bit integer from "a", selected with "index", and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_insert_epi16                 │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Copy "a" to "dst", and insert the 16-bit integer "i" into "dst" at the location specified by "index
_mm256_insert_epi32                 │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Copy "a" to "dst", and insert the 32-bit integer "i" into "dst" at the location specified by "index".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_insert_epi64                 │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Copy "a" to "dst", and insert the 64-bit integer "i" into "dst" at the location specified by "index
_mm256_insert_epi8                  │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ yes         │ Copy "a" to "dst", and insert the 8-bit integer "i" into "dst" at the location specified by "index
_mm256_unpackhi_ps                  │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the high half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm256_unpacklo_ps                  │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Unpack and interleave single-precision (32-bit) floating-point elements from the low half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_permute_pd                      │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst
_mm_permute_ps                      │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "imm8", and store the results in "dst
_mm_permutevar_pd                   │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle double-precision (64-bit) floating-point elements in "a" using the control in "b", and store the results in "dst
_mm_permutevar_ps                   │ 0    │ AVX_ALL │ AVX                            │ Swizzle                   │                   │ no          │ Shuffle single-precision (32-bit) floating-point elements in "a" using the control in "b", and store the results in "dst
_mm256_hadd_epi16                   │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of 16-bit integers in "a" and "b", and pack the signed 16-bit results in "dst
_mm256_hadd_epi32                   │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of 32-bit integers in "a" and "b", and pack the signed 32-bit results in "dst
_mm256_hadds_epi16                  │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of signed 16-bit integers in "a" and "b" using saturation, and pack the signed 16-bit results in "dst
_mm256_hsub_epi16                   │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of 16-bit integers in "a" and "b", and pack the signed 16-bit results in "dst
_mm256_hsub_epi32                   │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of 32-bit integers in "a" and "b", and pack the signed 32-bit results in "dst
_mm256_hsubs_epi16                  │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of signed 16-bit integers in "a" and "b" using saturation, and pack the signed 16-bit results in "dst
_mm256_madd_epi16                   │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm256_maddubs_epi16                │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Vertically multiply each unsigned 8-bit integer from "a" with the corresponding signed 8-bit integer from "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_mul_epi32                    │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst
_mm256_mul_epu32                    │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the low unsigned 32-bit integers from each packed 64-bit element in "a" and "b", and store the unsigned 64-bit results in "dst
_mm256_mulhi_epi16                  │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_mulhi_epu16                  │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm256_mulhrs_epi16                 │ 0    │ AVX_ALL │ AVX2                           │ Arithmetic                │                   │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_i32gather_epi32              │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm256_i32gather_epi64              │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm256_i32gather_pd                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm256_i32gather_ps                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm256_i64gather_epi32              │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm256_i64gather_epi64              │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm256_i64gather_pd                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm256_i64gather_ps                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm256_stream_load_si256            │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Load 256-bits of integer data from memory into "dst" using a non-temporal memory hint. 	"mem_addr" must be aligned on a 32-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_i32gather_epi32                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm_i32gather_epi64                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm_i32gather_pd                    │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 32-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm_i32gather_ps                    │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 32-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 32-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm_i64gather_epi32                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 32-bit integers from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm_i64gather_epi64                 │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather 64-bit integers from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                                                           
_mm_i64gather_pd                    │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather double-precision (64-bit) floating-point elements from memory using 64-bit indices. 64-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm_i64gather_ps                    │ 0    │ AVX_ALL │ AVX2                           │ Load                      │                   │ no          │ Gather single-precision (32-bit) floating-point elements from memory using 64-bit indices. 32-bit elements are loaded from addresses starting at "base_addr" and offset by each 64-bit element in "vindex" (each index is scaled by the factor in "scale"). Gathered elements are merged into "dst". "scale" should be 1, 2, 4 or 8.                                                                                                                                                                                                                                                                                                                                         
_mm256_mpsadbw_epu8                 │ 0    │ AVX_ALL │ AVX2                           │ Miscellaneous             │                   │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst". 	Eight SADs are performed for each 128-bit lane using one quadruplet from "b" and eight quadruplets from "a". One quadruplet is selected from "b" starting at on the offset specified in "imm8". Eight quadruplets are formed from sequential 8-bit integers selected from "a" starting at the offset specified in "imm8".                                                                                                                                                                                  
_mm256_sll_epi16                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm256_sll_epi32                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm256_sll_epi64                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm256_slli_si256                   │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift 128-bit lanes in "a" left by "imm8" bytes while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_sra_epi16                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm256_sra_epi32                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm256_srl_epi16                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm256_srl_epi32                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm256_srl_epi64                    │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm256_srli_si256                   │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift 128-bit lanes in "a" right by "imm8" bytes while shifting in zeros, and store the results in "dst
_mm_sllv_epi32                      │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_sllv_epi64                      │ 0    │ AVX_ALL │ AVX2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by the amount specified by the corresponding element in "count" while shifting in zeros, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_blend_epi16                  │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Blend packed 16-bit integers from "a" and "b" within 128-bit lanes using control mask "imm8", and store the results in "dst
_mm256_blend_epi32                  │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Blend packed 32-bit integers from "a" and "b" using control mask "imm8", and store the results in "dst
_mm256_broadcastb_epi8              │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst
_mm256_broadcastd_epi32             │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst
_mm256_broadcastq_epi64             │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst
_mm256_broadcastsd_pd               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low double-precision (64-bit) floating-point element from "a" to all elements of "dst
_mm256_broadcastsi128_si256         │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast 128 bits of integer data from "a" to all 128-bit lanes in "dst
_mm256_broadcastss_ps               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst
_mm256_broadcastw_epi16             │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst
_mm256_extract_epi16                │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ yes         │ Extract a 16-bit integer from "a", selected with "index", and store the result in "dst
_mm256_extract_epi8                 │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ yes         │ Extract an 8-bit integer from "a", selected with "index", and store the result in "dst
_mm256_extracti128_si256            │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Extract 128 bits (composed of integer data) from "a", selected with "imm8", and store the result in "dst
_mm256_inserti128_si256             │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Copy "a" to "dst", then insert 128 bits (composed of integer data) from "b" into "dst" at the location specified by "imm
_mm256_unpackhi_epi32               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 32-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_unpackhi_epi64               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 64-bit integers from the high half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm256_unpacklo_epi32               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 32-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_unpacklo_epi64               │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Unpack and interleave 64-bit integers from the low half of each 128-bit lane in "a" and "b", and store the results in "dst
_mm_blend_epi32                     │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Blend packed 32-bit integers from "a" and "b" using control mask "imm8", and store the results in "dst
_mm_broadcastb_epi8                 │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 8-bit integer from "a" to all elements of "dst
_mm_broadcastd_epi32                │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 32-bit integer from "a" to all elements of "dst
_mm_broadcastq_epi64                │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 64-bit integer from "a" to all elements of "dst
_mm_broadcastsd_pd                  │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low double-precision (64-bit) floating-point element from "a" to all elements of "dst
_mm_broadcastsi128_si256            │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast 128 bits of integer data from "a" to all 128-bit lanes in "dst
_mm_broadcastss_ps                  │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low single-precision (32-bit) floating-point element from "a" to all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_broadcastw_epi16                │ 0    │ AVX_ALL │ AVX2                           │ Swizzle                   │                   │ no          │ Broadcast the low packed 16-bit integer from "a" to all elements of "dst
_mm256_madd52hi_avx_epu64           │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the high 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_madd52hi_epu64               │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the high 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_madd52lo_avx_epu64           │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the low 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_madd52lo_epu64               │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the low 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                          
_mm_madd52hi_avx_epu64              │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the high 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                         
_mm_madd52hi_epu64                  │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the high 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                         
_mm_madd52lo_avx_epu64              │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the low 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                          
_mm_madd52lo_epu64                  │ 0    │ AVX_ALL │ AVX_IFMA                       │ Arithmetic                │                   │ no          │ Multiply packed unsigned 52-bit integers in each 64-bit element of "__Y" and "__Z" to form a 104-bit intermediate result. Add the low 52-bit unsigned integer from the intermediate result with the corresponding unsigned 64-bit integer in "__X", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_bcstnebf16_ps                │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert scalar BF16 (16-bit) floating-point element stored at memory locations starting at location "__A" to a single-precision (32-bit) floating-point, broadcast it to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_bcstnesh_ps                  │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert scalar half-precision (16-bit) floating-point element stored at memory locations starting at location "__A" to a single-precision (32-bit) floating-point, broadcast it to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_cvtneebf16_ps                │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed BF16 (16-bit) floating-point even-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_cvtneeph_ps                  │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point even-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm256_cvtneobf16_ps                │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed BF16 (16-bit) floating-point odd-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm256_cvtneoph_ps                  │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point odd-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm256_cvtneps_avx_pbh              │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "__A" to packed BF16 (16-bit) floating-point elements, and store the results in "dst
_mm_bcstnebf16_ps                   │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert scalar BF16 (16-bit) floating-point element stored at memory locations starting at location "__A" to a single-precision (32-bit) floating-point, broadcast it to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_bcstnesh_ps                     │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert scalar half-precision (16-bit) floating-point element stored at memory locations starting at location "__A" to a single-precision (32-bit) floating-point, broadcast it to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_cvtneebf16_ps                   │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed BF16 (16-bit) floating-point even-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cvtneeph_ps                     │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point even-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_cvtneobf16_ps                   │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed BF16 (16-bit) floating-point odd-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_cvtneoph_ps                     │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point odd-indexed elements stored at memory locations starting at location "__A" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvtneps_avx_pbh                 │ 0    │ AVX_ALL │ AVX_NE_CONVERT                 │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "__A" to packed BF16 (16-bit) floating-point elements, and store the results in "dst
_mm256_dpbusd_avx_epi32             │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_dpbusd_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_dpbusds_avx_epi32            │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                             
_mm256_dpbusds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                             
_mm256_dpwssd_avx_epi32             │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_dpwssd_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                            
_mm256_dpwssds_avx_epi32            │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                    
_mm256_dpwssds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                    
_mm_dpbusd_avx_epi32                │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                     
_mm_dpbusd_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                     
_mm_dpbusds_avx_epi32               │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                             
_mm_dpbusds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "a" with corresponding signed 8-bit integers in "b", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                             
_mm_dpwssd_avx_epi32                │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                            
_mm_dpwssd_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                            
_mm_dpwssds_avx_epi32               │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                    
_mm_dpwssds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI                       │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "a" with corresponding 16-bit integers in "b", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "src" using signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                    
_mm256_dpwsud_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm256_dpwsuds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                        
_mm256_dpwusd_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding signed 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm256_dpwusds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding signed 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                        
_mm256_dpwuud_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                             
_mm256_dpwuuds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                      
_mm_dpwsud_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm_dpwsuds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of signed 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                        
_mm_dpwusd_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding signed 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm_dpwusds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding signed 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                        
_mm_dpwuud_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                             
_mm_dpwuuds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT16                 │ Arithmetic                │                   │ no          │ Multiply groups of 2 adjacent pairs of unsigned 16-bit integers in "__A" with corresponding unsigned 16-bit integers in "__B", producing 2 intermediate signed 32-bit results. Sum these 2 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                      
_mm256_dpbssd_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding signed 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                   
_mm256_dpbssds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding signed 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                            
_mm256_dpbsud_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                 
_mm256_dpbsuds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                          
_mm256_dpbuud_epi32                 │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm256_dpbuuds_epi32                │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with unsigned saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                        
_mm_dpbssd_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding signed 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                   
_mm_dpbssds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding signed 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                            
_mm_dpbsud_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                 
_mm_dpbsuds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of signed 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with signed saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                          
_mm_dpbuud_epi32                    │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W", and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                               
_mm_dpbuuds_epi32                   │ 0    │ AVX_ALL │ AVX_VNNI_INT8                  │ Arithmetic                │                   │ no          │ Multiply groups of 4 adjacent pairs of unsigned 8-bit integers in "__A" with corresponding unsigned 8-bit integers in "__B", producing 4 intermediate signed 16-bit results. Sum these 4 results with the corresponding 32-bit integer in "__W" with unsigned saturation, and store the packed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                      
_mm256_cvtph_ps                     │ 0    │ AVX_ALL │ F16C                           │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm256_cvtps_ph                     │ 0    │ AVX_ALL │ F16C                           │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_cvtph_ps                        │ 0    │ AVX_ALL │ F16C                           │ Convert                   │                   │ no          │ Convert packed half-precision (16-bit) floating-point elements in "a" to packed single-precision (32-bit) floating-point elements, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtps_ph                        │ 0    │ AVX_ALL │ F16C                           │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed half-precision (16-bit) floating-point elements, and store the results in "dst". 	[round_imm_note]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm256_fmaddsub_pd                  │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_fmaddsub_ps                  │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_fmsubadd_pd                  │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm256_fmsubadd_ps                  │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmaddsub_pd                     │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmaddsub_ps                     │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively add and subtract packed elements in "c" to/from the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmsubadd_pd                     │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed double-precision (64-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_fmsubadd_ps                     │ 0    │ AVX_ALL │ FMA                            │ Arithmetic                │                   │ no          │ Multiply packed single-precision (32-bit) floating-point elements in "a" and "b", alternatively subtract and add packed elements in "c" from/to the intermediate result, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
_mm_cvt_si2ss                       │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the signed 32-bit integer "b" to a single-precision (32-bit) floating-point element, store the result in the lower element of "dst", and copy the upper 3 packed elements from "a" to the upper elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                   
_mm_cvt_ss2si                       │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvtss_si32                      │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst
_mm_cvtss_si64                      │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtt_ss2si                      │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_cvttss_si32                     │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst
_mm_cvttss_si64                     │ 0    │ SSE_ALL │ SSE                            │ Convert                   │                   │ no          │ Convert the lower single-precision (32-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_load1_ps                        │ 0    │ SSE_ALL │ SSE                            │ Load                      │                   │ yes         │ Load a single-precision (32-bit) floating-point element from memory into all elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_load_ps1                        │ 0    │ SSE_ALL │ SSE                            │ Load                      │                   │ yes         │ Load a single-precision (32-bit) floating-point element from memory into all elements of "dst
_mm_loadr_ps                        │ 0    │ SSE_ALL │ SSE                            │ Load                      │                   │ yes         │ Load 4 single-precision (32-bit) floating-point elements from memory into "dst" in reverse order. mem_addr must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_movelh_ps                       │ 0    │ SSE_ALL │ SSE                            │ Move                      │                   │ no          │ Move the lower 2 single-precision (32-bit) floating-point elements from "b" to the upper 2 elements of "dst", and copy the lower 2 elements from "a" to the lower 2 elements of "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_set_ps                          │ 0    │ SSE_ALL │ SSE                            │ Set                       │                   │ yes         │ Set packed single-precision (32-bit) floating-point elements in "dst" with the supplied values
_mm_set_ps1                         │ 0    │ SSE_ALL │ SSE                            │ Set                       │                   │ yes         │ Broadcast single-precision (32-bit) floating-point value "a" to all elements of "dst
_mm_setzero_ps                      │ 0    │ SSE_ALL │ SSE                            │ Set                       │                   │ no          │ Return vector of type __m128 with all elements set to zero
_mm_store1_ps                       │ 0    │ SSE_ALL │ SSE                            │ Store                     │                   │ yes         │ Store the lower single-precision (32-bit) floating-point element from "a" into 4 contiguous elements in memory. "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_store_ps1                       │ 0    │ SSE_ALL │ SSE                            │ Store                     │                   │ yes         │ Store the lower single-precision (32-bit) floating-point element from "a" into 4 contiguous elements in memory. "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_storer_ps                       │ 0    │ SSE_ALL │ SSE                            │ Store                     │                   │ yes         │ Store 4 single-precision (32-bit) floating-point elements from "a" into memory in reverse order. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_stream_ps                       │ 0    │ SSE_ALL │ SSE                            │ Store                     │                   │ no          │ Store 128-bits (composed of 4 packed single-precision (32-bit) floating-point elements) from "a" into memory using a non-temporal memory hint. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_madd_epi16                      │ 0    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Horizontally add adjacent pairs of intermediate 32-bit integers, and pack the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_mulhi_epi16                     │ 0    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply the packed signed 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_mulhi_epu16                     │ 0    │ SSE_ALL │ SSE2                           │ Arithmetic                │                   │ no          │ Multiply the packed unsigned 16-bit integers in "a" and "b", producing intermediate 32-bit integers, and store the high 16 bits of the intermediate integers in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_cvtpd_epi32                     │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed double-precision (64-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtps_epi32                     │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert packed single-precision (32-bit) floating-point elements in "a" to packed 32-bit integers, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
_mm_cvtsd_si32                      │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer, and store the result in "dst
_mm_cvtsd_si64                      │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtsd_si64x                     │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer, and store the result in "dst
_mm_cvtsi128_si64x                  │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy the lower 64-bit integer in "a" to "dst
_mm_cvtsi32_si128                   │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy 32-bit integer "a" to the lower elements of "dst", and zero the upper elements of "dst
_mm_cvtsi64x_si128                  │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Copy 64-bit integer "a" to the lower element of "dst", and zero the upper element
_mm_cvttsd_si32                     │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 32-bit integer with truncation, and store the result in "dst
_mm_cvttsd_si64                     │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_cvttsd_si64x                    │ 0    │ SSE_ALL │ SSE2                           │ Convert                   │                   │ no          │ Convert the lower double-precision (64-bit) floating-point element in "a" to a 64-bit integer with truncation, and store the result in "dst
_mm_load1_pd                        │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ yes         │ Load a double-precision (64-bit) floating-point element from memory into both elements of "dst
_mm_load_pd1                        │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ yes         │ Load a double-precision (64-bit) floating-point element from memory into both elements of "dst
_mm_loadh_pd                        │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load a double-precision (64-bit) floating-point element from memory into the upper element of "dst", and copy the lower element from "a" to "dst". "mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_loadl_epi64                     │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load 64-bit integer from memory into the first element of "dst
_mm_loadl_pd                        │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load a double-precision (64-bit) floating-point element from memory into the lower element of "dst", and copy the upper element from "a" to "dst". "mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_loadr_pd                        │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ yes         │ Load 2 double-precision (64-bit) floating-point elements from memory into "dst" in reverse order. mem_addr must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_loadu_si16                      │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ yes         │ Load unaligned 16-bit integer from memory into the first element of "dst
_mm_loadu_si32                      │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load unaligned 32-bit integer from memory into the first element of "dst
_mm_loadu_si64                      │ 0    │ SSE_ALL │ SSE2                           │ Load                      │                   │ no          │ Load unaligned 64-bit integer from memory into the first element of "dst
_mm_set1_epi64x                     │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast 64-bit integer "a" to all elements of "dst". This intrinsic may generate the "vpbroadcastq
_mm_set_epi16                       │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 16-bit integers in "dst" with the supplied values
_mm_set_epi32                       │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 32-bit integers in "dst" with the supplied values
_mm_set_epi8                        │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed 8-bit integers in "dst" with the supplied values
_mm_set_pd                          │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Set packed double-precision (64-bit) floating-point elements in "dst" with the supplied values
_mm_set_pd1                         │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ yes         │ Broadcast double-precision (64-bit) floating-point value "a" to all elements of "dst
_mm_setzero_pd                      │ 0    │ SSE_ALL │ SSE2                           │ Set                       │                   │ no          │ Return vector of type __m128d with all elements set to zero.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_sll_epi16                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm_sll_epi32                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm_sll_epi64                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" left by "count" while shifting in zeros, and store the results in "dst
_mm_sra_epi16                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
_mm_sra_epi32                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in sign bits, and store the results in "dst
_mm_srl_epi16                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 16-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm_srl_epi32                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 32-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm_srl_epi64                       │ 0    │ SSE_ALL │ SSE2                           │ Shift                     │                   │ no          │ Shift packed 64-bit integers in "a" right by "count" while shifting in zeros, and store the results in "dst
_mm_maskmoveu_si128                 │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Conditionally store 8-bit integer elements from "a" into memory using "mask" (elements are not stored when the highest bit is not set in the corresponding element) and a non-temporal memory hint. "mem_addr" does not need to be aligned on any particular boundary.                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_store1_pd                       │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ yes         │ Store the lower double-precision (64-bit) floating-point element from "a" into 2 contiguous elements in memory. "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_store_pd1                       │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ yes         │ Store the lower double-precision (64-bit) floating-point element from "a" into 2 contiguous elements in memory. "mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_storel_epi64                    │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 64-bit integer from the first element of "a" into memory.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_storel_pd                       │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store the lower double-precision (64-bit) floating-point element from "a" into memory
_mm_storer_pd                       │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ yes         │ Store 2 double-precision (64-bit) floating-point elements from "a" into memory in reverse order. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_storeu_si16                     │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ yes         │ Store 16-bit integer from the first element of "a" into memory. "mem_addr" does not need to be aligned on any particular boundary
_mm_storeu_si32                     │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 32-bit integer from the first element of "a" into memory. "mem_addr" does not need to be aligned on any particular boundary
_mm_storeu_si64                     │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 64-bit integer from the first element of "a" into memory. "mem_addr" does not need to be aligned on any particular boundary
_mm_stream_pd                       │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits (composed of 2 packed double-precision (64-bit) floating-point elements) from "a" into memory using a non-temporal memory hint. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_stream_si128                    │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 128-bits of integer data from "a" into memory using a non-temporal memory hint.  	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_stream_si32                     │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 32-bit integer "a" into memory using a non-temporal hint to minimize cache pollution. If the cache line containing address "mem_addr" is already in the cache, the cache will be updated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_stream_si64                     │ 0    │ SSE_ALL │ SSE2                           │ Store                     │                   │ no          │ Store 64-bit integer "a" into memory using a non-temporal hint to minimize cache pollution. If the cache line containing address "mem_addr" is already in the cache, the cache will be updated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_addsub_pd                       │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Alternatively add and subtract packed double-precision (64-bit) floating-point elements in "a" to/from packed elements in "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_addsub_ps                       │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Alternatively add and subtract packed single-precision (32-bit) floating-point elements in "a" to/from packed elements in "b", and store the results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
_mm_hadd_pd                         │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of double-precision (64-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm_hadd_ps                         │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of single-precision (32-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm_hsub_pd                         │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of double-precision (64-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm_hsub_ps                         │ 0    │ SSE_ALL │ SSE3                           │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of single-precision (32-bit) floating-point elements in "a" and "b", and pack the results in "dst
_mm_lddqu_si128                     │ 0    │ SSE_ALL │ SSE3                           │ Load                      │                   │ no          │ Load 128-bits of integer data from unaligned memory into "dst". This intrinsic may perform better than "_mm_loadu_si128" when the data crosses a cache line boundary.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
_mm_loaddup_pd                      │ 0    │ SSE_ALL │ SSE3                           │ Load                      │                   │ no          │ Load a double-precision (64-bit) floating-point element from memory into both elements of "dst
_mm_movedup_pd                      │ 0    │ SSE_ALL │ SSE3                           │ Move                      │                   │ no          │ Duplicate the low double-precision (64-bit) floating-point element from "a", and store the results in "dst
_mm_moveldup_ps                     │ 0    │ SSE_ALL │ SSE3                           │ Move                      │                   │ no          │ Duplicate even-indexed single-precision (32-bit) floating-point elements from "a", and store the results in "dst
_mm_dp_pd                           │ 0    │ SSE_ALL │ SSE4.1                         │ Arithmetic                │                   │ no          │ Conditionally multiply the packed double-precision (64-bit) floating-point elements in "a" and "b" using the high 4 bits in "imm8", sum the four products, and conditionally store the sum in "dst" using the low 4 bits of "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_dp_ps                           │ 0    │ SSE_ALL │ SSE4.1                         │ Arithmetic                │                   │ no          │ Conditionally multiply the packed single-precision (32-bit) floating-point elements in "a" and "b" using the high 4 bits in "imm8", sum the four products, and conditionally store the sum in "dst" using the low 4 bits of "imm8".                                                                                                                                                                                                                                                                                                                                                                                                                                          
_mm_mul_epi32                       │ 0    │ SSE_ALL │ SSE4.1                         │ Arithmetic                │                   │ no          │ Multiply the low signed 32-bit integers from each packed 64-bit element in "a" and "b", and store the signed 64-bit results in "dst
_mm_stream_load_si128               │ 0    │ SSE_ALL │ SSE4.1                         │ Load                      │                   │ no          │ Load 128-bits of integer data from memory into "dst" using a non-temporal memory hint. 	"mem_addr" must be aligned on a 16-byte boundary or a general-protection exception may be generated.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_test_all_ones                   │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ yes         │ Compute the bitwise NOT of "a" and then AND with a 128-bit vector containing all 1's, and return 1 if the result is zero, otherwise return
_mm_test_all_zeros                  │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "mask", and return 1 if the result is zero, otherwise return
_mm_test_mix_ones_zeros             │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "mask", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "mask", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                                                                                                                                                                                                                                      
_mm_testc_si128                     │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return the "CF" value.                                                                                                                                                                                                                                                                                                                                                                             
_mm_testnzc_si128                   │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return 1 if both the "ZF" and "CF" values are zero, otherwise return 0.                                                                                                                                                                                                                                                                                                                            
_mm_testz_si128                     │ 0    │ SSE_ALL │ SSE4.1                         │ Logical                   │                   │ no          │ Compute the bitwise AND of 128 bits (representing integer data) in "a" and "b", and set "ZF" to 1 if the result is zero, otherwise set "ZF" to 0. Compute the bitwise NOT of "a" and then AND with "b", and set "CF" to 1 if the result is zero, otherwise set "CF" to 0. Return the "ZF" value.                                                                                                                                                                                                                                                                                                                                                                             
_mm_mpsadbw_epu8                    │ 0    │ SSE_ALL │ SSE4.1                         │ Miscellaneous             │                   │ no          │ Compute the sum of absolute differences (SADs) of quadruplets of unsigned 8-bit integers in "a" compared to those in "b", and store the 16-bit results in "dst". 	Eight SADs are performed using one quadruplet from "b" and eight quadruplets from "a". One quadruplet is selected from "b" starting at on the offset specified in "imm8". Eight quadruplets are formed from sequential 8-bit integers selected from "a" starting at the offset specified in "imm8".                                                                                                                                                                                                        
_mm_packus_epi32                    │ 0    │ SSE_ALL │ SSE4.1                         │ Miscellaneous             │                   │ no          │ Convert packed signed 32-bit integers from "a" and "b" to packed 16-bit integers using unsigned saturation, and store the results in "dst
_mm_ceil_pd                         │ 0    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" up to an integer value, and store the results as packed double-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_ceil_ps                         │ 0    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" up to an integer value, and store the results as packed single-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
_mm_floor_pd                        │ 0    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed double-precision (64-bit) floating-point elements in "a" down to an integer value, and store the results as packed double-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_floor_ps                        │ 0    │ SSE_ALL │ SSE4.1                         │ Special Math Functions    │                   │ no          │ Round the packed single-precision (32-bit) floating-point elements in "a" down to an integer value, and store the results as packed single-precision floating-point elements in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
_mm_blend_epi16                     │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Blend packed 16-bit integers from "a" and "b" using control mask "imm8", and store the results in "dst
_mm_extract_epi32                   │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Extract a 32-bit integer from "a", selected with "imm8", and store the result in "dst
_mm_extract_epi64                   │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Extract a 64-bit integer from "a", selected with "imm8", and store the result in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
_mm_extract_epi8                    │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Extract an 8-bit integer from "a", selected with "imm8", and store the result in the lower element of "dst
_mm_extract_ps                      │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Extract a single-precision (32-bit) floating-point element from "a", selected with "imm8", and store the result in "dst
_mm_insert_ps                       │ 0    │ SSE_ALL │ SSE4.1                         │ Swizzle                   │                   │ no          │ Copy "a" to "tmp", then insert a single-precision (32-bit) floating-point element from "b" into "tmp" using the control in "imm8". Store "tmp" to "dst" using the mask in "imm8" (elements are zeroed out when the corresponding bit is set).                                                                                                                                                                                                                                                                                                                                                                                                                                
_mm_hadd_epi16                      │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of 16-bit integers in "a" and "b", and pack the signed 16-bit results in "dst
_mm_hadd_epi32                      │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of 32-bit integers in "a" and "b", and pack the signed 32-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
_mm_hadds_epi16                     │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally add adjacent pairs of signed 16-bit integers in "a" and "b" using saturation, and pack the signed 16-bit results in "dst
_mm_hsub_epi16                      │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of 16-bit integers in "a" and "b", and pack the signed 16-bit results in "dst
_mm_hsub_epi32                      │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of 32-bit integers in "a" and "b", and pack the signed 32-bit results in "dst
_mm_hsubs_epi16                     │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Horizontally subtract adjacent pairs of signed 16-bit integers in "a" and "b" using saturation, and pack the signed 16-bit results in "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
_mm_maddubs_epi16                   │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Vertically multiply each unsigned 8-bit integer from "a" with the corresponding signed 8-bit integer from "b", producing intermediate signed 16-bit integers. Horizontally add adjacent pairs of intermediate signed 16-bit integers, and pack the saturated results in "dst".                                                                                                                                                                                                                                                                                                                                                                                               
_mm_mulhrs_epi16                    │ 0    │ SSE_ALL │ SSSE3                          │ Arithmetic                │                   │ no          │ Multiply packed signed 16-bit integers in "a" and "b", producing intermediate signed 32-bit integers. Truncate each intermediate integer to the 18 most significant bits, round by adding 1, and store bits [16:1] to "dst".                                                                                                                                                                                                                                                                                                                                                                                                                                                 
